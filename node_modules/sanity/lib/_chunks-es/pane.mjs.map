{"version":3,"file":"pane.mjs","sources":["../../src/structure/diffView/hooks/useCreatePathSyncChannel.ts","../../src/structure/diffView/constants.ts","../../src/structure/diffView/hooks/useDiffViewRouter.ts","../../src/structure/diffView/types/diffViewMode.ts","../../src/structure/diffView/hooks/useDiffViewState.ts","../../src/structure/diffView/hooks/useScrollMirror.tsx","../../src/structure/diffView/utils/findRelease.ts","../../src/structure/diffView/versionMode/components/VersionModeHeader.tsx","../../src/structure/diffView/components/DialogLayout.ts","../../src/structure/panes/document/document-layout/pickDocumentLayoutComponent.ts","../../src/structure/diffView/hooks/usePathSyncChannel.ts","../../src/structure/diffView/components/Scroller.ts","../../src/structure/diffView/components/DiffViewPane.tsx","../../src/structure/diffView/components/EditReferenceLinkComponent.tsx","../../src/structure/diffView/components/DiffView.tsx","../../src/structure/diffView/plugin/DiffViewDocumentLayout.tsx","../../src/structure/components/pane/constants.ts","../../src/structure/components/pane/usePaneLayout.ts","../../src/structure/components/pane/PaneDivider.tsx","../../src/structure/components/pane/Pane.tsx","../../src/structure/components/pane/PaneContent.styles.tsx","../../src/structure/components/pane/usePane.ts","../../src/structure/components/pane/PaneContent.tsx","../../src/structure/util/toLowerCaseNoSpaces.tsx","../../src/structure/components/pane/PaneMenuButtonItem.tsx","../../src/structure/components/pane/PaneContextMenuButton.tsx","../../src/structure/components/pane/PaneFooter.styles.tsx","../../src/structure/components/pane/PaneFooter.tsx","../../src/structure/components/pane/PaneHeader.styles.tsx","../../src/structure/components/pane/PaneHeader.tsx","../../src/structure/components/pane/PaneHeaderActionButton.tsx","../../src/structure/components/pane/PaneLayout.styles.tsx","../../src/structure/components/pane/helpers/_calcPaneResize.ts","../../src/structure/components/pane/helpers/_getDOMPath.ts","../../src/structure/components/pane/helpers/_sortElements.ts","../../src/structure/components/pane/paneLayoutController.ts","../../src/structure/components/pane/PaneLayout.tsx","../../src/structure/panes/error/ErrorPane.tsx","../../src/structure/components/Delay.tsx","../../src/structure/panes/loading/getWaitMessages.ts","../../src/structure/panes/loading/LoadingPane.tsx","../../src/structure/panes/document/useDocumentPane.tsx","../../src/structure/panes/document/comments/CommentsWrapper.tsx","../../src/structure/useStructureTool.ts","../../src/structure/panes/document/constants.ts","../../src/structure/panes/document/DocumentInspectorMenuItemsResolver.tsx","../../src/structure/panes/document/useDocumentTitle.ts","../../src/structure/panes/document/DocumentOperationResults.tsx","../../src/structure/components/paneItem/helpers.tsx","../../src/structure/hasObsoleteDraft.ts","../../src/structure/mustChooseNewDocumentDestination.ts","../../src/structure/panes/document/documentInspector/DocumentInspectorHeader.tsx","../../src/structure/panes/document/documentInspector/DocumentInspectorPanel.tsx","../../src/structure/useStructureToolSetting.ts","../../src/structure/panes/document/inspectDialog/constants.ts","../../src/structure/panes/document/inspectDialog/helpers.ts","../../src/structure/panes/document/inspectDialog/InspectDialog.styles.tsx","../../src/structure/panes/document/inspectDialog/Search.tsx","../../src/structure/panes/document/inspectDialog/InspectDialog.tsx","../../src/structure/panes/document/documentPanel/banners/Banner.tsx","../../src/structure/panes/document/documentPanel/banners/DeletedDocumentBanners.tsx","../../src/structure/panes/document/documentPanel/banners/DeprecatedDocumentTypeBanner.tsx","../../src/structure/components/requestPermissionDialog/__telemetry__/RequestPermissionDialog.telemetry.ts","../../src/structure/components/requestPermissionDialog/RequestPermissionDialog.tsx","../../src/structure/components/requestPermissionDialog/useRoleRequestsStatus.tsx","../../src/structure/panes/document/documentPanel/banners/InsufficientPermissionBanner.tsx","../../src/structure/panes/document/documentPanel/banners/ReferenceChangedBanner.tsx","../../src/structure/panes/document/documentPanel/banners/ScheduledDraftOverrideBanner.tsx","../../src/structure/components/paneRouter/usePaneRouter.ts","../../src/structure/panes/document/documentPanel/banners/ArchivedReleaseDocumentBanner.tsx","../../src/structure/panes/document/documentPanel/banners/CanvasLinkedBanner.tsx","../../src/structure/panes/document/documentPanel/banners/ChooseNewDocumentDestinationBanner.tsx","../../src/structure/panes/document/documentPanel/banners/CreateLinkedBanner.tsx","../../src/structure/panes/document/documentPanel/banners/DocumentNotInReleaseBanner.tsx","../../src/structure/panes/document/documentPanel/banners/__telemetry__/DraftLiveEditBanner.telemetry.ts","../../src/structure/panes/document/documentPanel/banners/ObsoleteDraftBanner.tsx","../../src/structure/panes/document/documentPanel/banners/OpenReleaseToEditBanner.tsx","../../src/structure/panes/document/documentPanel/banners/RevisionNotFoundBanner.tsx","../../src/structure/panes/document/documentPanel/banners/ScheduledReleaseBanner.tsx","../../src/structure/panes/document/documentPanel/banners/UnpublishedDocumentBanner.tsx","../../src/structure/panes/document/documentPanel/documentViews/FormHeader.tsx","../../src/structure/panes/document/documentPanel/documentViews/FormView.tsx","../../src/structure/panes/document/documentPanel/header/DocumentHeaderTabs.tsx","../../src/structure/panes/document/documentPanel/header/DocumentHeaderTitle.tsx","../../src/structure/panes/document/documentPanel/header/FavoriteToggle.tsx","../../src/structure/panes/document/documentPanel/header/DocumentPanelSubHeader.tsx","../../src/structure/panes/document/documentPanel/DocumentPanel.tsx","../../src/structure/menuNodes.ts","../../src/structure/constants.ts","../../src/structure/panes/document/statusBar/dialogs/constants.ts","../../src/structure/panes/document/statusBar/dialogs/ConfirmDialog.tsx","../../src/structure/panes/document/statusBar/dialogs/ModalDialog.tsx","../../src/structure/panes/document/statusBar/dialogs/PopoverDialog.tsx","../../src/structure/panes/document/statusBar/ActionStateDialog.tsx","../../src/structure/panes/document/statusBar/ActionMenuButton.tsx","../../src/structure/documentActions/DeleteAction.tsx","../../src/structure/documentActions/DiscardChangesAction.tsx","../../src/structure/documentActions/DuplicateAction.tsx","../../src/structure/documentActions/HistoryRestoreAction.tsx","../../src/structure/documentActions/__telemetry__/documentActions.telemetry.ts","../../src/structure/documentActions/PublishAction.tsx","../../src/structure/documentActions/UnpublishAction.tsx","../../src/structure/panes/document/statusBar/DocumentStatusBarActions.tsx","../../src/structure/panes/document/documentPanel/header/hook/useChipScrollPosition.tsx","../../src/structure/panes/document/documentPanel/header/perspective/DocumentPerspectiveList.tsx","../../src/structure/panes/document/documentPanel/header/DocumentPanelHeader.tsx","../../src/structure/components/spacerButton/SpacerButton.tsx","../../src/structure/panes/document/statusBar/DocumentBadges.tsx","../../src/structure/panes/document/timeline/constants.ts","../../src/structure/panes/document/timeline/helpers.ts","../../src/structure/panes/document/timeline/expandableTimelineItemButton.tsx","../../src/structure/panes/document/timeline/timeline.styled.tsx","../../src/structure/panes/document/timeline/timelineI18n.ts","../../src/structure/panes/document/timeline/userAvatarStack.tsx","../../src/structure/panes/document/timeline/timelineItem.tsx","../../src/structure/panes/document/timeline/utils.ts","../../src/structure/panes/document/timeline/timeline.tsx","../../src/structure/panes/document/timeline/TimelineError.tsx","../../src/structure/panes/document/timeline/timelineMenu.tsx","../../src/structure/panes/document/statusBar/DocumentStatusPulse/AnimatedStatusIcon.tsx","../../src/structure/panes/document/statusBar/DocumentStatusPulse/DocumentStatusPulse.tsx","../../src/structure/panes/document/statusBar/DocumentStatusLine.tsx","../../src/structure/panes/document/statusBar/RevisionStatusLine.tsx","../../src/structure/panes/document/statusBar/useResizeObserver.ts","../../src/structure/panes/document/statusBar/DocumentStatusBar.tsx","../../src/structure/panes/document/keyboardShortcuts/DocumentActionShortcuts.tsx","../../src/structure/panes/document/menuItems.ts","../../src/structure/panes/document/document-layout/DocumentLayoutError.tsx","../../src/structure/panes/document/document-layout/DocumentLayoutFooter.tsx","../../src/structure/panes/document/document-layout/DocumentLayout.tsx","../../src/structure/panes/document/document-layout/useDocumentLayoutComponent.ts","../../src/structure/hooks/useDocumentLastRev.ts","../../src/structure/panes/document/__telemetry__/documentPanes.telemetry.ts","../../src/structure/panes/document/getInitialValueTemplateOpts.ts","../../src/structure/panes/document/useDocumentPaneInitialValue.ts","../../src/structure/panes/document/useDocumentPaneInspector.ts","../../src/structure/panes/document/usePreviewUrl.ts","../../src/structure/panes/document/DocumentPaneProvider.tsx","../../src/structure/panes/document/DocumentEventsPane.tsx","../../src/structure/panes/document/DocumentPaneLegacyTimeline.tsx","../../src/structure/panes/document/DocumentPerspectiveProvider.tsx","../../src/structure/panes/document/DocumentPaneProviderWrapper.tsx","../../src/structure/panes/document/useResetHistoryParams.ts","../../src/structure/panes/document/DocumentPane.tsx","../../src/structure/components/paneRouter/BackLink.tsx","../../src/structure/components/paneRouter/ChildLink.tsx","../../src/structure/components/paneRouter/ParameterizedLink.tsx","../../src/structure/components/paneRouter/ReferenceChildLink.tsx","../../src/structure/components/paneRouter/PaneRouterProvider.tsx","../../src/structure/panes/unknown/UnknownPaneType.tsx","../../src/structure/panes/StructureToolPane.tsx","../../src/structure/components/DocTitle.tsx","../../src/structure/components/confirmDeleteDialog/ConfirmDeleteDialogBody.styles.tsx","../../src/structure/components/paneItem/PaneItemPreview.tsx","../../src/structure/components/confirmDeleteDialog/ReferencePreviewLink.tsx","../../src/structure/components/confirmDeleteDialog/ConfirmDeleteDialogBody.tsx","../../src/structure/components/confirmDeleteDialog/useReferringDocuments.ts","../../src/structure/components/confirmDeleteDialog/ConfirmDeleteDialog.tsx","../../src/structure/components/confirmDeleteDialog/index.tsx","../../src/structure/components/IntentButton.tsx","../../src/structure/components/paneHeaderActions/InsufficientPermissionsMessageTooltip.tsx","../../src/structure/components/paneHeaderActions/PaneHeaderCreateButton.tsx","../../src/structure/components/paneHeaderActions/PaneHeaderActions.tsx","../../src/structure/components/MissingSchemaType.tsx","../../src/structure/components/paneItem/PaneItem.tsx","../../src/structure/components/RenderActionCollectionState.tsx","../../src/structure/components/RenderBadgeCollectionState.tsx","../../src/structure/panes/documentList/constants.ts","../../src/structure/panes/documentList/DocumentListPaneContent.tsx","../../src/structure/panes/documentList/helpers.ts","../../src/structure/panes/documentList/listenSearchQuery.ts","../../src/structure/panes/documentList/useDocumentList.ts","../../src/structure/panes/documentList/DocumentListPane.tsx","../../src/structure/panes/documentList/PaneHeader.tsx","../../src/structure/panes/documentList/sheetList/DocumentSheetListSelect.tsx","../../src/structure/panes/documentList/sheetList/DocumentSheetListProvider.tsx","../../src/structure/panes/documentList/sheetList/SheetListCell.tsx","../../src/structure/panes/documentList/sheetList/useDocumentSheetColumns.tsx","../../src/structure/panes/documentList/sheetList/ColumnsControl.tsx","../../src/structure/panes/documentList/sheetList/DocumentSheetListFilter.tsx","../../src/structure/panes/documentList/sheetList/DocumentSheetListHeader.tsx","../../src/structure/panes/documentList/sheetList/DocumentSheetListPaginator.tsx","../../src/structure/panes/documentList/sheetList/useDocumentSheetListStore.ts","../../src/structure/panes/documentList/sheetList/useDocumentSheetList.ts","../../src/structure/panes/documentList/sheetList/DocumentSheetListPane.tsx","../../src/structure/panes/documentList/PaneContainer.tsx","../../src/structure/documentBadges/LiveEditBadge.ts","../../src/structure/getIntentState.ts","../../src/structure/panes/document/inspectors/changes/ChangesInspector.tsx","../../src/structure/panes/document/timeline/events/EventTimelineItem.tsx","../../src/structure/panes/document/timeline/events/PublishedEventMenu.tsx","../../src/structure/panes/document/timeline/events/EventsTimeline.tsx","../../src/structure/panes/document/timeline/events/EventsTimelineMenu.tsx","../../src/structure/panes/document/inspectors/changes/EventsInspector.tsx","../../src/structure/panes/document/inspectors/changes/EventsSelector.tsx","../../src/structure/panes/document/inspectors/changes/HistorySelector.tsx","../../src/structure/panes/document/inspectors/changes/ChangesTabs.tsx","../../src/structure/panes/document/inspectors/changes/index.ts","../../src/structure/panes/document/inspectors/validation/getPathTitles.ts","../../src/structure/panes/document/inspectors/validation/ValidationInspector.tsx","../../src/structure/panes/document/inspectors/validation/index.ts","../../src/structure/router.ts","../../src/structure/structureTool.ts"],"sourcesContent":["import {useMemo} from 'react'\nimport {Subject} from 'rxjs'\n\nimport {type PathSyncChannel, type PathSyncState} from '../types/pathSyncChannel'\n\n/**\n * @internal\n */\nexport function useCreatePathSyncChannel(): PathSyncChannel {\n  return useMemo(() => new Subject<PathSyncState>(), [])\n}\n","/**\n * @internal\n */\nexport const DIFF_VIEW_SEARCH_PARAMETER = 'diffView'\n\n/**\n * @internal\n */\nexport const DIFF_VIEW_PREVIOUS_DOCUMENT_SEARCH_PARAMETER = 'previousDocument'\n\n/**\n * @internal\n */\nexport const DIFF_VIEW_NEXT_DOCUMENT_SEARCH_PARAMETER = 'nextDocument'\n\n/**\n * @internal\n */\nexport const DIFF_SEARCH_PARAM_DELIMITER = ','\n","import {fromPairs, toPairs} from 'lodash'\nimport {useCallback} from 'react'\nimport {useRouter} from 'sanity/router'\n\nimport {\n  DIFF_SEARCH_PARAM_DELIMITER,\n  DIFF_VIEW_NEXT_DOCUMENT_SEARCH_PARAMETER,\n  DIFF_VIEW_PREVIOUS_DOCUMENT_SEARCH_PARAMETER,\n  DIFF_VIEW_SEARCH_PARAMETER,\n} from '../constants'\nimport {type DiffViewMode} from '../types/diffViewMode'\n\ntype NavigateDiffView = (\n  options: {\n    mode?: DiffViewMode\n  } & Partial<\n    Record<\n      'previousDocument' | 'nextDocument',\n      {\n        type: string\n        id: string\n      }\n    >\n  >,\n) => void\n\nexport interface DiffViewRouter {\n  navigateDiffView: NavigateDiffView\n  exitDiffView: () => void\n}\n\n/**\n * @internal\n */\nexport function useDiffViewRouter(): DiffViewRouter {\n  const {navigate, state: routerState} = useRouter()\n\n  const navigateDiffView = useCallback<NavigateDiffView>(\n    ({mode, previousDocument, nextDocument}) => {\n      const next = {\n        ...fromPairs(routerState._searchParams),\n        ...(mode\n          ? {\n              [DIFF_VIEW_SEARCH_PARAMETER]: mode,\n            }\n          : {}),\n        ...(previousDocument\n          ? {\n              [DIFF_VIEW_PREVIOUS_DOCUMENT_SEARCH_PARAMETER]: [\n                previousDocument.type,\n                previousDocument.id,\n              ].join(DIFF_SEARCH_PARAM_DELIMITER),\n            }\n          : {}),\n        ...(nextDocument\n          ? {\n              [DIFF_VIEW_NEXT_DOCUMENT_SEARCH_PARAMETER]: [nextDocument.type, nextDocument.id].join(\n                DIFF_SEARCH_PARAM_DELIMITER,\n              ),\n            }\n          : {}),\n      }\n\n      navigate({\n        ...routerState,\n        _searchParams: toPairs(next),\n      })\n    },\n    [navigate, routerState],\n  )\n\n  const exitDiffView = useCallback(() => {\n    navigate({\n      ...routerState,\n      _searchParams: (routerState._searchParams ?? []).filter(\n        ([key]) =>\n          ![\n            DIFF_VIEW_SEARCH_PARAMETER,\n            DIFF_VIEW_PREVIOUS_DOCUMENT_SEARCH_PARAMETER,\n            DIFF_VIEW_NEXT_DOCUMENT_SEARCH_PARAMETER,\n          ].includes(key),\n      ),\n    })\n  }, [navigate, routerState])\n\n  return {\n    navigateDiffView,\n    exitDiffView,\n  }\n}\n","/**\n * @internal\n */\nexport const diffViewModes = ['version'] as const\n\n/**\n * @internal\n */\nexport type DiffViewMode = (typeof diffViewModes)[number]\n","import {useEffect, useMemo} from 'react'\nimport {useRouter} from 'sanity/router'\n\nimport {\n  DIFF_SEARCH_PARAM_DELIMITER,\n  DIFF_VIEW_NEXT_DOCUMENT_SEARCH_PARAMETER,\n  DIFF_VIEW_PREVIOUS_DOCUMENT_SEARCH_PARAMETER,\n  DIFF_VIEW_SEARCH_PARAMETER,\n} from '../constants'\nimport {type DiffViewMode, diffViewModes} from '../types/diffViewMode'\n\nfunction isDiffViewMode(maybeDiffViewMode: unknown): maybeDiffViewMode is DiffViewMode {\n  return diffViewModes.includes(maybeDiffViewMode as DiffViewMode)\n}\n\ntype DiffViewState =\n  | {\n      isActive: true\n      state: 'ready'\n      mode: DiffViewMode\n      documents: Record<\n        'previous' | 'next',\n        {\n          type: string\n          id: string\n        }\n      >\n    }\n  | {\n      isActive: true\n      state: 'error'\n      mode: DiffViewMode\n      documents?: never\n    }\n  | {\n      isActive: false\n      state?: never\n      mode?: never\n      documents?: never\n    }\n\nexport function useDiffViewState({\n  onParamsError,\n}: {\n  onParamsError?: (errors: DiffViewStateErrorWithInput[]) => void\n} = {}): DiffViewState {\n  const {state: routerState} = useRouter()\n  const searchParams = new URLSearchParams(routerState._searchParams)\n  const previousDocument = searchParams.get(DIFF_VIEW_PREVIOUS_DOCUMENT_SEARCH_PARAMETER)\n  const nextDocument = searchParams.get(DIFF_VIEW_NEXT_DOCUMENT_SEARCH_PARAMETER)\n  const mode = searchParams.get(DIFF_VIEW_SEARCH_PARAMETER)\n  const anyParamSet = [previousDocument, nextDocument, mode].some((param) => param !== null)\n\n  const params = useMemo(\n    () =>\n      parseParams({\n        previousDocument: previousDocument ?? '',\n        nextDocument: nextDocument ?? '',\n        mode: mode ?? '',\n      }),\n    [mode, nextDocument, previousDocument],\n  )\n\n  useEffect(() => {\n    if (params.result === 'error' && anyParamSet) {\n      onParamsError?.(params.errors)\n    }\n  }, [anyParamSet, onParamsError, params])\n\n  if (params.result === 'error') {\n    return {\n      isActive: false,\n    }\n  }\n\n  return {\n    state: 'ready',\n    isActive: true,\n    ...params.params,\n  }\n}\n\ntype DiffViewStateError =\n  | 'invalidModeParam'\n  | 'invalidPreviousDocumentParam'\n  | 'invalidNextDocumentParam'\n\ntype DiffViewStateErrorWithInput = [error: DiffViewStateError, input: unknown]\n\ninterface ParamsSuccess {\n  result: 'success'\n  params: Pick<DiffViewState & {state: 'ready'}, 'mode' | 'documents'>\n}\n\ninterface ParamsError {\n  result: 'error'\n  errors: DiffViewStateErrorWithInput[]\n}\n\nfunction parseParams({\n  previousDocument,\n  nextDocument,\n  mode,\n}: {\n  previousDocument: string\n  nextDocument: string\n  mode: string\n}): ParamsSuccess | ParamsError {\n  const errors: DiffViewStateErrorWithInput[] = []\n\n  const [previousDocumentType, previousDocumentId] = previousDocument\n    .split(DIFF_SEARCH_PARAM_DELIMITER)\n    .filter(Boolean)\n\n  const [nextDocumentType, nextDocumentId] = nextDocument\n    .split(DIFF_SEARCH_PARAM_DELIMITER)\n    .filter(Boolean)\n\n  if (!isDiffViewMode(mode)) {\n    errors.push(['invalidModeParam', mode])\n  }\n\n  if (typeof previousDocumentType === 'undefined' || typeof previousDocumentId === 'undefined') {\n    errors.push(['invalidPreviousDocumentParam', previousDocument])\n  }\n\n  if (typeof nextDocumentType === 'undefined' || typeof nextDocumentId === 'undefined') {\n    errors.push(['invalidNextDocumentParam', nextDocument])\n  }\n\n  if (errors.length !== 0) {\n    return {\n      result: 'error',\n      errors,\n    }\n  }\n\n  return {\n    result: 'success',\n    params: {\n      mode,\n      documents: {\n        previous: {\n          type: previousDocumentType,\n          id: previousDocumentId,\n        },\n        next: {\n          type: nextDocumentType,\n          id: nextDocumentId,\n        },\n      },\n    },\n  } as ParamsSuccess\n}\n","import {useEffect} from 'react'\nimport ScrollMirror from 'scrollmirror'\n\n/**\n * Use the ScrollMirror library to synchronise the scroll position for an array of elements.\n *\n * @internal\n */\nexport function useScrollMirror(elements: (HTMLElement | null)[]): void {\n  useEffect(() => {\n    const existentElements = elements.filter((element) => element !== null)\n\n    if (existentElements.length === 0) {\n      return undefined\n    }\n\n    const scrollMirror = new ScrollMirror(existentElements)\n    return () => scrollMirror.destroy()\n  }, [elements])\n}\n","import {\n  getReleaseIdFromReleaseDocumentId,\n  getVersionFromId,\n  isDraftId,\n  isPublishedId,\n  type ReleaseDocument,\n} from 'sanity'\n\n/**\n * If the provided document id represents a version, find and return the corresponding release\n * document. Otherwise, return a string literal signifying whether the document id represents a\n * published or draft document.\n *\n * TODO: Return a type compatible with `TargetPerspective` (`\"draft\"` must be `\"drafts\"`).\n *\n * @internal\n */\nexport function findRelease(\n  documentId: string,\n  releases: ReleaseDocument[],\n): ReleaseDocument | 'published' | 'draft' | undefined {\n  if (isPublishedId(documentId)) {\n    return 'published'\n  }\n\n  if (isDraftId(documentId)) {\n    return 'draft'\n  }\n\n  return releases.find(\n    ({_id}) => getReleaseIdFromReleaseDocumentId(_id) === getVersionFromId(documentId),\n  )\n}\n","import {CloseIcon, LockIcon, TransferIcon} from '@sanity/icons'\nimport {\n  Box,\n  // eslint-disable-next-line no-restricted-imports -- we need more control over how the `Button` component is rendered\n  Button,\n  type ButtonTone,\n  Flex,\n  Menu,\n  // eslint-disable-next-line no-restricted-imports -- the `VersionModeHeader` component needs more control over how the `MenuItem` component is rendered\n  MenuItem,\n  Stack,\n  Text,\n} from '@sanity/ui'\n// eslint-disable-next-line @sanity/i18n/no-i18next-import -- figure out how to have the linter be fine with importing types-only\nimport {type TFunction} from 'i18next'\nimport {type ComponentProps, type ComponentType, useCallback, useMemo} from 'react'\nimport {\n  type DocumentLayoutProps,\n  formatRelativeLocalePublishDate,\n  getDraftId,\n  getPublishedId,\n  getReleaseIdFromReleaseDocumentId,\n  getReleaseTone,\n  getVersionFromId,\n  getVersionId,\n  isReleaseDocument,\n  isReleaseScheduledOrScheduling,\n  ReleaseAvatar,\n  type ReleaseDocument,\n  useActiveReleases,\n  useDocumentVersions,\n  useEditState,\n  useTranslation,\n  useWorkspace,\n} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {MenuButton} from '../../../../ui-components/menuButton/MenuButton'\nimport {structureLocaleNamespace} from '../../../i18n'\nimport {useDiffViewRouter} from '../../hooks/useDiffViewRouter'\nimport {useDiffViewState} from '../../hooks/useDiffViewState'\nimport {findRelease} from '../../utils/findRelease'\n\nconst VersionModeHeaderLayout = styled.header`\n  display: grid;\n  grid-area: header;\n  grid-template-columns: 1fr min-content 1fr;\n  border-block-end: 1px solid var(--card-border-color);\n`\n\nconst VersionModeHeaderLayoutSection = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\n/**\n * The header component that is rendered when diff view is being used to compare versions of a\n * document.\n *\n * @internal\n */\nexport const VersionModeHeader: ComponentType<\n  {state: 'pending' | 'ready' | 'error'} & Pick<DocumentLayoutProps, 'documentId'>\n> = ({documentId, state}) => {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {data: documentVersions} = useDocumentVersions({documentId})\n  const {exitDiffView, navigateDiffView} = useDiffViewRouter()\n  const {documents} = useDiffViewState()\n  const activeReleases = useActiveReleases()\n  const releasesIds = documentVersions.flatMap((id) => getVersionFromId(id) ?? [])\n\n  const releases = useMemo(() => {\n    return activeReleases.data.filter((release) => {\n      const releaseId = getReleaseIdFromReleaseDocumentId(release._id)\n      return typeof releaseId !== 'undefined' && releasesIds.includes(releaseId)\n    })\n  }, [activeReleases.data, releasesIds])\n\n  const onSelectPreviousRelease = useCallback(\n    (selectedDocumentId: string): void => {\n      if (typeof documents?.previous !== 'undefined') {\n        navigateDiffView({\n          previousDocument: {\n            ...documents.previous,\n            id: selectedDocumentId,\n          },\n        })\n      }\n    },\n    [documents?.previous, navigateDiffView],\n  )\n\n  const onSelectNextRelease = useCallback(\n    (selectedDocumentId: string): void => {\n      if (typeof documents?.next !== 'undefined') {\n        navigateDiffView({\n          nextDocument: {\n            ...documents.next,\n            id: selectedDocumentId,\n          },\n        })\n      }\n    },\n    [documents?.next, navigateDiffView],\n  )\n\n  return (\n    <VersionModeHeaderLayout>\n      <VersionModeHeaderLayoutSection>\n        <Box padding={4}>\n          <Text as=\"h1\" size={1} muted>\n            {t('compare-versions.title')}\n          </Text>\n        </Box>\n        {typeof documents?.previous !== 'undefined' && (\n          <VersionMenu\n            releases={releases}\n            onSelectRelease={onSelectPreviousRelease}\n            role=\"previous\"\n            documentId={documentId}\n            state={state}\n            document={documents.previous}\n          />\n        )}\n      </VersionModeHeaderLayoutSection>\n      <Flex align=\"center\" paddingX={3}>\n        <Text size={1}>\n          <TransferIcon />\n        </Text>\n      </Flex>\n      <VersionModeHeaderLayoutSection>\n        {typeof documents?.next !== 'undefined' && (\n          <VersionMenu\n            releases={releases}\n            onSelectRelease={onSelectNextRelease}\n            role=\"next\"\n            documentId={documentId}\n            state={state}\n            document={documents.next}\n          />\n        )}\n        <Box\n          padding={3}\n          style={{\n            justifySelf: 'end',\n          }}\n        >\n          <Button icon={CloseIcon} mode=\"bleed\" onClick={exitDiffView} padding={2} />\n        </Box>\n      </VersionModeHeaderLayoutSection>\n    </VersionModeHeaderLayout>\n  )\n}\n\ninterface VersionMenuProps {\n  state: 'pending' | 'ready' | 'error'\n  releases: ReleaseDocument[]\n  role: 'previous' | 'next'\n  onSelectRelease: (releaseId: string) => void\n  documentId: string\n  document: {\n    type: string\n    id: string\n  }\n}\n\nconst VersionMenu: ComponentType<VersionMenuProps> = ({\n  releases = [],\n  onSelectRelease,\n  role,\n  documentId,\n  document,\n}) => {\n  const {published, draft} = useEditState(getPublishedId(document.id), document.type)\n  const selected = useMemo(() => findRelease(document.id, releases), [document.id, releases])\n  const {t: tStructure} = useTranslation(structureLocaleNamespace)\n  const {t: tCore} = useTranslation()\n\n  const {\n    document: {\n      drafts: {enabled: isDraftModelEnabled},\n    },\n  } = useWorkspace()\n\n  return (\n    <MenuButton\n      id={role}\n      button={\n        <Button\n          type=\"button\"\n          mode=\"bleed\"\n          padding={2}\n          paddingRight={3}\n          radius=\"full\"\n          selected\n          {...getMenuButtonProps({selected, tCore, tStructure})}\n        />\n      }\n      menu={\n        <Menu>\n          {published && (\n            <VersionMenuItem\n              type=\"published\"\n              onSelect={onSelectRelease}\n              isSelected={selected === 'published'}\n              documentId={documentId}\n            />\n          )}\n          {isDraftModelEnabled && draft && (\n            <VersionMenuItem\n              type=\"draft\"\n              onSelect={onSelectRelease}\n              isSelected={selected === 'draft'}\n              documentId={documentId}\n            />\n          )}\n          {releases.map((release) => (\n            <VersionMenuItem\n              key={release._id}\n              release={release}\n              onSelect={onSelectRelease}\n              isSelected={typeof selected !== 'string' && selected?._id === release._id}\n              documentId={documentId}\n            />\n          ))}\n        </Menu>\n      }\n    />\n  )\n}\n\ntype VersionMenuItemProps = {\n  onSelect: (releaseId: string) => void\n  isSelected?: boolean\n  documentId: string\n} & (\n  | {\n      release: ReleaseDocument\n      type?: never\n    }\n  | {\n      type: 'published' | 'draft'\n      release?: never\n    }\n)\n\nconst VersionMenuItem: ComponentType<VersionMenuItemProps> = ({\n  type,\n  release,\n  onSelect,\n  isSelected,\n  documentId,\n}) => {\n  const {t: tCore} = useTranslation()\n  const {t: tStructure} = useTranslation(structureLocaleNamespace)\n\n  const onClick = useCallback(() => {\n    if (type === 'draft') {\n      onSelect(getDraftId(documentId))\n      return\n    }\n\n    if (type === 'published') {\n      onSelect(getPublishedId(documentId))\n      return\n    }\n\n    if (typeof release?._id !== 'undefined') {\n      onSelect(getVersionId(documentId, getReleaseIdFromReleaseDocumentId(release._id)))\n    }\n  }, [type, onSelect, documentId, release?._id])\n\n  if (type) {\n    const tone: ButtonTone = type === 'published' ? 'positive' : 'caution'\n\n    return (\n      <MenuItem padding={1} paddingRight={3} onClick={onClick} pressed={isSelected}>\n        <Flex gap={1}>\n          <ReleaseAvatar padding={2} tone={tone} />\n          <Box paddingY={2}>\n            <Text size={1} weight=\"medium\">\n              {tStructure(['compare-versions.status', type].join('.'))}\n            </Text>\n          </Box>\n        </Flex>\n      </MenuItem>\n    )\n  }\n\n  const tone: ButtonTone = release ? getReleaseTone(release) : 'neutral'\n\n  return (\n    <MenuItem padding={1} paddingRight={3} onClick={onClick} pressed={isSelected}>\n      <Flex gap={1}>\n        <ReleaseAvatar padding={2} tone={tone} />\n        <Stack flex={1} paddingY={2} paddingRight={2} space={2}>\n          <Text size={1} weight=\"medium\">\n            {release.metadata.title || tCore('release.placeholder-untitled-release')}\n          </Text>\n          {['asap', 'undecided'].includes(release.metadata.releaseType) && (\n            <Text muted size={1}>\n              {tCore(`release.type.${release.metadata.releaseType}`)}\n            </Text>\n          )}\n          {release.metadata.releaseType === 'scheduled' && (\n            <Text muted size={1}>\n              {formatRelativeLocalePublishDate(release)}\n            </Text>\n          )}\n        </Stack>\n        <Flex flex=\"none\">\n          {isReleaseScheduledOrScheduling(release) && (\n            <Box padding={2}>\n              <Text size={1}>\n                <LockIcon />\n              </Text>\n            </Box>\n          )}\n        </Flex>\n      </Flex>\n    </MenuItem>\n  )\n}\n\nfunction getMenuButtonProps({\n  selected,\n  tCore,\n  tStructure,\n}: {\n  selected?: ReleaseDocument | 'published' | 'draft'\n  tCore: TFunction\n  tStructure: TFunction\n}): Pick<ComponentProps<typeof Button>, 'text' | 'tone' | 'icon' | 'iconRight' | 'disabled'> {\n  if (typeof selected === 'undefined') {\n    return {\n      text: tCore('common.loading'),\n      tone: 'neutral',\n      disabled: true,\n    }\n  }\n\n  if (isReleaseDocument(selected)) {\n    const tone: ButtonTone = selected ? getReleaseTone(selected) : 'neutral'\n\n    return {\n      text: selected?.metadata.title || tCore('release.placeholder-untitled-release'),\n      icon: <ReleaseAvatar padding={1} tone={tone} />,\n      iconRight: selected && isReleaseScheduledOrScheduling(selected) ? <LockIcon /> : undefined,\n      tone,\n    }\n  }\n\n  const tone: ButtonTone = selected === 'published' ? 'positive' : 'caution'\n\n  return {\n    text: tStructure(['compare-versions.status', selected].join('.')),\n    icon: <ReleaseAvatar padding={1} tone={tone} />,\n    tone,\n  }\n}\n","import {styled} from 'styled-components'\n\nexport const DialogLayout = styled.div`\n  --offset-block: 40px;\n  display: grid;\n  height: calc(100vh - var(--offset-block));\n  min-height: 0;\n  overflow: hidden;\n  grid-template-areas:\n    'header header'\n    'previous-document next-document';\n  grid-template-columns: 1fr 1fr;\n  grid-template-rows: min-content minmax(0, 1fr);\n`\n","import {type ComponentType} from 'react'\nimport {type DocumentLayoutProps, type PluginOptions} from 'sanity'\n\n/**\n * Pick the document layout component when composing the component middleware chain.\n */\nexport function pickDocumentLayoutComponent(plugin: PluginOptions) {\n  return plugin.document?.components?.unstable_layout as ComponentType<\n    Omit<DocumentLayoutProps, 'renderDefault'>\n  >\n}\n","import {type Path} from '@sanity/types'\nimport {useCallback, useMemo} from 'react'\nimport deepEquals from 'react-fast-compare'\nimport {distinctUntilChanged, filter, map, type Observable} from 'rxjs'\n\nimport {type PathSyncChannelProps, type PathSyncState} from '../types/pathSyncChannel'\n\ntype Push = (state: PathSyncState) => void\n\n/**\n * Synchronise the open path between multiple document panes.\n *\n * @internal\n */\nexport function usePathSyncChannel({syncChannel, id}: PathSyncChannelProps): {\n  push: Push\n  path: Observable<Path>\n} {\n  const push = useCallback<Push>(\n    (state) => syncChannel.next({...state, source: id}),\n    [id, syncChannel],\n  )\n\n  const path = useMemo(\n    () =>\n      syncChannel.pipe(\n        distinctUntilChanged<PathSyncState>((previous, next) =>\n          deepEquals(previous.path, next.path),\n        ),\n        filter(({source}) => source !== id),\n        map((state) => state.path),\n      ),\n    [id, syncChannel],\n  )\n\n  return {\n    path,\n    push,\n  }\n}\n","import {styled} from 'styled-components'\n\nexport const Scroller = styled.div`\n  position: relative;\n  height: 100%;\n  overflow: auto;\n  scroll-behavior: smooth;\n  scrollbar-width: var(--scrollbar-width);\n  overscroll-behavior: contain;\n  will-change: scroll-position;\n`\n","import {type Path, type SanityDocument} from '@sanity/types'\nimport {\n  BoundaryElementProvider,\n  Card,\n  Container as UiContainer,\n  DialogProvider,\n  PortalProvider,\n} from '@sanity/ui'\nimport {noop} from 'lodash'\nimport {\n  type ComponentType,\n  type CSSProperties,\n  forwardRef,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport {\n  ChangeIndicatorsTracker,\n  createPatchChannel,\n  FormBuilder,\n  getPublishedId,\n  getVersionFromId,\n  isDraftId,\n  isPublishedId,\n  isVersionId,\n  LoadingBlock,\n  type TargetPerspective,\n  useActiveReleases,\n  useDocumentForm,\n  useEditState,\n  useMiddlewareComponents,\n  VirtualizerScrollInstanceProvider,\n} from 'sanity'\nimport {CommentsEnabledContext, ReviewChangesContext} from 'sanity/_singletons'\nimport {styled} from 'styled-components'\n\nimport {pickDocumentLayoutComponent} from '../../panes/document/document-layout/pickDocumentLayoutComponent'\nimport {usePathSyncChannel} from '../hooks/usePathSyncChannel'\nimport {type PathSyncChannel} from '../types/pathSyncChannel'\nimport {findRelease} from '../utils/findRelease'\nimport {Scroller} from './Scroller'\n\nconst DiffViewPaneLayout = styled(Card)`\n  position: relative;\n  grid-area: var(--grid-area);\n`\n\nconst Container = styled(UiContainer)`\n  width: auto;\n`\n\ninterface DiffViewPaneProps {\n  documentType: string\n  documentId: string\n  role: 'previous' | 'next'\n  scrollElement: HTMLElement | null\n  syncChannel: PathSyncChannel\n  compareDocument: {\n    type: string\n    id: string\n  }\n}\n\nexport const DiffViewPane = forwardRef<HTMLDivElement, DiffViewPaneProps>(function DiffViewPane(\n  {role, documentType, documentId, scrollElement, syncChannel, compareDocument},\n  ref,\n) {\n  const containerElement = useRef<HTMLDivElement | null>(null)\n  const [portalElement, setPortalElement] = useState<HTMLDivElement | null>(null)\n  const [boundaryElement, setBoundaryElement] = useState<HTMLDivElement | null>(null)\n\n  const DocumentLayout = useMiddlewareComponents({\n    pick: pickDocumentLayoutComponent,\n    defaultComponent: useCallback(\n      () => (\n        <DiffViewDocument\n          compareDocument={compareDocument}\n          documentId={documentId}\n          documentType={documentType}\n          role={role}\n          scrollElement={scrollElement}\n          syncChannel={syncChannel}\n        />\n      ),\n      [compareDocument, documentId, documentType, role, scrollElement, syncChannel],\n    ),\n  })\n\n  return (\n    <ReviewChangesContext.Provider\n      value={{\n        // Render the change indicators inertly, because the diff view modal does not currently\n        // provide a way to display document inspectors.\n        isInteractive: false,\n        onOpenReviewChanges: noop,\n        onSetFocus: noop,\n        isReviewChangesOpen: false,\n      }}\n    >\n      <ChangeIndicatorsTracker>\n        <VirtualizerScrollInstanceProvider\n          scrollElement={scrollElement}\n          containerElement={containerElement}\n        >\n          <BoundaryElementProvider element={boundaryElement}>\n            <DiffViewPaneLayout\n              ref={setBoundaryElement}\n              style={\n                {\n                  '--grid-area': `${role}-document`,\n                } as CSSProperties\n              }\n              borderLeft={role === 'next'}\n            >\n              <Scroller\n                ref={ref}\n                style={\n                  {\n                    // The scroll position is synchronised between panes. This style hides the\n                    // scrollbar for all panes except the one displaying the next document.\n                    '--scrollbar-width': role !== 'next' && 'none',\n                  } as CSSProperties\n                }\n              >\n                <PortalProvider element={portalElement}>\n                  <DialogProvider position=\"absolute\">\n                    <Container ref={containerElement} padding={4} width={1}>\n                      <DocumentLayout documentId={documentId} documentType={documentType} />\n                    </Container>\n                  </DialogProvider>\n                </PortalProvider>\n              </Scroller>\n              <div data-testid=\"diffView-document-panel-portal\" ref={setPortalElement} />\n            </DiffViewPaneLayout>\n          </BoundaryElementProvider>\n        </VirtualizerScrollInstanceProvider>\n      </ChangeIndicatorsTracker>\n    </ReviewChangesContext.Provider>\n  )\n})\n\nconst DiffViewDocument: ComponentType<DiffViewPaneProps> = ({\n  role,\n  documentType,\n  documentId,\n  syncChannel,\n  compareDocument,\n}) => {\n  const compareValue = useCompareValue({compareDocument})\n  const {data: releases} = useActiveReleases()\n  const [patchChannel] = useState(() => createPatchChannel())\n  const perspective = useMemo(() => findRelease(documentId, releases), [documentId, releases])\n\n  const {\n    formState,\n    onChange,\n    onFocus,\n    onBlur,\n    onSetActiveFieldGroup,\n    onSetCollapsedFieldSet,\n    onSetCollapsedPath,\n    collapsedFieldSets,\n    ready,\n    collapsedPaths,\n    schemaType,\n    value,\n    onProgrammaticFocus,\n    ...documentForm\n  } = useDocumentForm({\n    documentId: getPublishedId(documentId),\n    documentType,\n    selectedPerspectiveName: perspectiveName(documentId),\n    releaseId: getVersionFromId(documentId),\n    comparisonValue: compareValue,\n  })\n\n  const isLoading = formState === null || !ready\n\n  const pathSyncChannel = usePathSyncChannel({\n    id: role,\n    syncChannel,\n  })\n\n  const onPathOpen = useCallback(\n    (path: Path) => {\n      documentForm.onPathOpen(path)\n      pathSyncChannel.push({source: role, path})\n    },\n    [documentForm, pathSyncChannel, role],\n  )\n\n  useEffect(() => {\n    const subscription = pathSyncChannel.path.subscribe(onProgrammaticFocus)\n    return () => subscription.unsubscribe()\n  }, [onProgrammaticFocus, pathSyncChannel.path])\n\n  return isLoading ? (\n    <LoadingBlock showText />\n  ) : (\n    <CommentsEnabledContext.Provider\n      value={{\n        enabled: false,\n        mode: null,\n      }}\n    >\n      <FormBuilder\n        __internal_patchChannel={patchChannel}\n        id={`diffView-pane-${role}`}\n        onChange={onChange}\n        onPathFocus={onFocus}\n        onPathOpen={onPathOpen}\n        onPathBlur={onBlur}\n        onFieldGroupSelect={onSetActiveFieldGroup}\n        onSetFieldSetCollapsed={onSetCollapsedFieldSet}\n        onSetPathCollapsed={onSetCollapsedPath}\n        collapsedPaths={collapsedPaths}\n        collapsedFieldSets={collapsedFieldSets}\n        focusPath={formState.focusPath}\n        changed={formState.changed}\n        focused={formState.focused}\n        groups={formState.groups}\n        validation={formState.validation}\n        members={formState.members}\n        perspective={sanitizeBundleName(perspective)}\n        presence={formState.presence}\n        schemaType={schemaType}\n        value={value}\n        compareValue={compareValue}\n      />\n    </CommentsEnabledContext.Provider>\n  )\n}\n\nfunction perspectiveName(documentId: string): string | undefined {\n  if (isVersionId(documentId)) {\n    return getVersionFromId(documentId)\n  }\n\n  if (isPublishedId(documentId)) {\n    return 'published'\n  }\n\n  return undefined\n}\n\ntype UseCompareValueOptions = Pick<DiffViewPaneProps, 'compareDocument'>\n\n/**\n * Fetch the contents of `compareDocument` for comparison with another version of the document.\n */\nfunction useCompareValue({compareDocument}: UseCompareValueOptions): SanityDocument | undefined {\n  const compareDocumentEditState = useEditState(\n    getPublishedId(compareDocument.id),\n    compareDocument.type,\n    'low',\n    getVersionFromId(compareDocument.id),\n  )\n\n  return useMemo(() => {\n    if (isVersionId(compareDocument.id)) {\n      return compareDocumentEditState.version ?? undefined\n    }\n\n    if (isDraftId(compareDocument.id)) {\n      return compareDocumentEditState.draft ?? undefined\n    }\n\n    if (isPublishedId(compareDocument.id)) {\n      return compareDocumentEditState.published ?? undefined\n    }\n\n    return undefined\n  }, [\n    compareDocument.id,\n    compareDocumentEditState.draft,\n    compareDocumentEditState.published,\n    compareDocumentEditState.version,\n  ])\n}\n\n// TODO: Refactor `findRelease` to return a type compatible with `TargetPerspective` (`\"draft\"` must be `\"drafts\"`), so that `sanitizeBundleName` can be removed.\nfunction sanitizeBundleName(bundle: ReturnType<typeof findRelease>): TargetPerspective | undefined {\n  if (bundle === 'draft') {\n    return 'drafts'\n  }\n\n  return bundle\n}\n","import {type ReferenceInputOptions} from 'sanity'\nimport {useIntentLink} from 'sanity/router'\nimport {styled} from 'styled-components'\n\nconst Link = styled.a`\n  flex: 1;\n  text-decoration: none;\n  color: inherit;\n`\n\nexport const EditReferenceLinkComponent: ReferenceInputOptions['EditReferenceLinkComponent'] = ({\n  children,\n  documentId: _documentId,\n  documentType,\n}) => {\n  const {href} = useIntentLink({\n    intent: 'edit',\n    params: {\n      id: _documentId,\n      type: documentType,\n    },\n  })\n\n  return (\n    <Link href={href} target=\"_blank\" rel=\"noopener noreferrer\">\n      {children}\n    </Link>\n  )\n}\n","import {type ComponentType, useContext, useMemo, useState} from 'react'\nimport {type DocumentLayoutProps} from 'sanity'\nimport {ReferenceInputOptionsContext} from 'sanity/_singletons'\n\nimport {Dialog} from '../../../ui-components/dialog/Dialog'\nimport {useCreatePathSyncChannel} from '../hooks/useCreatePathSyncChannel'\nimport {useDiffViewRouter} from '../hooks/useDiffViewRouter'\nimport {useDiffViewState} from '../hooks/useDiffViewState'\nimport {useScrollMirror} from '../hooks/useScrollMirror'\nimport {VersionModeHeader} from '../versionMode/components/VersionModeHeader'\nimport {DialogLayout} from './DialogLayout'\nimport {DiffViewPane} from './DiffViewPane'\nimport {EditReferenceLinkComponent} from './EditReferenceLinkComponent'\n\nexport const DiffView: ComponentType<Pick<DocumentLayoutProps, 'documentId'>> = ({documentId}) => {\n  const {documents, state, mode} = useDiffViewState()\n  const {exitDiffView} = useDiffViewRouter()\n  const syncChannel = useCreatePathSyncChannel()\n  const [previousPaneElement, setPreviousPaneElement] = useState<HTMLElement | null>(null)\n  const [nextPaneElement, setNextPaneElement] = useState<HTMLElement | null>(null)\n  const referenceInputOptionsContext = useContext(ReferenceInputOptionsContext)\n\n  const diffViewReferenceInputOptionsContext = useMemo(\n    () => ({\n      ...referenceInputOptionsContext,\n      disableNew: true,\n      EditReferenceLinkComponent,\n    }),\n    [referenceInputOptionsContext],\n  )\n\n  useScrollMirror([previousPaneElement, nextPaneElement])\n\n  return (\n    <ReferenceInputOptionsContext.Provider value={diffViewReferenceInputOptionsContext}>\n      <Dialog\n        id=\"diffView\"\n        width=\"auto\"\n        onClose={exitDiffView}\n        padding={false}\n        __unstable_hideCloseButton\n      >\n        <DialogLayout>\n          {mode === 'version' && <VersionModeHeader documentId={documentId} state={state} />}\n          {state === 'ready' && (\n            <>\n              <DiffViewPane\n                documentType={documents.previous.type}\n                documentId={documents.previous.id}\n                role=\"previous\"\n                ref={setPreviousPaneElement}\n                scrollElement={previousPaneElement}\n                syncChannel={syncChannel}\n                compareDocument={documents.previous}\n              />\n              <DiffViewPane\n                documentType={documents.next.type}\n                documentId={documents.next.id}\n                role=\"next\"\n                ref={setNextPaneElement}\n                scrollElement={nextPaneElement}\n                syncChannel={syncChannel}\n                // The previous document's edit state is used to calculate the diff inroduced by the next document.\n                compareDocument={documents.previous}\n              />\n            </>\n          )}\n        </DialogLayout>\n      </Dialog>\n    </ReferenceInputOptionsContext.Provider>\n  )\n}\n","import {useToast} from '@sanity/ui'\nimport {type ComponentType, type PropsWithChildren} from 'react'\nimport {type DocumentLayoutProps, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../i18n'\nimport {DiffView} from '../components/DiffView'\nimport {useDiffViewState} from '../hooks/useDiffViewState'\n\nexport const DiffViewDocumentLayout: ComponentType<\n  PropsWithChildren<Pick<DocumentLayoutProps, 'documentId' | 'documentType'>>\n> = ({children, documentId}) => {\n  const toast = useToast()\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {isActive} = useDiffViewState({\n    onParamsError: (errors) => {\n      toast.push({\n        id: 'diffViewParamsParsingError',\n        status: 'error',\n        title: t('compare-version.error.invalidParams.title'),\n        description: (\n          <ul>\n            {errors.map(([error, input]) => (\n              <li key={error}>\n                {t(`compare-version.error.${error}`, {\n                  input,\n                })}\n              </li>\n            ))}\n          </ul>\n        ),\n      })\n    },\n  })\n\n  return (\n    <>\n      {children}\n      {isActive && <DiffView documentId={documentId} />}\n    </>\n  )\n}\n","/**\n * @internal\n */\nexport const PANE_DEBUG = false\n\n/**\n * @internal\n */\nexport const PANE_COLLAPSED_WIDTH = 51\n\n/**\n * @internal\n */\nexport const PANE_DEFAULT_MIN_WIDTH = PANE_COLLAPSED_WIDTH * 4\n","import {useContext} from 'react'\nimport {PaneLayoutContext} from 'sanity/_singletons'\n\nimport {type PaneLayoutContextValue} from './types'\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function usePaneLayout(): PaneLayoutContextValue {\n  const pane = useContext(PaneLayoutContext)\n\n  if (!pane) {\n    throw new Error('PaneLayout: missing context value')\n  }\n\n  return pane\n}\n","import {Layer} from '@sanity/ui'\nimport {useCallback, useState} from 'react'\nimport {styled} from 'styled-components'\n\nimport {usePaneLayout} from './usePaneLayout'\n\nconst Root = styled(Layer)`\n  position: relative;\n  width: 1px;\n  min-width: 1px;\n\n  &:before {\n    content: '';\n    display: block;\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    width: 1px;\n    background-color: var(--card-border-color);\n  }\n\n  &:not([data-disabled]) {\n    cursor: ew-resize;\n    width: 9px;\n    min-width: 9px;\n    margin: 0 -4px;\n\n    &:before {\n      left: 4px;\n    }\n\n    &:after {\n      content: '';\n      display: block;\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 9px;\n      bottom: 0;\n      background-color: var(--card-border-color);\n      opacity: 0;\n      transition: opacity 150ms;\n    }\n\n    &[data-dragging]:after,\n    &:hover:after {\n      opacity: 0.2;\n    }\n  }\n`\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function PaneDivider({\n  disabled,\n  element,\n}: {\n  disabled?: boolean\n  element: HTMLElement | null\n}) {\n  const {resize} = usePaneLayout()\n  const [dragging, setDragging] = useState(false)\n\n  const handleMouseDown = useCallback(\n    (event: any) => {\n      if (!element) return\n\n      setDragging(true)\n\n      event.preventDefault()\n\n      const startX = event.pageX\n\n      resize('start', element, 0)\n\n      const handleMouseMove = (e: MouseEvent) => {\n        e.preventDefault()\n\n        const deltaX = e.pageX - startX\n\n        resize('move', element, deltaX)\n      }\n\n      const handleMouseUp = (e: MouseEvent) => {\n        e.preventDefault()\n\n        setDragging(false)\n\n        window.removeEventListener('mousemove', handleMouseMove)\n        window.removeEventListener('mouseup', handleMouseUp)\n\n        resize('end', element, 0)\n      }\n\n      window.addEventListener('mousemove', handleMouseMove)\n      window.addEventListener('mouseup', handleMouseUp)\n    },\n    [element, resize],\n  )\n\n  return (\n    <Root\n      data-disabled={disabled ? '' : undefined}\n      data-dragging={dragging ? '' : undefined}\n      onMouseDown={handleMouseDown}\n    />\n  )\n}\n","import {BoundaryElementProvider, Card, type CardProps, Code, Flex} from '@sanity/ui'\nimport {\n  type ForwardedRef,\n  forwardRef,\n  type HTMLProps,\n  type ReactNode,\n  useCallback,\n  useImperativeHandle,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport {IsLastPaneProvider, LegacyLayerProvider} from 'sanity'\nimport {PaneContext} from 'sanity/_singletons'\nimport {styled} from 'styled-components'\n\nimport {PANE_COLLAPSED_WIDTH, PANE_DEBUG, PANE_DEFAULT_MIN_WIDTH} from './constants'\nimport {PaneDivider} from './PaneDivider'\nimport {usePaneLayout} from './usePaneLayout'\n\ninterface PaneProps {\n  children?: ReactNode\n  currentMinWidth?: number\n  currentMaxWidth?: number\n  flex?: number\n  id: string\n  minWidth?: number\n  maxWidth?: number\n  selected?: boolean\n}\n\nconst Root = styled(Card)`\n  outline: none;\n\n  // NOTE: This will render a border to the right side of each pane\n  // without taking up physical space.\n  box-shadow: 1px 0 0 var(--card-border-color);\n`\n\n/**\n * @hidden\n * @internal\n */\nexport const Pane = forwardRef(function Pane(\n  props: PaneProps &\n    Omit<CardProps, 'as' | 'overflow'> &\n    Omit<HTMLProps<HTMLDivElement>, 'as' | 'height' | 'hidden' | 'id' | 'style'>,\n  forwardedRef: ForwardedRef<HTMLDivElement>,\n) {\n  const {\n    children,\n    currentMinWidth: currentMinWidthProp,\n    currentMaxWidth: currentMaxWidthProp,\n    flex: flexProp = 1,\n    id,\n    minWidth: minWidthProp,\n    maxWidth: maxWidthProp,\n    selected = false,\n    ...restProps\n  } = props\n  const [rootElement, setRootElement] = useState<HTMLDivElement | null>(null)\n  const {\n    collapse,\n    collapsed: layoutCollapsed,\n    expand,\n    expandedElement,\n    mount,\n    panes,\n  } = usePaneLayout()\n  const pane = panes.find((p) => p.element === rootElement)\n  const paneIndex = pane && panes.indexOf(pane)\n  const nextPane = typeof paneIndex === 'number' ? panes[paneIndex + 1] : undefined\n  const isLast = paneIndex === panes.length - 1\n  const expanded = expandedElement === rootElement\n  const collapsed = layoutCollapsed ? false : pane?.collapsed || false\n  const nextCollapsed = nextPane?.collapsed || false\n  const ref = useRef<HTMLDivElement | null>(null)\n  const flex = pane?.flex ?? flexProp\n  const currentMinWidth = pane?.currentMinWidth ?? currentMinWidthProp\n  const currentMaxWidth = pane?.currentMaxWidth ?? currentMaxWidthProp\n\n  // Forward ref to parent\n  useImperativeHandle<HTMLDivElement | null, HTMLDivElement | null>(forwardedRef, () => ref.current)\n\n  const setRef = useCallback((refValue: HTMLDivElement | null) => {\n    setRootElement(refValue)\n    ref.current = refValue\n  }, [])\n\n  useLayoutEffect(() => {\n    if (!rootElement) return undefined\n    return mount(rootElement, {\n      currentMinWidth: currentMinWidthProp,\n      currentMaxWidth: currentMaxWidthProp,\n      flex: flexProp,\n      id,\n      minWidth: minWidthProp,\n      maxWidth: maxWidthProp,\n    })\n  }, [\n    currentMinWidthProp,\n    currentMaxWidthProp,\n    flexProp,\n    id,\n    minWidthProp,\n    maxWidthProp,\n    mount,\n    rootElement,\n  ])\n\n  const handleCollapse = useCallback(() => {\n    if (!rootElement) return\n    collapse(rootElement)\n  }, [collapse, rootElement])\n\n  const handleExpand = useCallback(() => {\n    if (!rootElement) return\n    expand(rootElement)\n  }, [expand, rootElement])\n\n  const contextValue = useMemo(\n    () => ({\n      collapse: handleCollapse,\n      collapsed: layoutCollapsed ? false : collapsed,\n      expand: handleExpand,\n      index: paneIndex,\n      isLast,\n      rootElement,\n    }),\n    [collapsed, handleCollapse, handleExpand, isLast, layoutCollapsed, paneIndex, rootElement],\n  )\n\n  const minWidth = useMemo(() => {\n    if (layoutCollapsed) {\n      return undefined\n    }\n\n    if (collapsed) return PANE_COLLAPSED_WIDTH\n\n    if (currentMinWidth === 0) {\n      return minWidthProp || PANE_DEFAULT_MIN_WIDTH\n    }\n\n    if (isLast) {\n      return minWidthProp || PANE_DEFAULT_MIN_WIDTH\n    }\n\n    return currentMinWidth || minWidthProp || PANE_DEFAULT_MIN_WIDTH\n  }, [collapsed, currentMinWidth, isLast, layoutCollapsed, minWidthProp])\n\n  const maxWidth = useMemo(() => {\n    if (collapsed) return PANE_COLLAPSED_WIDTH\n\n    if (layoutCollapsed && isLast) {\n      return undefined\n    }\n\n    if (isLast) {\n      if (maxWidthProp) {\n        return currentMaxWidth ?? maxWidthProp\n      }\n\n      return undefined\n    }\n\n    return currentMaxWidth ?? maxWidthProp\n  }, [collapsed, currentMaxWidth, isLast, layoutCollapsed, maxWidthProp])\n\n  const hidden = layoutCollapsed && !isLast\n\n  const divider = useMemo(\n    () =>\n      !isLast &&\n      !layoutCollapsed && (\n        <LegacyLayerProvider zOffset=\"paneResizer\">\n          <PaneDivider disabled={collapsed || nextCollapsed} element={rootElement} />\n        </LegacyLayerProvider>\n      ),\n    [collapsed, isLast, layoutCollapsed, nextCollapsed, rootElement],\n  )\n\n  const style = useMemo(\n    () => ({\n      flex,\n      minWidth,\n      maxWidth: maxWidth === Infinity ? undefined : maxWidth,\n    }),\n    [flex, minWidth, maxWidth],\n  )\n\n  return (\n    <>\n      <LegacyLayerProvider zOffset=\"pane\">\n        <PaneContext.Provider value={contextValue}>\n          <IsLastPaneProvider isLastPane={isLast}>\n            <Root\n              data-testid=\"pane\"\n              data-ui=\"Pane\"\n              tone=\"inherit\"\n              hidden={hidden}\n              id={id}\n              overflow={layoutCollapsed ? undefined : 'hidden'}\n              {...restProps}\n              data-pane-collapsed={collapsed ? '' : undefined}\n              data-pane-index={paneIndex}\n              data-pane-selected={selected ? '' : undefined}\n              ref={setRef}\n              style={style}\n            >\n              {PANE_DEBUG && (\n                <Card padding={4} tone={expanded ? 'primary' : 'caution'}>\n                  <Code size={1}>\n                    {[\n                      `#${paneIndex}`,\n                      `collapsed=${collapsed}`,\n                      `currentMinWidth=${currentMinWidth}`,\n                      `currentMaxWidth=${currentMaxWidth}`,\n                      `flex=${flex}`,\n                      `minWidth=${minWidth}`,\n                      `maxWidth=${maxWidth}`,\n                    ].join('\\n')}\n                  </Code>\n                </Card>\n              )}\n\n              <BoundaryElementProvider element={rootElement}>\n                {!hidden && (\n                  <Flex direction=\"column\" height=\"fill\">\n                    {children}\n                  </Flex>\n                )}\n              </BoundaryElementProvider>\n            </Root>\n          </IsLastPaneProvider>\n        </PaneContext.Provider>\n      </LegacyLayerProvider>\n\n      {divider}\n    </>\n  )\n})\n","import {Card} from '@sanity/ui'\nimport {styled} from 'styled-components'\n\nexport const Root = styled(Card)`\n  position: relative;\n  outline: none;\n`\n\nRoot.displayName = 'PaneContent__root'\n","import {useContext} from 'react'\nimport {PaneContext} from 'sanity/_singletons'\n\nimport {type PaneContextValue} from './types'\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function usePane(): PaneContextValue {\n  const pane = useContext(PaneContext)\n\n  if (!pane) {\n    throw new Error('Pane: missing context value')\n  }\n\n  return pane\n}\n","import {type BoxOverflow} from '@sanity/ui'\nimport {type ElementType, type ForwardedRef, forwardRef, type HTMLProps} from 'react'\n\nimport {Root} from './PaneContent.styles'\nimport {usePane} from './usePane'\nimport {usePaneLayout} from './usePaneLayout'\n\ninterface PaneContentProps {\n  as?: ElementType | keyof React.JSX.IntrinsicElements\n  overflow?: BoxOverflow\n  padding?: number | number[]\n}\n\n/**\n * @hidden\n * @internal\n */\nexport const PaneContent = forwardRef(function PaneContent(\n  props: PaneContentProps & Omit<HTMLProps<HTMLDivElement>, 'as' | 'height' | 'ref'>,\n  ref: ForwardedRef<HTMLDivElement>,\n) {\n  const {as, children, overflow, padding, ...restProps} = props\n  const {collapsed} = usePane()\n  const {collapsed: layoutCollapsed} = usePaneLayout()\n\n  return (\n    <Root\n      data-testid=\"pane-content\"\n      forwardedAs={as}\n      {...restProps}\n      flex={1}\n      hidden={collapsed}\n      overflow={layoutCollapsed ? undefined : overflow}\n      padding={padding}\n      ref={ref}\n      tone=\"inherit\"\n    >\n      {children}\n    </Root>\n  )\n})\n","/**\n * Remove the spaces and lower case the string\n *\n * @param str - string to remove the spaces and lower case\n * @returns str with no spaces and lower case\n */\nexport function toLowerCaseNoSpaces(str: string | undefined): string {\n  if (!str) return ''\n  return str.toLocaleLowerCase().replaceAll(' ', '')\n}\n","import {CheckmarkIcon} from '@sanity/icons'\nimport {MenuDivider, Text} from '@sanity/ui'\nimport {type MouseEvent, useCallback} from 'react'\nimport {TooltipOfDisabled, useGetI18nText, useI18nText} from 'sanity'\nimport {useIntentLink} from 'sanity/router'\n\nimport {MenuGroup, MenuItem, type PopoverProps} from '../../../ui-components'\nimport {type Intent} from '../../structureBuilder'\nimport {toLowerCaseNoSpaces} from '../../util/toLowerCaseNoSpaces'\nimport {type _PaneMenuItem, type _PaneMenuNode} from './types'\n\nconst MENU_GROUP_POPOVER_PROPS: PopoverProps = {\n  constrainSize: true,\n  placement: 'left-start',\n  portal: true,\n}\n\nexport function PaneMenuButtonItem(props: {\n  disabled?: boolean\n  isAfterGroup: boolean\n  node: _PaneMenuNode\n}) {\n  const {disabled, isAfterGroup, node} = props\n  const getI18nText = useGetI18nText('i18n' in node ? node : undefined)\n\n  if (node.type === 'divider') {\n    return <MenuDivider />\n  }\n\n  const {title} = getI18nText(node)\n\n  if (node.type === 'group') {\n    if (node.children.length === 0) {\n      return null\n    }\n\n    if (node.expanded) {\n      return (\n        <>\n          {isAfterGroup && <MenuDivider />}\n          {node.children.map((child, childIndex) => (\n            <PaneMenuButtonItem\n              key={child.key}\n              disabled={disabled || Boolean(node.disabled)}\n              isAfterGroup={node.children[childIndex - 1]?.type === 'group'}\n              node={child}\n            />\n          ))}\n        </>\n      )\n    }\n\n    return (\n      <>\n        {isAfterGroup && <MenuDivider />}\n        <MenuGroup\n          disabled={disabled}\n          icon={node.icon}\n          popover={MENU_GROUP_POPOVER_PROPS}\n          text={title}\n        >\n          {node.children.map((child, childIndex) => (\n            <PaneMenuButtonItem\n              key={child.key}\n              disabled={disabled || Boolean(node.disabled)}\n              isAfterGroup={node.children[childIndex - 1]?.type === 'group'}\n              node={child}\n            />\n          ))}\n        </MenuGroup>\n      </>\n    )\n  }\n\n  return (\n    <>\n      {isAfterGroup && <MenuDivider />}\n      <PaneContextMenuItemResolver disabled={disabled} node={node} />\n    </>\n  )\n}\n\nfunction PaneContextMenuItemResolver(props: {disabled?: boolean; node: _PaneMenuItem}) {\n  const {node} = props\n\n  if (node.intent) {\n    return <PaneContextIntentMenuItem {...props} intent={node.intent} />\n  }\n\n  return <PaneContextMenuItem {...props} />\n}\n\nfunction PaneContextMenuItem(props: {disabled?: boolean; node: _PaneMenuItem}) {\n  const {disabled, node} = props\n  const tooltipContent = typeof node.disabled === 'object' && (\n    <Text size={1}>{node.disabled.reason}</Text>\n  )\n  const {title} = useI18nText(node)\n\n  return (\n    <TooltipOfDisabled content={tooltipContent} placement=\"left\">\n      <MenuItem\n        disabled={disabled || Boolean(node.disabled)}\n        hotkeys={node.hotkey?.split('+')}\n        icon={node.icon}\n        iconRight={node.iconRight || (node.selected && CheckmarkIcon)}\n        // eslint-disable-next-line react/jsx-handler-names\n        onClick={node.onAction}\n        pressed={node.selected}\n        text={title}\n        tone={node.tone}\n        data-testid={`action-${toLowerCaseNoSpaces(node.title)}`}\n      />\n    </TooltipOfDisabled>\n  )\n}\n\nfunction PaneContextIntentMenuItem(props: {\n  disabled?: boolean\n  intent: Intent\n  node: _PaneMenuItem\n}) {\n  const {disabled, intent, node} = props\n  const tooltipContent = typeof node.disabled === 'object' && (\n    <Text size={1}>{node.disabled.reason}</Text>\n  )\n  const intentLink = useIntentLink({intent: intent.type, params: intent.params})\n\n  const handleClick = useCallback(\n    (event: MouseEvent<HTMLDivElement>) => {\n      intentLink.onClick(event)\n      node.onAction()\n    },\n    [intentLink, node],\n  )\n\n  const {title} = useI18nText(node)\n\n  return (\n    <TooltipOfDisabled content={tooltipContent} placement=\"left\">\n      <MenuItem\n        as=\"a\"\n        disabled={disabled || Boolean(node.disabled)}\n        hotkeys={node.hotkey?.split('+')}\n        href={intentLink.href}\n        icon={node.icon}\n        iconRight={node.selected ? CheckmarkIcon : undefined}\n        onClick={handleClick}\n        pressed={node.selected}\n        text={title}\n        tone={node.tone}\n      />\n    </TooltipOfDisabled>\n  )\n}\n","import {Menu, MenuDivider} from '@sanity/ui'\nimport {type ReactNode, useId} from 'react'\nimport {ContextMenuButton} from 'sanity'\n\nimport {MenuButton, type PopoverProps} from '../../../ui-components'\nimport {PaneMenuButtonItem} from './PaneMenuButtonItem'\nimport {type _PaneMenuItem, type _PaneMenuNode} from './types'\n\ninterface PaneContextMenuButtonProps {\n  nodes: _PaneMenuNode[]\n  actionsNodes?: ReactNode\n}\n\nconst CONTEXT_MENU_POPOVER_PROPS: PopoverProps = {\n  constrainSize: true,\n  placement: 'bottom',\n  portal: true,\n}\n\nfunction nodesHasTone(nodes: _PaneMenuNode[], tone: NonNullable<_PaneMenuItem['tone']>): boolean {\n  return nodes.some((node) => {\n    return (\n      (node.type === 'item' && node.tone === tone) ||\n      (node.type === 'group' && nodesHasTone(node.children, tone))\n    )\n  })\n}\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function PaneContextMenuButton(props: PaneContextMenuButtonProps) {\n  const {nodes, actionsNodes} = props\n  const id = useId()\n\n  const hasCritical = nodesHasTone(nodes, 'critical')\n  const hasCaution = nodesHasTone(nodes, 'caution')\n\n  return (\n    <MenuButton\n      button={\n        <ContextMenuButton\n          tone={hasCritical ? 'critical' : hasCaution ? 'caution' : undefined}\n          data-testid=\"pane-context-menu-button\"\n        />\n      }\n      id={id}\n      menu={\n        <Menu>\n          {actionsNodes && (\n            <>\n              {actionsNodes}\n              <MenuDivider />\n            </>\n          )}\n          {nodes.map((node, nodeIndex) => {\n            const isAfterGroup = nodes[nodeIndex - 1]?.type === 'group'\n            return <PaneMenuButtonItem key={node.key} isAfterGroup={isAfterGroup} node={node} />\n          })}\n        </Menu>\n      }\n      popover={CONTEXT_MENU_POPOVER_PROPS}\n    />\n  )\n}\n","import {Card, Layer} from '@sanity/ui'\nimport {styled} from 'styled-components'\n\nexport const Root = styled(Layer)`\n  position: sticky;\n  bottom: 0;\n`\n\nexport const RootCard = styled(Card)`\n  padding-bottom: env(safe-area-inset-bottom);\n`\n","import {Box} from '@sanity/ui'\nimport {type ForwardedRef, forwardRef, type ReactNode} from 'react'\nimport {LegacyLayerProvider} from 'sanity'\n\nimport {Root, RootCard} from './PaneFooter.styles'\nimport {usePane} from './usePane'\n\ninterface PaneFooterProps {\n  children?: ReactNode\n  padding?: number | number[]\n}\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport const PaneFooter = forwardRef(function PaneFooter(\n  props: PaneFooterProps,\n  ref: ForwardedRef<HTMLDivElement>,\n) {\n  const {children, padding} = props\n  const {collapsed} = usePane()\n\n  return (\n    <LegacyLayerProvider zOffset=\"paneFooter\">\n      <Root data-testid=\"pane-footer\" hidden={collapsed} ref={ref}>\n        <RootCard tone=\"inherit\">\n          <Box padding={padding}>{children}</Box>\n        </RootCard>\n      </Root>\n    </LegacyLayerProvider>\n  )\n})\n","import {Card, Flex, Layer, Text, TextSkeleton, type Theme} from '@sanity/ui'\nimport {css, styled} from 'styled-components'\n\ninterface RootProps {\n  $border?: boolean\n}\n\nexport const Root = styled(Layer)<RootProps>(({$border}) => {\n  return css`\n    line-height: 0;\n    position: sticky;\n    top: 0;\n\n    &:not([data-collapsed]):after {\n      content: '';\n      display: block;\n      position: absolute;\n      left: 0;\n      right: 0;\n      bottom: -1px;\n      border-bottom: 1px solid ${$border ? 'var(--card-border-color)' : 'transparent'};\n      opacity: 1;\n    }\n  `\n})\n\nexport const Layout = styled(Flex)`\n  transform-origin: calc(51px / 2);\n\n  [data-collapsed] > div > & {\n    transform: rotate(90deg);\n  }\n`\n\nexport const TitleCard = styled(Card)(({theme}: {theme: Theme}) => {\n  const {fg, bg} = theme.sanity.color.card.enabled\n\n  // Disable color updates on hover\n  return css`\n    background-color: ${bg};\n\n    [data-ui='Text'] {\n      color: ${fg};\n    }\n  `\n})\n\nexport const TitleTextSkeleton = styled(TextSkeleton)`\n  width: 66%;\n  max-width: 175px;\n`\n\nexport const TitleText = styled(Text)`\n  cursor: default;\n  outline: none;\n`\n","import {Box, Card, Flex, LayerProvider, useElementRect} from '@sanity/ui'\nimport {type ForwardedRef, forwardRef, type ReactNode, useCallback, useMemo} from 'react'\nimport {LegacyLayerProvider} from 'sanity'\n\nimport {Layout, Root, TitleCard, TitleText, TitleTextSkeleton} from './PaneHeader.styles'\nimport {usePane} from './usePane'\n\nexport type TabsType = 'default' | 'dropdown'\n\n/**\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport interface PaneHeaderProps {\n  actions?: ReactNode\n  backButton?: ReactNode\n  border?: boolean\n  contentAfter?: ReactNode\n  loading?: boolean\n  subActions?: ReactNode\n  tabIndex?: number\n  tabs?: ReactNode\n  title: ReactNode\n  appendTitle?: ReactNode\n}\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport const PaneHeader = forwardRef(function PaneHeader(\n  props: PaneHeaderProps,\n  ref: ForwardedRef<HTMLDivElement>,\n) {\n  const {\n    actions,\n    backButton,\n    border,\n    contentAfter,\n    loading,\n    subActions,\n    tabs,\n    tabIndex,\n    title,\n    appendTitle,\n  } = props\n  const {collapse, collapsed, expand, rootElement: paneElement} = usePane()\n  const paneRect = useElementRect(paneElement || null)\n\n  const layoutStyle = useMemo(\n    () => ({\n      width: collapsed ? paneRect?.height || window.innerHeight : undefined,\n    }),\n    [collapsed, paneRect],\n  )\n\n  const handleTitleClick = useCallback(() => {\n    if (collapsed) return\n    collapse()\n  }, [collapse, collapsed])\n\n  const handleLayoutClick = useCallback(() => {\n    if (!collapsed) return\n    expand()\n  }, [collapsed, expand])\n\n  const showTabsOrSubActions = Boolean(!collapsed && (tabs || subActions))\n\n  return (\n    <LayerProvider zOffset={100}>\n      <Root\n        $border={border}\n        data-collapsed={collapsed ? '' : undefined}\n        data-testid=\"pane-header\"\n        ref={ref}\n      >\n        <LegacyLayerProvider zOffset=\"paneHeader\">\n          <Card data-collapsed={collapsed ? '' : undefined} tone=\"inherit\">\n            <Layout\n              direction=\"column\"\n              gap={3}\n              onClick={handleLayoutClick}\n              padding={3}\n              sizing=\"border\"\n              style={layoutStyle}\n            >\n              <Flex align=\"flex-start\" gap={3}>\n                {backButton && <Box flex=\"none\">{backButton}</Box>}\n\n                <TitleCard\n                  __unstable_focusRing\n                  flex={1}\n                  onClick={handleTitleClick}\n                  paddingLeft={backButton ? 1 : 2}\n                  padding={2}\n                  tabIndex={tabIndex}\n                >\n                  {loading && (\n                    <Box>\n                      <TitleTextSkeleton animated radius={1} size={1} />\n                    </Box>\n                  )}\n                  {!loading && (\n                    <Flex align=\"center\" gap={1}>\n                      <TitleText size={1} textOverflow=\"ellipsis\" weight=\"semibold\">\n                        {title}\n                      </TitleText>\n                      {appendTitle}\n                    </Flex>\n                  )}\n                </TitleCard>\n\n                {actions && (\n                  <Box hidden={collapsed}>\n                    <LegacyLayerProvider zOffset=\"paneHeader\">{actions}</LegacyLayerProvider>\n                  </Box>\n                )}\n              </Flex>\n\n              {showTabsOrSubActions && (\n                <Flex align=\"center\" hidden={collapsed} overflow=\"auto\">\n                  <Box flex={1} marginRight={subActions ? 3 : 0}>\n                    {tabs}\n                  </Box>\n\n                  {subActions}\n                </Flex>\n              )}\n            </Layout>\n\n            {!collapsed && contentAfter}\n          </Card>\n        </LegacyLayerProvider>\n      </Root>\n    </LayerProvider>\n  )\n})\n","import {UnknownIcon} from '@sanity/icons'\nimport {Menu} from '@sanity/ui'\nimport {type MouseEvent, useCallback, useId} from 'react'\nimport {StatusButton, useI18nText, useTranslation} from 'sanity'\nimport {useIntentLink} from 'sanity/router'\n\nimport {Button, MenuButton} from '../../../ui-components'\nimport {type Intent} from '../../structureBuilder'\nimport {PaneMenuButtonItem} from './PaneMenuButtonItem'\nimport {type _PaneMenuGroup, type _PaneMenuItem} from './types'\n\nfunction getDisabledReason(node: _PaneMenuItem) {\n  if (!node.disabled) {\n    return {disabledReason: undefined, ariaLabel: undefined, isDisabled: false}\n  }\n\n  /**\n   * This component supports receiving a `reason: string | react.ReactNode`.\n   * We are casting it as string, to avoid the ts error, as content will be rendered into the tooltip which only accepts string, but it won't crash if it's a ReactNode.\n   * For the aria label, we want to check if it's actually a string, to avoid generating an aria-label with the value `[object Object]`.\n   */\n  const disabledReason =\n    typeof node.disabled === 'object' ? (node.disabled.reason as string) : undefined\n  const ariaLabel =\n    typeof node.disabled === 'object' && typeof node.disabled?.reason === 'string'\n      ? node.disabled.reason\n      : 'This is disabled'\n\n  return {disabledReason, ariaLabel, isDisabled: Boolean(node.disabled)}\n}\nexport interface PaneHeaderActionButtonProps {\n  node: _PaneMenuItem | _PaneMenuGroup\n}\n\nexport function PaneHeaderActionButton(props: PaneHeaderActionButtonProps) {\n  const {node} = props\n\n  if (node.type === 'item') {\n    return <PaneHeaderMenuItemActionButton node={node} />\n  }\n\n  if (node.type === 'group') {\n    return <PaneHeaderMenuGroupActionButton node={node} />\n  }\n\n  console.warn('unknown menu node (expected `type: \"item\" | \"group\"`):', node)\n\n  return null\n}\n\nexport interface PaneHeaderMenuItemActionButtonProps {\n  node: _PaneMenuItem\n}\n\nexport function PaneHeaderMenuItemActionButton(props: PaneHeaderMenuItemActionButtonProps) {\n  const {node} = props\n  const {title} = useI18nText(node)\n  const {t} = useTranslation()\n\n  if (node.intent) {\n    return <PaneHeaderActionIntentButton {...props} intent={node.intent} />\n  }\n\n  const {disabledReason, ariaLabel, isDisabled} = getDisabledReason(node)\n\n  return (\n    <StatusButton\n      disabled={isDisabled}\n      icon={node.icon}\n      // eslint-disable-next-line react/jsx-handler-names\n      onClick={node.onAction}\n      selected={node.selected}\n      tone={node.tone}\n      aria-label={ariaLabel || title || t('status-button.aria-label')}\n      tooltipProps={{\n        hotkeys: !isDisabled && node.hotkey ? node.hotkey.split('+') : undefined,\n        content: isDisabled ? disabledReason : title,\n      }}\n    />\n  )\n}\n\nfunction PaneHeaderActionIntentButton(props: {intent: Intent; node: _PaneMenuItem}) {\n  const {intent, node} = props\n  const intentLink = useIntentLink({intent: intent.type, params: intent.params})\n  const {t} = useTranslation()\n\n  const handleClick = useCallback(\n    (event: MouseEvent<HTMLButtonElement>) => {\n      intentLink.onClick(event)\n      node.onAction()\n    },\n    [intentLink, node],\n  )\n\n  const {disabledReason, ariaLabel, isDisabled} = getDisabledReason(node)\n\n  return (\n    <StatusButton\n      forwardedAs=\"a\"\n      disabled={isDisabled}\n      href={intentLink.href}\n      icon={node.icon}\n      onClick={handleClick}\n      selected={node.selected}\n      tone={node.tone}\n      aria-label={ariaLabel || node.title || t('status-button.aria-label')}\n      tooltipProps={{\n        hotkeys: !isDisabled && node.hotkey ? node.hotkey.split('+') : undefined,\n        content: isDisabled ? disabledReason : node.title,\n        placement: 'bottom',\n        portal: true,\n      }}\n    />\n  )\n}\n\nexport interface PaneHeaderMenuGroupActionButtonProps {\n  node: _PaneMenuGroup\n}\n\nfunction PaneHeaderMenuGroupActionButton(props: PaneHeaderMenuGroupActionButtonProps) {\n  const {node} = props\n  const {title} = useI18nText(node)\n\n  return (\n    <MenuButton\n      button={\n        <Button\n          disabled={!!node.disabled}\n          icon={node.icon ?? UnknownIcon}\n          label={title}\n          mode=\"bleed\"\n          tooltipProps={{content: node.title, portal: true}}\n        />\n      }\n      id={useId()}\n      menu={\n        <Menu>\n          {node.children.map((child, idx) => {\n            return (\n              <PaneMenuButtonItem\n                key={child.key}\n                disabled={Boolean(node.disabled)}\n                isAfterGroup={node.children[idx - 1]?.type === 'group'}\n                node={child}\n              />\n            )\n          })}\n        </Menu>\n      }\n    />\n  )\n}\n","import {Card} from '@sanity/ui'\nimport {styled} from 'styled-components'\n\nexport const Root = styled(Card)`\n  transition: opacity 200ms;\n  position: relative;\n  z-index: 1;\n  padding-left: env(safe-area-inset-left);\n  padding-right: env(safe-area-inset-right);\n  opacity: 0;\n\n  &:not([hidden]) {\n    display: flex;\n  }\n\n  &:not([data-collapsed]) {\n    overflow: auto;\n  }\n\n  &[data-mounted] {\n    opacity: 1;\n  }\n\n  &[data-resizing] {\n    pointer-events: none;\n  }\n`\n","import {PANE_DEFAULT_MIN_WIDTH} from '../constants'\nimport {type PaneConfigOpts, type PaneResizeCache} from '../types'\n\nexport function _calcPaneResize(\n  cache: PaneResizeCache,\n  left: PaneConfigOpts,\n  right: PaneConfigOpts,\n  deltaX: number,\n): {leftFlex: number; leftW: number; rightFlex: number; rightW: number} {\n  const sum = {\n    flex: cache.left.flex + cache.right.flex,\n    width: cache.left.width + cache.right.width,\n  }\n\n  const leftMinWidth = left.minWidth ?? PANE_DEFAULT_MIN_WIDTH\n  const rightMinWidth = right.minWidth ?? PANE_DEFAULT_MIN_WIDTH\n\n  const leftMaxWidth = Math.min(left.maxWidth || Infinity, sum.width - rightMinWidth)\n  const rightMaxWidth = Math.min(right.maxWidth || Infinity, sum.width - leftMinWidth)\n\n  // Get min. delta X\n  let minDeltaX = leftMinWidth - cache.left.width\n  const rightMinDeltaX = cache.right.width - rightMaxWidth\n  if (minDeltaX < rightMinDeltaX) {\n    minDeltaX = rightMinDeltaX\n  }\n\n  // Get max. delta X\n  let maxDeltaX = cache.right.width - rightMinWidth\n  const leftMaxDeltaX = leftMaxWidth - cache.left.width\n  if (maxDeltaX > leftMaxDeltaX) {\n    maxDeltaX = leftMaxDeltaX\n  }\n\n  const _deltaX = Math.min(Math.max(deltaX, minDeltaX), maxDeltaX)\n\n  const leftW = cache.left.width + _deltaX\n  const rightW = cache.right.width - _deltaX\n\n  const leftFlex = (leftW / sum.width) * sum.flex\n  const rightFlex = (rightW / sum.width) * sum.flex\n\n  return {leftFlex, leftW, rightFlex, rightW}\n}\n","/**\n * @internal\n */\nexport function _getDOMPath(rootElement: HTMLElement, el: HTMLElement): number[] {\n  const path: number[] = []\n\n  let e = el\n\n  while (e !== rootElement) {\n    const parentElement = e.parentElement\n\n    if (!parentElement) return path\n\n    const children = Array.from(parentElement.childNodes)\n    const index = children.indexOf(e)\n\n    path.unshift(index)\n\n    if (parentElement === rootElement) {\n      return path\n    }\n\n    e = parentElement\n  }\n\n  return path\n}\n","import {_getDOMPath} from './_getDOMPath'\n\nconst EMPTY_PATH: number[] = []\n\n/**\n * @internal\n */\nexport function _sortElements(rootElement: HTMLElement, elements: HTMLElement[]): void {\n  // Create a map containing the DOM path of each pane element.\n  // The DOM path is relative to the `rootElement`, and is used in the next step for sorting.\n  const map = new WeakMap<HTMLElement, number[]>()\n\n  for (const element of elements) {\n    map.set(element, _getDOMPath(rootElement, element))\n  }\n\n  const _sortByElementPath = (a: HTMLElement, b: HTMLElement) => {\n    const _a = map.get(a) || EMPTY_PATH\n    const _b = map.get(b) || EMPTY_PATH\n\n    const len = Math.max(_a.length, _b.length)\n\n    // Loop until there are different indexes\n    for (let i = 0; i < len; i += 1) {\n      const aIndex = _a[i] || -1\n      const bIndex = _b[i] || -1\n\n      if (aIndex !== bIndex) {\n        return aIndex - bIndex\n      }\n    }\n\n    return 0\n  }\n\n  elements.sort(_sortByElementPath)\n}\n","import {PANE_COLLAPSED_WIDTH, PANE_DEFAULT_MIN_WIDTH} from './constants'\nimport {_calcPaneResize, _sortElements} from './helpers'\nimport {\n  type PaneConfigOpts,\n  type PaneData,\n  type PaneResizeCache,\n  type PaneResizeData,\n} from './types'\n\nexport interface PaneLayoutState {\n  expandedElement: HTMLElement | null\n  panes: PaneData[]\n  resizing: boolean\n}\n\nexport type PaneLayoutStateObserver = (state: PaneLayoutState) => void\n\nexport interface PaneLayoutController {\n  collapse: (element: HTMLElement) => void\n  expand: (element: HTMLElement) => void\n  mount: (element: HTMLElement, options: PaneConfigOpts) => () => void\n  resize: (type: 'start' | 'move' | 'end', leftElement: HTMLElement, deltaX: number) => void\n  setRootElement: (nextRootElement: HTMLElement | null) => void\n  setRootWidth: (nextRootWidth: number) => void\n  subscribe: (observer: PaneLayoutStateObserver) => () => void\n}\n\nexport function createPaneLayoutController(): PaneLayoutController {\n  const observers: PaneLayoutStateObserver[] = []\n  const elements: HTMLElement[] = []\n  const optionsMap = new WeakMap<HTMLElement, PaneConfigOpts & {original: PaneConfigOpts}>()\n  const userCollapsedElementSet = new Set<HTMLElement>()\n  const cache: Partial<PaneResizeCache> = {}\n\n  // Mutable internal state\n  let rootElement: HTMLElement | null = null\n  let rootWidth = 0\n  let expandedElement: HTMLElement | null = null\n  let resizeDataMap = new Map<HTMLElement, PaneResizeData>()\n  let resizing = false\n\n  function collapse(element: HTMLElement) {\n    userCollapsedElementSet.add(element)\n\n    if (expandedElement === element) {\n      expandedElement = null\n    }\n\n    _notifyObservers()\n  }\n\n  function expand(element: HTMLElement) {\n    userCollapsedElementSet.delete(element)\n\n    expandedElement = element\n\n    _notifyObservers()\n  }\n\n  function mount(element: HTMLElement, options: PaneConfigOpts) {\n    optionsMap.set(element, {...options, original: options})\n\n    elements.push(element)\n\n    if (rootElement) {\n      _sortElements(rootElement, elements)\n    }\n\n    expand(element)\n\n    return () => {\n      const idx = elements.indexOf(element)\n\n      if (idx > -1) {\n        elements.splice(idx, 1)\n      }\n\n      optionsMap.delete(element)\n\n      _notifyObservers()\n    }\n  }\n\n  function resize(type: 'start' | 'move' | 'end', leftElement: HTMLElement, deltaX: number) {\n    const leftIndex = elements.indexOf(leftElement)\n    const leftOptions = optionsMap.get(leftElement)\n\n    if (!leftOptions) return\n\n    const rightElement = elements[leftIndex + 1]\n    const rightOptions = optionsMap.get(rightElement)\n\n    if (!rightOptions) return\n\n    if (type === 'start') {\n      resizing = true\n\n      cache.left = {\n        element: leftElement,\n        flex: leftOptions.flex || 1,\n        width: leftElement.offsetWidth,\n      }\n\n      cache.right = {\n        element: rightElement,\n        flex: rightOptions.flex || 1,\n        width: rightElement.offsetWidth,\n      }\n\n      _notifyObservers()\n    }\n\n    if (type === 'move' && cache.left && cache.right) {\n      resizeDataMap = new Map<HTMLElement, PaneResizeData>()\n\n      const {leftW, rightW, leftFlex, rightFlex} = _calcPaneResize(\n        cache as PaneResizeCache,\n        leftOptions,\n        rightOptions,\n        deltaX,\n      )\n\n      // update resize cache\n      resizeDataMap.set(leftElement, {flex: leftFlex, width: leftW})\n      resizeDataMap.set(rightElement, {flex: rightFlex, width: rightW})\n\n      _notifyObservers()\n    }\n\n    if (type === 'end') {\n      resizing = false\n\n      const leftResizeData = resizeDataMap.get(leftElement)\n      const rightResizeData = resizeDataMap.get(rightElement)\n\n      // Update left options\n      optionsMap.set(leftElement, {\n        ...leftOptions,\n        currentMinWidth: 0,\n        currentMaxWidth: leftOptions.maxWidth ?? Infinity,\n        flex: leftResizeData?.flex ?? leftOptions.flex,\n      })\n\n      // Update right options\n      optionsMap.set(rightElement, {\n        ...rightOptions,\n        currentMinWidth: 0,\n        currentMaxWidth: leftOptions.maxWidth ?? Infinity,\n        flex: rightResizeData?.flex ?? rightOptions.flex,\n      })\n\n      // Reset resize data map\n      resizeDataMap = new Map()\n\n      // Reset cache\n      delete cache.left\n      delete cache.right\n\n      _notifyObservers()\n    }\n  }\n\n  function setRootElement(nextRootElement: HTMLElement | null) {\n    rootElement = nextRootElement\n  }\n\n  function setRootWidth(nextRootWidth: number) {\n    rootWidth = nextRootWidth\n    _notifyObservers()\n  }\n\n  function subscribe(observer: PaneLayoutStateObserver) {\n    observers.push(observer)\n\n    return () => {\n      const idx = observers.push(observer)\n\n      if (idx > -1) {\n        observers.splice(idx, 1)\n      }\n    }\n  }\n\n  return {collapse, expand, mount, resize, setRootElement, setRootWidth, subscribe}\n\n  function _notifyObservers() {\n    if (!rootWidth) return\n\n    // Create a reversed array of pane elements, so we can loop over them backwards.\n    // Place the expanded element first (so it has the least chance of being collapsed).\n    const _elements: HTMLElement[] = []\n    for (const element of elements) {\n      if (element !== expandedElement) {\n        _elements.unshift(element)\n      }\n    }\n    if (expandedElement) {\n      _elements.unshift(expandedElement)\n    }\n\n    const dataMap = new WeakMap<HTMLElement, PaneData>()\n    const len = _elements.length\n    const lastElement = _elements[0]\n    const collapsedWidth = (len - 1) * PANE_COLLAPSED_WIDTH\n\n    let remaingWidth = rootWidth - collapsedWidth\n\n    for (const element of _elements) {\n      const options = optionsMap.get(element)\n\n      if (!options) {\n        continue\n      }\n\n      const minWidth = options.currentMinWidth || options.minWidth || PANE_DEFAULT_MIN_WIDTH\n      const isLast = element === lastElement\n\n      // A pane is collapsed if:\n      // - it’s explictly collapsed by the user\n      const userCollapsed = userCollapsedElementSet.has(element)\n      // - it’s minimum width is larger than the remaining width\n      const sizeCollapsed = minWidth > remaingWidth\n      // - if the element is not the last (expanded pane)\n      const collapsed = isLast ? false : userCollapsed || sizeCollapsed\n\n      const resizeData = resizeDataMap.get(element)\n\n      // Collect pane data\n      dataMap.set(element, {\n        element: element,\n        collapsed: collapsed,\n        currentMinWidth: resizeData?.width ?? options.currentMinWidth,\n        currentMaxWidth: resizeData?.width ?? options.currentMaxWidth,\n        flex: resizeData?.flex ?? options.flex ?? 1,\n      })\n\n      // Update remaining width\n      if (collapsed) {\n        remaingWidth -= PANE_COLLAPSED_WIDTH\n      } else {\n        remaingWidth -= minWidth - PANE_COLLAPSED_WIDTH\n      }\n    }\n\n    const panes: PaneData[] = []\n\n    for (const element of elements) {\n      const data = dataMap.get(element)\n\n      if (data) panes.push(data)\n    }\n\n    for (const observer of observers) {\n      observer({\n        expandedElement: expandedElement || elements[elements.length - 1] || null,\n        panes,\n        resizing,\n      })\n    }\n  }\n}\n","import {type CardProps, useElementRect} from '@sanity/ui'\nimport {type HTMLProps, useEffect, useMemo, useState} from 'react'\nimport {PaneLayoutContext} from 'sanity/_singletons'\n\nimport {Root} from './PaneLayout.styles'\nimport {createPaneLayoutController, type PaneLayoutState} from './paneLayoutController'\nimport {type PaneLayoutContextValue} from './types'\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport interface PaneLayoutProps {\n  minWidth?: number\n  onCollapse?: () => void\n  onExpand?: () => void\n}\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function PaneLayout(\n  props: PaneLayoutProps &\n    CardProps &\n    Omit<HTMLProps<HTMLDivElement>, 'as' | 'height' | 'ref' | 'wrap'>,\n) {\n  const {children, minWidth, onCollapse, onExpand, ...restProps} = props\n  const [controller] = useState(() => createPaneLayoutController())\n  const [rootElement, setRootElement] = useState<HTMLDivElement | null>(null)\n  const rootRect = useElementRect(rootElement)\n  const width = rootRect?.width || 0\n  const collapsed = width === undefined || !minWidth ? undefined : width < minWidth\n  const [state, setState] = useState<PaneLayoutState>({\n    expandedElement: null,\n    panes: [],\n    resizing: false,\n  })\n\n  // Set root element\n  useEffect(() => controller.setRootElement(rootElement), [controller, rootElement])\n\n  // Set root size\n  useEffect(() => controller.setRootWidth(width), [controller, width])\n\n  // Subscribe to state changes\n  useEffect(() => controller.subscribe(setState), [controller])\n\n  // Call the `onCollapse` and `onExpand` callbacks as the `collapsed` boolean changes\n  useEffect(() => {\n    if (collapsed === undefined) return\n    if (collapsed && onCollapse) onCollapse()\n    if (!collapsed && onExpand) onExpand()\n  }, [collapsed, onCollapse, onExpand])\n\n  // This is the context value that gives each pane the information they need\n  const paneLayout: PaneLayoutContextValue = useMemo(\n    () => ({\n      collapse: controller.collapse,\n      collapsed,\n      expand: controller.expand,\n      expandedElement: state.expandedElement,\n      mount: controller.mount,\n      panes: state.panes,\n      resize: controller.resize,\n      resizing: state.resizing,\n    }),\n    [collapsed, controller, state.expandedElement, state.panes, state.resizing],\n  )\n\n  return (\n    <PaneLayoutContext.Provider value={paneLayout}>\n      <Root\n        data-ui=\"PaneLayout\"\n        {...restProps}\n        data-collapsed={collapsed ? '' : undefined}\n        // The `data-resizing` attribute is used to improve cursor behavior\n        data-resizing={state.resizing ? '' : undefined}\n        // The `data-mounted` attribute is used to fade in the layout and prevent flash of\n        // non-collapsed panes\n        data-mounted={width ? '' : undefined}\n        ref={setRootElement}\n      >\n        {children}\n      </Root>\n    </PaneLayoutContext.Provider>\n  )\n}\n","import {Box, type CardTone} from '@sanity/ui'\n\nimport {Pane, PaneContent, PaneHeader} from '../../components/pane'\n\n/**\n * @internal\n */\nexport function ErrorPane(props: {\n  children?: React.ReactNode\n  currentMinWidth?: number\n  flex?: number\n  minWidth?: number\n  paneKey: string\n  title?: React.ReactNode\n  tone?: CardTone\n}) {\n  const {\n    children,\n    currentMinWidth,\n    flex,\n    minWidth,\n    paneKey,\n    title = 'Error',\n    tone = 'critical',\n  } = props\n\n  return (\n    <Pane\n      currentMinWidth={currentMinWidth}\n      flex={flex}\n      id={paneKey}\n      minWidth={minWidth}\n      tone={tone}\n    >\n      <PaneHeader title={title} />\n      <PaneContent overflow=\"auto\">\n        <Box paddingX={4} paddingY={5}>\n          {children}\n        </Box>\n      </PaneContent>\n    </Pane>\n  )\n}\n","import {useEffect, useState} from 'react'\n\nexport function Delay({\n  children,\n  ms = 0,\n}: {\n  children?: React.JSX.Element | (() => React.JSX.Element)\n  ms?: number\n}): React.JSX.Element {\n  const [ready, setReady] = useState(ms <= 0)\n\n  useEffect(() => {\n    if (ms <= 0) {\n      return undefined\n    }\n\n    const timeoutId = setTimeout(() => setReady(true), ms)\n\n    return () => {\n      clearTimeout(timeoutId)\n    }\n  }, [ms])\n\n  if (!ready || !children) {\n    return <></>\n  }\n\n  return typeof children === 'function' ? children() : children\n}\n","import {merge, type Observable, of} from 'rxjs'\nimport {delay, mapTo} from 'rxjs/operators'\nimport {isDev} from 'sanity'\n\n/**\n * @internal\n */\nexport type WaitMessage = {messageKey: string} | {message: string}\n\n/**\n * @internal\n */\nexport function getWaitMessages(path: string[]): Observable<WaitMessage> {\n  const thresholds: (WaitMessage & {ms: number})[] = [\n    {ms: 300, messageKey: 'panes.resolving.default-message'},\n    {ms: 5000, messageKey: 'panes.resolving.slow-resolve-message'},\n  ]\n\n  if (isDev) {\n    const message = [\n      'Check console for errors?',\n      'Is your observable/promise resolving?',\n      path.length > 0 ? `Structure path: ${path.join(' ➝ ')}` : '',\n    ]\n\n    thresholds.push({\n      ms: 10000,\n      message: message.join('\\n'),\n    })\n  }\n\n  const src = of(null)\n\n  return merge(\n    ...thresholds.map((threshold) =>\n      src.pipe(\n        mapTo(\n          'messageKey' in threshold\n            ? {messageKey: threshold.messageKey}\n            : {message: threshold.message},\n        ),\n        delay(threshold.ms),\n      ),\n    ),\n  )\n}\n","import {_raf2, type CardTone, Flex} from '@sanity/ui'\nimport {memo, useEffect, useMemo, useState} from 'react'\nimport {type Observable} from 'rxjs'\nimport {LoadingBlock, useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Delay} from '../../components/Delay'\nimport {Pane, PaneContent} from '../../components/pane'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {getWaitMessages, type WaitMessage} from './getWaitMessages'\n\ninterface LoadingPaneProps {\n  delay?: number\n  flex?: number\n  message?: string | ((p: string[]) => string | Observable<WaitMessage>)\n  minWidth?: number\n  paneKey: string\n  path?: string\n  selected?: boolean\n  title?: string\n  tone?: CardTone\n}\n\nconst DELAY = false\nconst DEFAULT_MESSAGE_KEY = 'panes.resolving.default-message'\n\nconst Content = styled(Flex)`\n  opacity: 0;\n  transition: opacity 200ms;\n\n  &[data-mounted] {\n    opacity: 1;\n  }\n`\n\n/**\n * @internal\n */\nexport const LoadingPane = memo((props: LoadingPaneProps) => {\n  const {\n    delay = 300,\n    flex,\n    message: messageProp = getWaitMessages,\n    minWidth,\n    paneKey,\n    path,\n    selected,\n    title,\n    tone,\n  } = props\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const resolvedMessage = useMemo(() => {\n    if (typeof messageProp === 'function') {\n      return messageProp(path ? path.split(';') : [])\n    }\n\n    return messageProp\n  }, [messageProp, path])\n\n  const [currentMessage, setCurrentMessage] = useState<string | null>(() => {\n    if (typeof resolvedMessage === 'string') return resolvedMessage\n    return t(DEFAULT_MESSAGE_KEY)\n  })\n\n  useEffect(() => {\n    if (typeof resolvedMessage !== 'object') return undefined\n    if (typeof resolvedMessage.subscribe !== 'function') return undefined\n\n    const sub = resolvedMessage.subscribe((message) => {\n      setCurrentMessage('messageKey' in message ? t(message.messageKey) : message.message)\n    })\n\n    return () => sub.unsubscribe()\n  }, [resolvedMessage, t])\n\n  const [contentElement, setContentElement] = useState<HTMLDivElement | null>(null)\n  const [mounted, setMounted] = useState(false)\n\n  useEffect(() => {\n    if (!contentElement) return undefined\n    return _raf2(() => setMounted(true))\n  }, [contentElement])\n\n  const content = (\n    <Content\n      align=\"center\"\n      data-mounted={mounted ? '' : undefined}\n      direction=\"column\"\n      height=\"fill\"\n      justify=\"center\"\n      ref={setContentElement}\n    >\n      <LoadingBlock showText title={title || currentMessage} />\n    </Content>\n  )\n\n  return (\n    <Pane flex={flex} id={paneKey} minWidth={minWidth} selected={selected} tone={tone}>\n      <PaneContent>{DELAY ? <Delay ms={delay}>{content}</Delay> : content}</PaneContent>\n    </Pane>\n  )\n})\n\nLoadingPane.displayName = 'Memo(LoadingPane)'\n","import {useContext} from 'react'\nimport {DocumentPaneContext} from 'sanity/_singletons'\n\nimport {type DocumentPaneContextValue} from './DocumentPaneContext'\n\n/** @internal */\nexport function useDocumentPane(): DocumentPaneContextValue {\n  const documentPane = useContext(DocumentPaneContext)\n\n  if (!documentPane) {\n    throw new Error('DocumentPane: missing context value')\n  }\n\n  return documentPane\n}\n","import {useCallback, useLayoutEffect, useRef} from 'react'\nimport {\n  COMMENTS_INSPECTOR_NAME,\n  CommentsEnabledProvider,\n  CommentsProvider,\n  useCommentsEnabled,\n  usePerspective,\n} from 'sanity'\nimport {useRouter} from 'sanity/router'\n\nimport {usePaneRouter} from '../../../components'\nimport {useDocumentPane} from '../useDocumentPane'\n\ninterface CommentsWrapperProps {\n  children: React.ReactNode\n  documentId: string\n  documentType: string\n}\n\n/**\n * @internal\n * A wrapper that conditionally wraps the document layout in a comments provider\n * if the feature is enabled for the project and the current document.\n */\nexport function CommentsWrapper(props: CommentsWrapperProps) {\n  const {children, documentId, documentType} = props\n\n  return (\n    <CommentsEnabledProvider documentId={documentId} documentType={documentType}>\n      <CommentsProviderWrapper documentId={documentId} documentType={documentType}>\n        {children}\n      </CommentsProviderWrapper>\n    </CommentsEnabledProvider>\n  )\n}\n\nfunction CommentsProviderWrapper(props: CommentsWrapperProps) {\n  const {children, documentId, documentType} = props\n\n  const {enabled} = useCommentsEnabled()\n  const {connectionState, onPathOpen, inspector, openInspector} = useDocumentPane()\n  const {selectedReleaseId} = usePerspective()\n  const {params, setParams} = usePaneRouter()\n  const {resolveIntentLink} = useRouter()\n\n  const selectedCommentId = params?.comment\n  const paramsRef = useRef(params)\n\n  useLayoutEffect(() => {\n    paramsRef.current = params\n  }, [params])\n\n  const getCommentLink = useCallback(\n    (commentId: string) => {\n      const intentLink = resolveIntentLink('edit', {\n        id: documentId,\n        type: documentType,\n        inspect: COMMENTS_INSPECTOR_NAME,\n        comment: commentId,\n      })\n      return `${window.location.origin}${intentLink}`\n    },\n    [documentId, documentType, resolveIntentLink],\n  )\n\n  const handleClearSelectedComment = useCallback(() => {\n    setParams({...paramsRef.current, comment: undefined})\n  }, [setParams])\n\n  const handleOpenCommentsInspector = useCallback(() => {\n    if (inspector?.name === COMMENTS_INSPECTOR_NAME) return\n\n    openInspector(COMMENTS_INSPECTOR_NAME)\n  }, [inspector?.name, openInspector])\n\n  // If comments are not enabled, render the default document layout\n  if (!enabled) {\n    return <>{children}</>\n  }\n\n  return (\n    <CommentsProvider\n      documentId={documentId}\n      documentType={documentType}\n      getCommentLink={getCommentLink}\n      isCommentsOpen={inspector?.name === COMMENTS_INSPECTOR_NAME}\n      isConnecting={connectionState === 'connecting'}\n      onClearSelectedComment={handleClearSelectedComment}\n      onCommentsOpen={handleOpenCommentsInspector}\n      onPathOpen={onPathOpen}\n      selectedCommentId={selectedCommentId}\n      sortOrder=\"desc\"\n      type=\"field\"\n      releaseId={selectedReleaseId}\n    >\n      {children}\n    </CommentsProvider>\n  )\n}\n","import {useContext} from 'react'\nimport {StructureToolContext} from 'sanity/_singletons'\n\nimport {type StructureToolContextValue} from './types'\n\n/** @internal */\nexport function useStructureTool(): StructureToolContextValue {\n  const structureTool = useContext(StructureToolContext)\n  if (!structureTool) throw new Error(`StructureTool: missing context value`)\n\n  return structureTool\n}\n","import {type PaneRouterContextValue} from '../../components'\nimport {type PaneMenuItemGroup} from '../../types'\n\nexport const DOCUMENT_PANEL_MIN_WIDTH = 320\nexport const DOCUMENT_PANEL_INITIAL_MIN_WIDTH = 600\n\nexport const DOCUMENT_INSPECTOR_MIN_WIDTH = 320\nexport const DOCUMENT_INSPECTOR_MAX_WIDTH = 540\n\nexport const EMPTY_PARAMS: NonNullable<PaneRouterContextValue['params']> = {}\n\nexport const INSPECT_ACTION_PREFIX = 'inspect:'\n\nexport const DEFAULT_MENU_ITEM_GROUPS: PaneMenuItemGroup[] = [{id: 'inspectors'}, {id: 'links'}]\n\n// inspectors\nexport const HISTORY_INSPECTOR_NAME = 'sanity/structure/history'\nexport const VALIDATION_INSPECTOR_NAME = 'sanity/structure/validation'\n","import {memo, useCallback, useEffect, useMemo, useState} from 'react'\nimport {type DocumentInspector, type DocumentInspectorMenuItem, useUnique} from 'sanity'\n\ninterface DocumentInspectorMenuItemsResolverProps {\n  documentId: string\n  documentType: string\n  inspectors: DocumentInspector[]\n  onMenuItems: (items: DocumentInspectorMenuItem[]) => void\n}\n\n// The menu item in a document inspector are resolved in a React hook (`useMenuItem`).\n// This means that the menu item needs to be resolved in a React component (in accordance with the rules of hooks).\n// In this component, we map over the configured inspectors and render a `InspectorMenuItem` for each.\n// The `InspectorMenuItem` will resolve the menu item in a React hook and call the `setMenuItem` callback\n// with the resolved menu item and the index of the inspector.\n// Finally, we call the `onMenuItems` callback with the resolved menu items.\nexport function DocumentInspectorMenuItemsResolver(props: DocumentInspectorMenuItemsResolverProps) {\n  const {documentId, documentType, inspectors, onMenuItems} = props\n\n  const len = inspectors.length\n  const [menuItems, setMenuItems] = useState<DocumentInspectorMenuItem[]>(() =>\n    Array.from(new Array(len)),\n  )\n\n  useEffect(() => {\n    if (menuItems.length !== len) {\n      const newFieldActions = Array.from(new Array(len))\n\n      for (let i = 0; i < len; i++) {\n        newFieldActions[i] = menuItems[i]\n      }\n\n      setMenuItems(newFieldActions)\n    }\n  }, [len, menuItems])\n\n  const setMenuItem = useCallback((index: number, node: DocumentInspectorMenuItem) => {\n    setMenuItems((prev) => {\n      const next = [...prev]\n      next[index] = node\n      return next\n    })\n  }, [])\n\n  useEffect(() => {\n    onMenuItems(menuItems.filter(Boolean))\n  }, [menuItems, onMenuItems])\n\n  const InspectorMenuItems = useMemo(() => {\n    return inspectors.map((inspector, index) => {\n      return inspector.useMenuItem\n        ? ([\n            defineInspectorMenuItemComponent({\n              documentId,\n              documentType,\n              index,\n              setMenuItem,\n              useMenuItem: inspector.useMenuItem,\n            }),\n            inspector.name,\n          ] as const)\n        : ([() => null, ''] as const)\n    })\n  }, [documentId, documentType, inspectors, setMenuItem])\n\n  return (\n    <>\n      {InspectorMenuItems.map(([InspectorMenuItem, key]) => key && <InspectorMenuItem key={key} />)}\n    </>\n  )\n}\nDocumentInspectorMenuItemsResolver.displayName = 'DocumentInspectorMenuItemsResolver'\n\nfunction defineInspectorMenuItemComponent({\n  documentId,\n  documentType,\n  index,\n  setMenuItem,\n  useMenuItem,\n}: {\n  documentId: string\n  documentType: string\n  index: number\n  setMenuItem: (index: number, node: DocumentInspectorMenuItem) => void\n  useMenuItem: NonNullable<DocumentInspector['useMenuItem']>\n}) {\n  return memo(function InspectorMenuItem() {\n    const menuItem = useMenuItem({\n      documentId,\n      documentType,\n    })\n    const node = useUnique(menuItem)\n\n    useEffect(() => {\n      setMenuItem(index, node)\n    }, [node])\n\n    return null\n  })\n}\n","import {useMemo} from 'react'\nimport {\n  prepareForPreview,\n  unstable_useValuePreview as useValuePreview,\n  useTranslation,\n} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../i18n'\nimport {useDocumentPane} from './useDocumentPane'\n\n/**\n * useDocumentTitle hook return type.\n *\n * @beta\n * @hidden\n */\nexport interface UseDocumentTitle {\n  error?: string\n  title?: string\n}\n\n/**\n * React hook that returns the document title for the current document in the document pane.\n *\n * @beta\n * @hidden\n *\n * @returns The document title or error. See {@link UseDocumentTitle}\n */\nexport function useDocumentTitle(): UseDocumentTitle {\n  const {connectionState, schemaType, editState, isDeleted, lastRevisionDocument} =\n    useDocumentPane()\n  const {t} = useTranslation(structureLocaleNamespace)\n  // follows the same logic as the StructureTitle component\n  const documentValue = useMemo(() => {\n    return isDeleted\n      ? lastRevisionDocument\n      : editState?.version || editState?.draft || editState?.published\n  }, [isDeleted, lastRevisionDocument, editState])\n  const subscribed = Boolean(documentValue)\n\n  // For deleted documents, we need to handle the preview differently since useValuePreview\n  // will return null for deleted documents. Instead, we directly prepare the preview\n  // from the lastRevisionDocument data.\n  const deletedDocumentPreview = useMemo(() => {\n    if (isDeleted && lastRevisionDocument && schemaType) {\n      try {\n        const prepared = prepareForPreview(lastRevisionDocument, schemaType)\n        return prepared\n      } catch (error) {\n        console.warn('Failed to prepare preview for deleted document:', error)\n        return null\n      }\n    }\n    return null\n  }, [isDeleted, lastRevisionDocument, schemaType])\n\n  const {error, value} = useValuePreview({\n    // disable useValuePreview for deleted documents\n    enabled: subscribed && !isDeleted,\n    schemaType,\n    value: documentValue,\n  })\n\n  if (connectionState === 'connecting' && !subscribed) {\n    return {error: undefined, title: undefined}\n  }\n\n  // For deleted documents, use the directly prepared preview\n  if (isDeleted && deletedDocumentPreview) {\n    return {error: undefined, title: deletedDocumentPreview.title}\n  }\n\n  if (!value && !isDeleted) {\n    return {\n      error: undefined,\n      title: t('panes.document-header-title.new.text', {\n        schemaType: schemaType?.title || schemaType?.name,\n      }),\n    }\n  }\n\n  if (error) {\n    return {\n      error: t('panes.document-list-pane.error.text', {error: error.message}),\n      title: undefined,\n    }\n  }\n\n  return {error: undefined, title: value?.title}\n}\n","import {useToast} from '@sanity/ui'\nimport {memo, useEffect, useMemo, useRef} from 'react'\nimport {\n  isDocumentLimitError,\n  Translate,\n  useDocumentLimitsUpsellContext,\n  useDocumentOperationEvent,\n  useTranslation,\n} from 'sanity'\n\nimport {usePaneRouter} from '../../components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {useDocumentPane} from './useDocumentPane'\nimport {useDocumentTitle} from './useDocumentTitle'\n\nconst IGNORE_OPS = ['patch', 'commit']\n\nexport const DocumentOperationResults = memo(function DocumentOperationResults() {\n  const {push: pushToast} = useToast()\n  const {documentId, documentType, value: documentPaneValue} = useDocumentPane()\n  const documentTitleInfo = useDocumentTitle()\n  const titleError = documentTitleInfo.error\n  const event: any = useDocumentOperationEvent(documentId, documentType)\n  const prevEvent = useRef(event)\n  const paneRouter = usePaneRouter()\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {handleOpenDialog} = useDocumentLimitsUpsellContext()\n\n  const title = useMemo(() => {\n    // If title isn't set from document preview, use the title from the document pane value\n    if (\n      !documentTitleInfo.title &&\n      !titleError &&\n      !IGNORE_OPS.includes(event?.op) &&\n      typeof documentPaneValue.title === 'string' &&\n      event?.type === 'success'\n    ) {\n      return documentPaneValue.title\n    }\n    return documentTitleInfo.title\n  }, [documentTitleInfo.title, titleError, event, documentPaneValue.title])\n  //Truncate the document title and add \"...\" if it is over 25 characters\n  const documentTitleBase = title || t('panes.document-operation-results.operation-undefined-title')\n  const documentTitle =\n    documentTitleBase.length > 25 ? `${documentTitleBase.slice(0, 25)}...` : documentTitleBase\n\n  useEffect(() => {\n    if (!event || event === prevEvent.current) return\n\n    let cleanupId: number | undefined\n\n    if (event.type === 'error') {\n      if (isDocumentLimitError(event.error)) {\n        handleOpenDialog('document_action')\n        return\n      }\n      pushToast({\n        closable: true,\n        duration: 30000, // 30s\n        status: 'error',\n        title: t('panes.document-operation-results.operation-error', {context: event.op}),\n        description: (\n          <details>\n            <summary>{t('panes.document-operation-results.error.summary.title')}</summary>\n            {event.error.message}\n          </details>\n        ),\n      })\n    }\n\n    if (event.type === 'success' && !IGNORE_OPS.includes(event.op)) {\n      pushToast({\n        closable: true,\n        status: 'success',\n        title: (\n          <Translate\n            context={event.op}\n            i18nKey=\"panes.document-operation-results.operation-success\"\n            t={t}\n            values={{\n              op: event.op,\n              title: documentTitle,\n            }}\n            components={{\n              Strong: 'strong',\n            }}\n          />\n        ),\n      })\n    }\n\n    /**\n     * If the document was deleted successfully, close the pane.\n     */\n    if (event.type === 'success' && event.op === 'delete') {\n      // Wait until next tick to allow deletion toasts to appear first\n      cleanupId = setTimeout(() => paneRouter.closeCurrentAndAfter(), 0) as any as number\n    }\n\n    prevEvent.current = event\n\n    // eslint-disable-next-line consistent-return\n    return () => clearTimeout(cleanupId)\n  }, [event, paneRouter, pushToast, t, documentTitle, handleOpenDialog])\n\n  return null\n})\n","import {WarningOutlineIcon} from '@sanity/icons'\nimport {type PreviewValue, type SanityDocument, type SchemaType} from '@sanity/types'\nimport {assignWith} from 'lodash'\nimport {type ReactNode} from 'react'\nimport {combineLatest, type Observable, of} from 'rxjs'\nimport {map, startWith} from 'rxjs/operators'\nimport {type DocumentPreviewStore, getDraftId, getPublishedId} from 'sanity'\n\nimport {type PaneItemPreviewState} from './types'\n\nexport const isLiveEditEnabled = (schemaType: Pick<SchemaType, 'liveEdit'>) =>\n  schemaType.liveEdit === true\n\nexport const getMissingDocumentFallback = (item: SanityDocument) => ({\n  title: <em>{item.title ? String(item.title) : 'Missing document'}</em>,\n  subtitle: <em>{item.title ? `Missing document ID: ${item._id}` : `Document ID: ${item._id}`}</em>,\n  media: () => <WarningOutlineIcon />,\n})\n\nexport const getValueWithFallback = ({\n  value,\n  draft,\n  published,\n}: {\n  value: SanityDocument\n  draft?: Partial<SanityDocument> | PreviewValue | null\n  published?: Partial<SanityDocument> | PreviewValue | null\n}) => {\n  const snapshot = draft || published\n\n  if (!snapshot) {\n    return getMissingDocumentFallback(value)\n  }\n\n  return assignWith({}, snapshot, value, (objValue, srcValue) => {\n    return typeof srcValue === 'undefined' ? objValue : srcValue\n  })\n}\n\nexport function getPreviewStateObservable(\n  documentPreviewStore: DocumentPreviewStore,\n  schemaType: SchemaType,\n  documentId: string,\n  title: ReactNode,\n): Observable<PaneItemPreviewState> {\n  const draft$ = isLiveEditEnabled(schemaType)\n    ? of({snapshot: null})\n    : documentPreviewStore.observeForPreview(\n        {_type: 'reference', _ref: getDraftId(documentId)},\n        schemaType,\n      )\n\n  const published$ = documentPreviewStore.observeForPreview(\n    {_type: 'reference', _ref: getPublishedId(documentId)},\n    schemaType,\n  )\n\n  return combineLatest([draft$, published$]).pipe(\n    map(([draft, published]) => ({\n      draft: draft.snapshot ? {title, ...draft.snapshot} : null,\n      isLoading: false,\n      published: published.snapshot ? {title, ...published.snapshot} : null,\n    })),\n    startWith({draft: null, isLoading: true, published: null}),\n  )\n}\n","import {type SchemaType} from '@sanity/types'\nimport {type EditStateFor, type Workspace} from 'sanity'\n\nimport {isLiveEditEnabled} from './components/paneItem/helpers'\n\nexport interface Context {\n  editState: Pick<EditStateFor, 'ready' | 'draft' | 'published' | 'version'> | null\n  workspace: {\n    document: {\n      drafts: Pick<Workspace['document']['drafts'], 'enabled'>\n    }\n  }\n  schemaType: Pick<SchemaType, 'liveEdit'>\n}\n\n/**\n * Determine whether a document has an obsolete draft. This occurs if a document has a draft while\n * the draft model is inactive, or if a live-edit document has a draft.\n */\nexport function hasObsoleteDraft({editState, workspace, schemaType}: Context):\n  | {\n      result: true\n      reason: 'LIVE_EDIT_ACTIVE' | 'DRAFT_MODEL_INACTIVE'\n    }\n  | {result: false}\n  | {result: undefined} {\n  if (!editState?.ready) {\n    return {\n      result: undefined,\n    }\n  }\n\n  const draftExists = editState.draft !== null\n\n  const {\n    document: {\n      drafts: {enabled: isDraftModelEnabled},\n    },\n  } = workspace\n\n  if (draftExists === false) {\n    return {\n      result: false,\n    }\n  }\n\n  if (!isDraftModelEnabled) {\n    return {\n      result: true,\n      reason: 'DRAFT_MODEL_INACTIVE',\n    }\n  }\n\n  if (isLiveEditEnabled(schemaType)) {\n    return {\n      result: true,\n      reason: 'LIVE_EDIT_ACTIVE',\n    }\n  }\n\n  return {\n    result: false,\n  }\n}\n","import {type EditStateFor, isNewDocument, type isPerspectiveWriteable} from 'sanity'\n\n/**\n * Determine whether the user must choose a new perspective in order to create a document.\n *\n * @returns A boolean reflecting whether the user must choose a new perspective, and `undefined` while indeterminate.\n * @internal\n */\nexport function mustChooseNewDocumentDestination({\n  isSelectedPerspectiveWriteable,\n  editState,\n}: {\n  isSelectedPerspectiveWriteable: ReturnType<typeof isPerspectiveWriteable>\n  editState: Pick<EditStateFor, 'ready' | 'draft' | 'published' | 'version'> | null\n}): boolean | undefined {\n  return isNewDocument(editState) && !isSelectedPerspectiveWriteable.result\n}\n","import {CloseIcon} from '@sanity/icons'\nimport {Box, Card, type CardProps, Flex, Text} from '@sanity/ui'\nimport {type HTMLProps, type ReactNode} from 'react'\nimport {useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Button} from '../../../../ui-components'\nimport {structureLocaleNamespace} from '../../../i18n'\n\nexport interface DocumentInspectorHeaderProps {\n  as?: CardProps['as']\n  closeButtonLabel: string\n  flex?: CardProps['flex']\n  onClose: () => void\n  title: ReactNode\n}\n\nconst Root = styled(Card)({\n  position: 'relative',\n  zIndex: '1',\n  lineHeight: '0',\n})\n\n/** @internal */\nexport function DocumentInspectorHeader(\n  props: DocumentInspectorHeaderProps & Omit<HTMLProps<HTMLDivElement>, 'as' | 'height' | 'ref'>,\n) {\n  const {as: forwardedAs, children, closeButtonLabel, onClose, title, ...restProps} = props\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  return (\n    <Root {...restProps} as={forwardedAs}>\n      <Flex padding={2}>\n        <Box flex={1} padding={3}>\n          <Text as=\"h1\" size={1} weight=\"medium\">\n            {title}\n          </Text>\n        </Box>\n        <Box flex=\"none\" padding={1}>\n          <Button\n            aria-label={closeButtonLabel}\n            icon={CloseIcon}\n            mode=\"bleed\"\n            onClick={onClose}\n            tooltipProps={{content: t('document-inspector.close-button.tooltip')}}\n          />\n        </Box>\n      </Flex>\n      {children}\n    </Root>\n  )\n}\n","import {Box} from '@sanity/ui'\nimport {useCallback} from 'react'\nimport {Resizable} from 'sanity'\n\nimport {usePane} from '../../../components'\nimport {useStructureTool} from '../../../useStructureTool'\nimport {DOCUMENT_INSPECTOR_MAX_WIDTH, DOCUMENT_INSPECTOR_MIN_WIDTH} from '../constants'\nimport {useDocumentPane} from '../useDocumentPane'\n\ninterface DocumentInspectorPanelProps {\n  documentId: string\n  documentType: string\n  flex?: number | number[]\n}\n\nexport function DocumentInspectorPanel(\n  props: DocumentInspectorPanelProps,\n): React.JSX.Element | null {\n  const {documentId, documentType, flex} = props\n  const {collapsed} = usePane()\n  const {closeInspector, inspector} = useDocumentPane()\n  const {features} = useStructureTool()\n\n  const handleClose = useCallback(() => {\n    if (inspector) closeInspector(inspector.name)\n  }, [closeInspector, inspector])\n\n  if (collapsed || !inspector) return null\n\n  const Component = inspector.component\n  const element = (\n    <Component onClose={handleClose} documentId={documentId} documentType={documentType} />\n  )\n\n  if (features.resizablePanes) {\n    return (\n      <Resizable\n        as=\"aside\"\n        data-ui=\"DocumentInspectorPanel\"\n        flex={flex}\n        resizerPosition=\"left\"\n        maxWidth={DOCUMENT_INSPECTOR_MAX_WIDTH}\n        minWidth={DOCUMENT_INSPECTOR_MIN_WIDTH}\n      >\n        {element}\n      </Resizable>\n    )\n  }\n\n  return (\n    <Box as=\"aside\" data-ui=\"DocumentInspectorPanel\" flex={flex}>\n      {element}\n    </Box>\n  )\n}\n","import {useCallback, useMemo} from 'react'\nimport {useObservable} from 'react-rx'\nimport {map} from 'rxjs/operators'\nimport {useKeyValueStore} from 'sanity'\n\nconst STRUCTURE_TOOL_NAMESPACE = 'studio.structure-tool'\n\n/**\n * @internal\n */\nexport function useStructureToolSetting<ValueType>(\n  namespace: string,\n  key: string | null,\n  defaultValue?: ValueType,\n): [ValueType | undefined, (_value: ValueType) => void] {\n  const keyValueStore = useKeyValueStore()\n\n  const keyValueStoreKey = [STRUCTURE_TOOL_NAMESPACE, namespace, key].filter(Boolean).join('.')\n\n  const value$ = useMemo(() => {\n    return keyValueStore\n      .getKey(keyValueStoreKey)\n      .pipe(map((value) => (value === null ? defaultValue : value)))\n  }, [defaultValue, keyValueStore, keyValueStoreKey])\n\n  const value = useObservable(value$, defaultValue) as ValueType\n  const set = useCallback(\n    (newValue: ValueType) => {\n      if (newValue !== value) {\n        keyValueStore.setKey(keyValueStoreKey, newValue as string)\n      }\n    },\n    [keyValueStore, keyValueStoreKey, value],\n  )\n\n  return useMemo(() => [value, set], [set, value])\n}\n","export const VIEW_MODE_PARSED = {id: 'parsed', title: 'document-inspector.view-mode.parsed'}\nexport const VIEW_MODE_RAW = {id: 'raw', title: 'document-inspector.view-mode.raw-json'}\nexport const VIEW_MODES = [VIEW_MODE_PARSED, VIEW_MODE_RAW]\n","import {type SanityDocumentLike} from '@sanity/types'\nimport LRU from 'quick-lru'\nimport {isRecord, isString} from 'sanity'\n\nconst lru = new LRU({maxSize: 1000})\n\nexport function isExpanded(keyPath: any, value: any): any {\n  const cached = lru.get(keyPath)\n\n  if (cached === undefined) {\n    lru.set(keyPath, Array.isArray(value) || isRecord(value))\n    return isExpanded(keyPath, value)\n  }\n\n  return cached\n}\n\nexport function toggleExpanded(event: any): void {\n  const {path} = event\n  const current = lru.get(path)\n\n  if (current === undefined) {\n    // something is wrong\n    return\n  }\n\n  lru.set(path, !current)\n}\n\nexport function selectElement(element: HTMLElement): void {\n  const sel = window.getSelection()\n\n  if (sel) {\n    const range = document.createRange()\n\n    sel.removeAllRanges()\n    range.selectNodeContents(element)\n    sel.addRange(range)\n  }\n}\n\nexport function select(event: any): void {\n  selectElement(event.currentTarget)\n}\n\nexport function maybeSelectAll(event: any): void {\n  const selectAll = event.keyCode === 65 && (event.metaKey || event.ctrlKey)\n\n  if (!selectAll) {\n    return\n  }\n\n  event.preventDefault()\n\n  selectElement(event.currentTarget)\n}\n\nexport function isDocumentLike(value: unknown): value is SanityDocumentLike {\n  return isRecord(value) && isString(value._id) && isString(value._type)\n}\n","import {rem, type Theme} from '@sanity/ui'\nimport {css, styled} from 'styled-components'\n\nexport const JSONInspectorWrapper = styled.div(({theme}: {theme: Theme}) => {\n  const {color, fonts, space} = theme.sanity\n\n  return css`\n    & .json-inspector,\n    & .json-inspector .json-inspector__selection {\n      font-family: ${fonts.code.family};\n      font-size: ${fonts.code.sizes[1].fontSize}px;\n      line-height: ${fonts.code.sizes[1].lineHeight}px;\n      color: var(--card-code-fg-color);\n    }\n\n    & .json-inspector .json-inspector__leaf {\n      padding-left: ${rem(space[4])};\n    }\n\n    & .json-inspector .json-inspector__leaf.json-inspector__leaf_root {\n      padding-top: ${rem(space[3])};\n      padding-left: 0;\n    }\n\n    & .json-inspector > .json-inspector__leaf_root > .json-inspector__line > .json-inspector__key {\n      display: none;\n    }\n\n    & .json-inspector .json-inspector__line {\n      display: block;\n      position: relative;\n      cursor: default;\n    }\n\n    & .json-inspector .json-inspector__line::after {\n      content: '';\n      position: absolute;\n      top: 0;\n      left: -200px;\n      right: -50px;\n      bottom: 0;\n      z-index: -1;\n      pointer-events: none;\n    }\n\n    & .json-inspector .json-inspector__line:hover::after {\n      background: var(--card-code-bg-color);\n    }\n\n    & .json-inspector .json-inspector__leaf_composite > .json-inspector__line {\n      cursor: pointer;\n    }\n\n    & .json-inspector .json-inspector__leaf_composite > .json-inspector__line::before {\n      content: '▸ ';\n      margin-left: calc(0 - ${rem(space[4])} + 3px);\n      font-size: ${fonts.code.sizes[1].fontSize}px;\n      line-height: ${fonts.code.sizes[1].lineHeight}px;\n    }\n\n    &\n      .json-inspector\n      .json-inspector__leaf_expanded.json-inspector__leaf_composite\n      > .json-inspector__line::before {\n      content: '▾ ';\n      font-size: ${fonts.code.sizes[1].fontSize}px;\n      line-height: ${fonts.code.sizes[1].lineHeight}px;\n    }\n\n    & .json-inspector .json-inspector__radio,\n    & .json-inspector .json-inspector__flatpath {\n      display: none;\n    }\n\n    & .json-inspector .json-inspector__value {\n      margin-left: ${rem(space[4] / 2)};\n    }\n\n    &\n      .json-inspector\n      > .json-inspector__leaf_root\n      > .json-inspector__line\n      > .json-inspector__key\n      + .json-inspector__value {\n      margin: 0;\n    }\n\n    & .json-inspector .json-inspector__key {\n      color: ${color.syntax.property};\n    }\n\n    & .json-inspector .json-inspector__value_helper,\n    & .json-inspector .json-inspector__value_null {\n      color: ${color.syntax.constant};\n    }\n\n    & .json-inspector .json-inspector__not-found {\n      padding-top: ${rem(space[3])};\n    }\n\n    & .json-inspector .json-inspector__value_string {\n      color: ${color.syntax.string};\n    }\n\n    & .json-inspector .json-inspector__value_boolean {\n      color: ${color.syntax.boolean};\n    }\n\n    & .json-inspector .json-inspector__value_number {\n      color: ${color.syntax.number};\n    }\n\n    & .json-inspector .json-inspector__show-original {\n      display: inline-block;\n      padding: 0 6px;\n      cursor: pointer;\n    }\n\n    & .json-inspector .json-inspector__show-original:hover {\n      color: inherit;\n    }\n\n    & .json-inspector .json-inspector__show-original::before {\n      content: '↔';\n    }\n\n    & .json-inspector .json-inspector__show-original:hover::after {\n      content: ' expand';\n    }\n  `\n})\n","import {SearchIcon} from '@sanity/icons'\nimport {TextInput} from '@sanity/ui'\nimport {type ChangeEvent, useCallback} from 'react'\nimport {useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../i18n'\n\nexport function Search(props: {onChange: (q: string) => void; query: string}) {\n  const {onChange, query} = props\n\n  const handleChange = useCallback(\n    (event: ChangeEvent<HTMLInputElement>) => onChange(event.target.value),\n    [onChange],\n  )\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  return (\n    <TextInput\n      icon={SearchIcon}\n      onChange={handleChange}\n      placeholder={t('document-inspector.search.placeholder')}\n      radius={2}\n      value={query || ''}\n    />\n  )\n}\n","import {JsonInspector} from '@rexxars/react-json-inspector'\nimport {type SanityDocument} from '@sanity/types'\nimport {Card, Code, Flex, TabList, TabPanel} from '@sanity/ui'\nimport {useCallback} from 'react'\nimport {Translate, useTranslation} from 'sanity'\n\nimport {Dialog, Tab} from '../../../../ui-components'\nimport {DocTitle} from '../../../components'\nimport {structureLocaleNamespace} from '../../../i18n'\nimport {useStructureToolSetting} from '../../../useStructureToolSetting'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {VIEW_MODE_PARSED, VIEW_MODE_RAW, VIEW_MODES} from './constants'\nimport {isDocumentLike, isExpanded, maybeSelectAll, select, toggleExpanded} from './helpers'\nimport {JSONInspectorWrapper} from './InspectDialog.styles'\nimport {Search} from './Search'\n\ninterface InspectDialogProps {\n  value: Partial<SanityDocument> | null\n}\n\nexport function InspectDialog(props: InspectDialogProps) {\n  const {value} = props\n  const {onInspectClose, paneKey} = useDocumentPane()\n  const dialogIdPrefix = `${paneKey}_inspect_`\n\n  /* this creates a view mode (the default that it opens with is the parsed tab) that is saved based on the paneKey\n  where the inspect dialog lives.\n  This also means that when a page is loaded, the state of the tabs remains and doesn't revert to the pane tab */\n  const [viewModeId, onViewModeChange] = useStructureToolSetting(\n    'inspect-view-mode',\n    null,\n    'parsed',\n  )\n\n  /* based on the view mode it shows the right tab content */\n  const viewMode = VIEW_MODES.find((mode) => mode.id === viewModeId)\n\n  const setParsedViewMode = useCallback(() => {\n    onViewModeChange(VIEW_MODE_PARSED.id)\n  }, [onViewModeChange])\n\n  const setRawViewMode = useCallback(() => {\n    onViewModeChange(VIEW_MODE_RAW.id)\n  }, [onViewModeChange])\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  return (\n    <Dialog\n      bodyHeight=\"fill\"\n      id={`${dialogIdPrefix}dialog`}\n      header={\n        isDocumentLike(value) ? (\n          <Translate\n            t={t}\n            i18nKey=\"document-inspector.dialog.title\"\n            components={{\n              DocumentTitle: () => (\n                <em>\n                  <DocTitle document={value} />\n                </em>\n              ),\n            }}\n          />\n        ) : (\n          <em>{t('document-inspector.dialog.title-no-value')}</em>\n        )\n      }\n      onClose={onInspectClose}\n      onClickOutside={onInspectClose}\n      padding={false}\n      width={2}\n    >\n      <Flex direction=\"column\" height=\"fill\">\n        <Card\n          padding={3}\n          paddingTop={0}\n          shadow={1}\n          style={{position: 'sticky', bottom: 0, zIndex: 3}}\n        >\n          <TabList space={1}>\n            <Tab\n              aria-controls={`${dialogIdPrefix}tabpanel`}\n              id={`${dialogIdPrefix}tab-${VIEW_MODE_PARSED.id}`}\n              label={t(VIEW_MODE_PARSED.title)}\n              onClick={setParsedViewMode}\n              selected={viewMode === VIEW_MODE_PARSED}\n            />\n            <Tab\n              aria-controls={`${dialogIdPrefix}tabpanel`}\n              id={`${dialogIdPrefix}tab-${VIEW_MODE_RAW.id}`}\n              label={t(VIEW_MODE_RAW.title)}\n              onClick={setRawViewMode}\n              selected={viewMode === VIEW_MODE_RAW}\n            />\n          </TabList>\n        </Card>\n\n        <TabPanel\n          aria-labelledby={`${dialogIdPrefix}tab-${viewModeId}`}\n          flex={1}\n          id={`${dialogIdPrefix}tabpanel`}\n          overflow=\"auto\"\n          padding={4}\n          style={{outline: 'none'}}\n        >\n          {viewMode === VIEW_MODE_PARSED && (\n            <JSONInspectorWrapper>\n              <JsonInspector\n                data={value}\n                isExpanded={isExpanded}\n                onClick={toggleExpanded}\n                search={Search}\n                filterOptions={{ignoreCase: true}}\n              />\n            </JSONInspectorWrapper>\n          )}\n\n          {viewMode === VIEW_MODE_RAW && (\n            <Code\n              language=\"json\"\n              tabIndex={0}\n              onKeyDown={maybeSelectAll}\n              onDoubleClick={select}\n              onFocus={select}\n              size={1}\n            >\n              {JSON.stringify(value, null, 2)}\n            </Code>\n          )}\n        </TabPanel>\n      </Flex>\n    </Dialog>\n  )\n}\n","import {Box, type ButtonMode, type ButtonTone, Card, type CardTone, Flex, Text} from '@sanity/ui'\nimport {type ComponentType, type ElementType, type ReactNode} from 'react'\n\nimport {Button} from '../../../../../ui-components'\n\ninterface BannerProps {\n  action?: {\n    as?: ElementType | keyof React.JSX.IntrinsicElements\n    icon?: ComponentType\n    onClick?: () => void\n    text: string\n    tone?: ButtonTone\n    disabled?: boolean\n    mode?: ButtonMode\n  }\n  content: ReactNode\n  icon?: ComponentType\n  tone?: CardTone\n  paddingY?: number\n}\n\nexport function Banner(props: BannerProps) {\n  const {action, content, icon: Icon, tone = 'transparent', paddingY = 2, ...rest} = props\n\n  return (\n    <Box padding={1}>\n      <Card radius={3} paddingX={2} paddingY={paddingY} tone={tone} {...rest}>\n        <Flex align=\"center\" gap={3} paddingX={2}>\n          {Icon && (\n            <Text size={0}>\n              <Icon />\n            </Text>\n          )}\n\n          <Flex align=\"center\" flex={1} gap={2} paddingY={2}>\n            {content}\n          </Flex>\n\n          {action && (\n            <Button {...action} mode={action.mode || 'ghost'} tone={action.tone || 'default'} />\n          )}\n        </Flex>\n      </Card>\n    </Box>\n  )\n}\n","import {DocumentRemoveIcon, ReadOnlyIcon} from '@sanity/icons'\nimport {Text} from '@sanity/ui'\nimport {useCallback} from 'react'\nimport {\n  isDraftPerspective,\n  isPublishedPerspective,\n  type ReleaseDocument,\n  Translate,\n  useDocumentOperation,\n  usePerspective,\n  useTranslation,\n} from 'sanity'\nimport {useRouter} from 'sanity/router'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {Banner} from './Banner'\n\nexport function DeletedDocumentBanners() {\n  const {isDeleted, isDeleting, ready} = useDocumentPane()\n  const {selectedPerspective} = usePerspective()\n  if (!ready) return null\n  if (\n    !isPublishedPerspective(selectedPerspective) &&\n    !isDraftPerspective(selectedPerspective) &&\n    selectedPerspective.state === 'archived'\n  ) {\n    return <ArchivedReleaseBanner release={selectedPerspective as ReleaseDocument} />\n  }\n  if (isDeleted && !isDeleting) return <DeletedDocumentBanner />\n}\n\nfunction DeletedDocumentBanner() {\n  const {documentId, documentType} = useDocumentPane()\n  const {restore} = useDocumentOperation(documentId, documentType)\n  const {navigateIntent} = useRouter()\n\n  const handleRestore = useCallback(() => {\n    restore.execute('lastRevision')\n    navigateIntent('edit', {id: documentId, type: documentType})\n  }, [documentId, documentType, navigateIntent, restore])\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  return (\n    <Banner\n      action={{\n        onClick: handleRestore,\n        text: t('banners.deleted-document-banner.restore-button.text'),\n      }}\n      content={\n        <Text size={1} weight=\"medium\">\n          {t('banners.deleted-document-banner.text')}\n        </Text>\n      }\n      data-testid=\"deleted-document-banner\"\n      icon={ReadOnlyIcon}\n    />\n  )\n}\n\nconst ArchivedReleaseBanner = ({release}: {release: ReleaseDocument}) => {\n  const {t} = useTranslation()\n\n  return (\n    <Banner\n      tone=\"caution\"\n      content={\n        <Text size={1} weight=\"medium\">\n          <Translate\n            t={t}\n            i18nKey=\"banners.deleted-release-banner.text\"\n            values={{title: release.metadata?.title || t('release.placeholder-untitled-release')}}\n          />\n        </Text>\n      }\n      data-testid=\"deleted-release-banner\"\n      icon={DocumentRemoveIcon}\n    />\n  )\n}\n","import {ErrorOutlineIcon} from '@sanity/icons'\nimport {Text} from '@sanity/ui'\nimport {isDeprecatedSchemaType, Translate, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {Banner} from './Banner'\n\nexport function DeprecatedDocumentTypeBanner() {\n  const {schemaType} = useDocumentPane()\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (!isDeprecatedSchemaType(schemaType)) {\n    return null\n  }\n\n  return (\n    <Banner\n      content={\n        <Text size={1} weight=\"medium\">\n          <Translate t={t} i18nKey=\"banners.deprecated-document-type-banner.text\" />{' '}\n          {schemaType.deprecated.reason}\n        </Text>\n      }\n      data-testid=\"deprecated-document-type-banner\"\n      icon={ErrorOutlineIcon}\n    />\n  )\n}\n","import {defineEvent} from '@sanity/telemetry'\n\n/** @internal */\nexport const AskToEditDialogOpened = defineEvent({\n  name: 'Ask To Edit Dialog Opened',\n  version: 1,\n  description: 'User clicked the \"Ask to edit\" button in the document permissions banner',\n})\n\n/** @internal */\nexport const AskToEditRequestSent = defineEvent({\n  name: 'Ask To Edit Request Sent',\n  version: 1,\n  description: 'User sent a role change request from the dialog',\n})\n","import {useTelemetry} from '@sanity/telemetry/react'\nimport {Box, Card, DialogProvider, Flex, Stack, Text, TextInput, useToast} from '@sanity/ui'\nimport {useId, useMemo, useState} from 'react'\nimport {useObservable} from 'react-rx'\nimport {catchError, map, type Observable, of, startWith} from 'rxjs'\nimport {type Role, useClient, useProjectId, useTranslation, useZIndex} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Dialog} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {AskToEditRequestSent} from './__telemetry__/RequestPermissionDialog.telemetry'\nimport {type AccessRequest} from './useRoleRequestsStatus'\n\nconst MAX_NOTE_LENGTH = 150\n\n/** @internal */\nexport const DialogBody = styled(Box)`\n  box-sizing: border-box;\n`\n\n/** @internal */\nexport const LoadingContainer = styled(Flex).attrs({\n  align: 'center',\n  direction: 'column',\n  justify: 'center',\n})`\n  height: 110px;\n`\n\n/** @internal */\nexport interface RequestPermissionDialogProps {\n  onClose?: () => void\n  onRequestSubmitted?: () => void\n}\n\n/**\n * A dialog that enables the user to request permission to change their\n * member role from \"Viewer\" to \"Editor\" or \"Admin\" depending on the\n * project's available roles.\n *\n * @internal\n */\nexport function RequestPermissionDialog({\n  onClose,\n  onRequestSubmitted,\n}: RequestPermissionDialogProps) {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const telemtry = useTelemetry()\n  const dialogId = `request-permissions-${useId()}`\n  const projectId = useProjectId()\n  const client = useClient({apiVersion: '2024-09-26'})\n  const toast = useToast()\n  const zOffset = useZIndex()\n\n  const [isSubmitting, setIsSubmitting] = useState(false)\n\n  const [note, setNote] = useState('')\n\n  const [msgError, setMsgError] = useState<string | undefined>()\n  const [hasTooManyRequests, setHasTooManyRequests] = useState<boolean>(false)\n  const [hasBeenDenied, setHasBeenDenied] = useState<boolean>(false)\n\n  const requestedRole$: Observable<'administrator' | 'editor'> = useMemo(() => {\n    const adminRole = 'administrator' as const\n    if (!projectId || !client) return of(adminRole)\n    return client.observable\n      .request<(Role & {appliesToUsers?: boolean})[]>({url: `/projects/${projectId}/roles`})\n      .pipe(\n        map((roles) => {\n          const hasEditor = roles\n            .filter((role) => role?.appliesToUsers)\n            .find((role) => role.name === 'editor')\n          return hasEditor ? 'editor' : adminRole\n        }),\n        startWith(adminRole),\n        catchError(() => of(adminRole)),\n      )\n  }, [projectId, client])\n\n  const requestedRole = useObservable(requestedRole$)\n\n  const onSubmit = () => {\n    setIsSubmitting(true)\n    client\n      .request<AccessRequest | null>({\n        url: `/access/project/${projectId}/requests`,\n        method: 'post',\n        body: {note, requestUrl: window?.location.href, requestedRole, type: 'role'},\n      })\n      .then((request) => {\n        if (request) {\n          if (onRequestSubmitted) onRequestSubmitted()\n          telemtry.log(AskToEditRequestSent)\n          toast.push({title: 'Edit access requested'})\n        }\n      })\n      .catch((err) => {\n        const statusCode = err?.response?.statusCode\n        const errMessage = err?.response?.body?.message\n        if (statusCode === 429) {\n          // User is over their cross-project request limit\n          setHasTooManyRequests(true)\n          setMsgError(errMessage)\n        }\n        if (statusCode === 409) {\n          // If we get a 409, user has been denied on this project or has a valid pending request\n          // valid pending request should be handled by GET request above\n          setHasBeenDenied(true)\n          setMsgError(errMessage)\n        } else {\n          toast.push({\n            title: 'There was a problem submitting your request.',\n            status: 'error',\n          })\n        }\n      })\n      .finally(() => {\n        setIsSubmitting(false)\n      })\n  }\n\n  return (\n    <DialogProvider position={'fixed'} zOffset={zOffset.fullscreen}>\n      <Dialog\n        width={1}\n        id={dialogId}\n        header={t('request-permission-dialog.header.text')}\n        footer={{\n          cancelButton: {\n            onClick: onClose,\n            text: t('confirm-dialog.cancel-button.fallback-text'),\n          },\n          confirmButton: {\n            onClick: onSubmit,\n            loading: isSubmitting,\n            disabled: hasTooManyRequests || hasBeenDenied,\n            text: t('request-permission-dialog.confirm-button.text'),\n            tone: 'primary',\n            type: 'submit',\n          },\n        }}\n        onClose={onClose}\n        onClickOutside={onClose}\n      >\n        <DialogBody>\n          <Stack space={4}>\n            <Text>{t('request-permission-dialog.description.text')}</Text>\n            {hasTooManyRequests || hasBeenDenied ? (\n              <Card tone={'caution'} padding={3} radius={2} shadow={1}>\n                <Text size={1}>\n                  {hasTooManyRequests && (\n                    <>{msgError ?? t('request-permission-dialog.warning.limit-reached.text')}</>\n                  )}\n                  {hasBeenDenied && (\n                    <>{msgError ?? t('request-permission-dialog.warning.denied.text')}</>\n                  )}\n                </Text>\n              </Card>\n            ) : (\n              <Stack space={3} paddingBottom={0}>\n                <TextInput\n                  placeholder={t('request-permission-dialog.note-input.placeholder.text')}\n                  disabled={isSubmitting}\n                  onKeyDown={(e) => {\n                    if (e.key === 'Enter') onSubmit()\n                  }}\n                  maxLength={MAX_NOTE_LENGTH}\n                  value={note}\n                  onChange={(e) => {\n                    setNote(e.currentTarget.value)\n                  }}\n                />\n\n                <Text align=\"right\" muted size={1}>{`${note.length}/${MAX_NOTE_LENGTH}`}</Text>\n              </Stack>\n            )}\n          </Stack>\n        </DialogBody>\n      </Dialog>\n    </DialogProvider>\n  )\n}\n","import {addWeeks, isAfter, isBefore} from 'date-fns'\nimport {useMemo} from 'react'\nimport {useObservable} from 'react-rx'\nimport {of} from 'rxjs'\nimport {catchError, map, startWith} from 'rxjs/operators'\nimport {type SanityClient, useClient, useProjectId} from 'sanity'\n\n/** @internal */\nexport interface AccessRequest {\n  id: string\n  status: 'pending' | 'accepted' | 'declined'\n  resourceId: string\n  resourceType: 'project'\n  createdAt: string\n  updatedAt: string\n  updatedByUserId: string\n  requestedByUserId: string\n  requestedRole: string\n  type: 'access' | 'role'\n  note: string\n}\n\nconst LOADING_STATE = {loading: true, error: false, status: undefined}\nconst EMPTY_STATE = {loading: false, error: false, status: 'none'}\nconst DECLINED_STATE = {loading: false, error: false, status: 'declined'}\nconst PENDING_STATE = {loading: false, error: false, status: 'pending'}\nconst EXPIRED_STATE = {loading: false, error: false, status: 'expired'}\n\n/** @internal */\nexport const useRoleRequestsStatus = () => {\n  const client = useClient({apiVersion: '2024-07-01'})\n  const projectId = useProjectId()\n\n  const checkRoleRequests$ = useMemo(() => {\n    if (!client || !projectId) {\n      return of(EMPTY_STATE)\n    }\n\n    return checkRoleRequests(client, projectId)\n  }, [client, projectId])\n\n  const {loading, error, status} = useObservable(checkRoleRequests$, LOADING_STATE)\n  return {data: status, loading, error}\n}\n\nfunction checkRoleRequests(client: SanityClient, projectId: string) {\n  return client.observable\n    .request<AccessRequest[] | null>({\n      url: '/access/requests/me',\n      tag: 'use-role-requests-status',\n    })\n    .pipe(\n      map((requests) => {\n        if (!requests || requests.length === 0) {\n          return EMPTY_STATE\n        }\n\n        // Filter requests for the specific project and where type is 'role'\n        const projectRequests = requests.filter(\n          (request) => request.resourceId === projectId && request.type === 'role',\n        )\n\n        const declinedRequest = projectRequests.find((request) => request.status === 'declined')\n        if (\n          declinedRequest &&\n          isAfter(addWeeks(new Date(declinedRequest.createdAt), 2), new Date())\n        ) {\n          return DECLINED_STATE\n        }\n\n        const pendingRequest = projectRequests.find(\n          (request) =>\n            request.status === 'pending' &&\n            isAfter(addWeeks(new Date(request.createdAt), 2), new Date()),\n        )\n        if (pendingRequest) {\n          return PENDING_STATE\n        }\n\n        const oldPendingRequest = projectRequests.find(\n          (request) =>\n            request.status === 'pending' &&\n            isBefore(addWeeks(new Date(request.createdAt), 2), new Date()),\n        )\n\n        return oldPendingRequest ? EXPIRED_STATE : EMPTY_STATE\n      }),\n      catchError((err) => {\n        console.error('Failed to fetch access requests', err)\n        return of({loading: false, error: true, status: undefined})\n      }),\n      startWith(LOADING_STATE), // Start with loading state\n    )\n}\n","import {ReadOnlyIcon} from '@sanity/icons'\nimport {useTelemetry} from '@sanity/telemetry/react'\nimport {Text} from '@sanity/ui'\nimport {useMemo, useState} from 'react'\nimport {Translate, useCurrentUser, useListFormat, useTranslation} from 'sanity'\n\nimport {\n  RequestPermissionDialog,\n  useRoleRequestsStatus,\n} from '../../../../components/requestPermissionDialog'\nimport {AskToEditDialogOpened} from '../../../../components/requestPermissionDialog/__telemetry__/RequestPermissionDialog.telemetry'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {Banner} from './Banner'\n\ninterface InsufficientPermissionBannerProps {\n  requiredPermission: 'update' | 'create'\n}\n\nexport function InsufficientPermissionBanner({\n  requiredPermission,\n}: InsufficientPermissionBannerProps) {\n  const currentUser = useCurrentUser()\n\n  const {\n    data: roleRequestStatus,\n    loading: requestStatusLoading,\n    error: requestStatusError,\n  } = useRoleRequestsStatus()\n  const [requestSent, setRequestSent] = useState(false)\n  const requestPending = useMemo(\n    () => roleRequestStatus === 'pending' || roleRequestStatus === 'declined' || requestSent,\n    [roleRequestStatus, requestSent],\n  )\n  const currentUserRoles = currentUser?.roles || []\n  const isOnlyViewer = currentUserRoles.length === 1 && currentUserRoles[0].name === 'viewer'\n  const [showRequestPermissionDialog, setShowRequestPermissionDialog] = useState(false)\n\n  const listFormat = useListFormat({style: 'short'})\n  const {t} = useTranslation(structureLocaleNamespace)\n  const telemetry = useTelemetry()\n\n  const roleTitles = currentUserRoles.map((role) => role.title)\n  const roles = listFormat\n    .formatToParts(roleTitles)\n    .map((part) =>\n      part.type === 'element' ? <code key={part.value}>{part.value}</code> : part.value,\n    )\n\n  return (\n    <>\n      <Banner\n        content={\n          <Text size={1} weight=\"medium\">\n            <Translate\n              t={t}\n              i18nKey=\"banners.permission-check-banner.missing-permission\"\n              components={{Roles: () => <>{roles}</>}}\n              values={{count: roles.length, roles: roleTitles}}\n              context={requiredPermission}\n            />\n          </Text>\n        }\n        action={\n          isOnlyViewer && roleRequestStatus && !requestStatusError && !requestStatusLoading\n            ? {\n                onClick: requestPending\n                  ? undefined\n                  : () => {\n                      setShowRequestPermissionDialog(true)\n                      telemetry.log(AskToEditDialogOpened)\n                    },\n                text: requestPending\n                  ? t('banners.permission-check-banner.request-permission-button.sent')\n                  : t('banners.permission-check-banner.request-permission-button.text'),\n                tone: requestPending ? 'default' : 'primary',\n                disabled: requestPending,\n                mode: requestPending ? 'bleed' : undefined,\n              }\n            : undefined\n        }\n        data-testid=\"permission-check-banner\"\n        icon={ReadOnlyIcon}\n      />\n      {showRequestPermissionDialog && (\n        <RequestPermissionDialog\n          onClose={() => setShowRequestPermissionDialog(false)}\n          onRequestSubmitted={() => {\n            setRequestSent(true)\n            setShowRequestPermissionDialog(false)\n          }}\n        />\n      )}\n    </>\n  )\n}\n","import {CloseIcon, SyncIcon, WarningOutlineIcon} from '@sanity/icons'\nimport {type KeyedSegment, type Reference} from '@sanity/types'\nimport {Text} from '@sanity/ui'\nimport {fromString as pathFromString, get as pathGet} from '@sanity/util/paths'\nimport {memo, useCallback, useMemo} from 'react'\nimport {useObservable} from 'react-rx'\nimport {concat, type Observable, of} from 'rxjs'\nimport {debounceTime, map} from 'rxjs/operators'\nimport {\n  type DocumentAvailability,\n  getPublishedId,\n  useDocumentPreviewStore,\n  usePerspective,\n  useTranslation,\n} from 'sanity'\n\nimport {usePaneRouter} from '../../../../components'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {type RouterPaneGroup} from '../../../../types'\nimport {Banner} from './Banner'\n\ninterface ParentReferenceInfo {\n  loading: boolean\n  result?: {\n    availability: {\n      draft: DocumentAvailability\n      published: DocumentAvailability\n      version?: DocumentAvailability\n    }\n    refValue: string | undefined\n  }\n}\n\nexport const ReferenceChangedBanner = memo(() => {\n  const documentPreviewStore = useDocumentPreviewStore()\n  const {selectedReleaseId} = usePerspective()\n  const {params, groupIndex, routerPanesState, replaceCurrent, BackLink} = usePaneRouter()\n  const routerReferenceId = routerPanesState[groupIndex]?.[0].id\n  const parentGroup = routerPanesState[groupIndex - 1] as RouterPaneGroup | undefined\n  const parentSibling = parentGroup?.[0]\n  const parentId = parentSibling?.id\n  const hasHistoryOpen = Boolean(parentSibling?.params?.rev)\n  const parentRefPath = useMemo(() => {\n    return (params?.parentRefPath && pathFromString(params.parentRefPath)) || null\n  }, [params?.parentRefPath])\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  /**\n   * Loads information regarding the reference field of the parent pane. This\n   * is only applicable to child references (aka references-in-place).\n   *\n   * It utilizes the pane ID of the parent pane (which is a document ID) along\n   * with the `parentRefPath` router param on the current pane to find the\n   * current value of the reference field on the parent document.\n   *\n   * This is used to compare with the current pane's document ID. If the IDs\n   * don't match then this banner should reveal itself\n   */\n  const referenceInfoObservable = useMemo((): Observable<ParentReferenceInfo> => {\n    const parentRefPathSegment = parentRefPath?.[0] as string | undefined\n\n    // short-circuit: this document pane is not a child reference pane\n    if (!parentId || !parentRefPathSegment || !parentRefPath) {\n      return of({loading: false})\n    }\n\n    const publishedId = getPublishedId(parentId)\n    const path = pathFromString(parentRefPathSegment)\n\n    // note: observePaths doesn't support keyed path segments, so we need to select the nearest parent\n    const keyedSegmentIndex = path.findIndex(\n      (p): p is KeyedSegment => typeof p == 'object' && '_key' in p,\n    )\n\n    return concat(\n      // emit a loading state instantly\n      of({loading: true}),\n      // then emit the values from watching the published ID's path\n      documentPreviewStore\n        .unstable_observePathsDocumentPair(\n          publishedId,\n          (keyedSegmentIndex === -1 ? path : path.slice(0, keyedSegmentIndex)) as string[][],\n          {\n            version: selectedReleaseId,\n          },\n        )\n        .pipe(\n          // this debounce time is needed to prevent flashing banners due to\n          // the router state updating faster than the content-lake state. we\n          // debounce to wait for more emissions because the value pulled\n          // initially could be stale.\n          debounceTime(750),\n          map(\n            ({draft, published, version}): ParentReferenceInfo => ({\n              loading: false,\n              result: {\n                availability: {\n                  draft: draft.availability,\n                  published: published.availability,\n                  ...(version?.availability\n                    ? {\n                        version: version.availability,\n                      }\n                    : {}),\n                },\n                refValue: pathGet<Reference>(\n                  version?.snapshot || draft.snapshot || published.snapshot,\n                  parentRefPath,\n                )?._ref,\n              },\n            }),\n          ),\n        ),\n    )\n  }, [selectedReleaseId, documentPreviewStore, parentId, parentRefPath])\n  const referenceInfo = useObservable(referenceInfoObservable, {loading: true})\n\n  const handleReloadReference = useCallback(() => {\n    if (referenceInfo.loading) return\n\n    if (referenceInfo.result?.refValue) {\n      replaceCurrent({\n        id: referenceInfo.result.refValue,\n        params: params as Record<string, string>,\n      })\n    }\n  }, [referenceInfo.loading, referenceInfo.result, replaceCurrent, params])\n\n  const shouldHide =\n    // if `parentId` or `parentRefPath` is not present then this banner is n/a\n    !parentId ||\n    !parentRefPath ||\n    // if viewing this pane via history, then hide\n    hasHistoryOpen ||\n    // if loading, hide\n    referenceInfo.loading ||\n    // if the parent document is not available (e.g. due to permission denied or\n    // not found) we don't want to display a warning here, but instead rely on the\n    // parent view to display the appropriate message\n    (!referenceInfo.result?.availability.draft.available &&\n      !referenceInfo.result?.availability.published.available) ||\n    // if the references are the same, then hide the reference changed banner\n    referenceInfo.result?.refValue === routerReferenceId\n\n  if (shouldHide) return null\n\n  return (\n    <Banner\n      action={\n        referenceInfo.result?.refValue\n          ? {\n              onClick: handleReloadReference,\n              icon: SyncIcon,\n              text: t('banners.reference-changed-banner.reason-changed.reload-button.text'),\n            }\n          : {\n              as: BackLink,\n              icon: CloseIcon,\n              text: t('banners.reference-changed-banner.reason-removed.close-button.text'),\n            }\n      }\n      data-testid=\"reference-changed-banner\"\n      content={\n        <Text size={1} weight=\"medium\">\n          {referenceInfo.result?.refValue\n            ? t('banners.reference-changed-banner.reason-changed.text')\n            : t('banners.reference-changed-banner.reason-removed.text')}\n        </Text>\n      }\n      icon={WarningOutlineIcon}\n      tone=\"caution\"\n    />\n  )\n})\n\nReferenceChangedBanner.displayName = 'Memo(ReferenceChangedBanner)'\n","import {WarningOutlineIcon} from '@sanity/icons'\nimport {Text} from '@sanity/ui'\nimport {Translate, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {Banner} from './Banner'\n\nexport function ScheduledDraftOverrideBanner(): React.JSX.Element {\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  return (\n    <Banner\n      tone=\"caution\"\n      icon={WarningOutlineIcon}\n      content={\n        <Text size={1}>\n          <Translate t={t} i18nKey=\"banners.scheduled-draft-override-banner.text\" />\n        </Text>\n      }\n    />\n  )\n}\n","import {useContext} from 'react'\nimport {PaneRouterContext} from 'sanity/_singletons'\n\nimport {type PaneRouterContextValue} from './types'\n\n/**\n *\n * @hidden\n * @beta\n */\nexport function usePaneRouter(): PaneRouterContextValue {\n  return useContext(PaneRouterContext)\n}\n","import {Text} from '@sanity/ui'\nimport {useMemo} from 'react'\nimport {\n  getReleaseIdFromReleaseDocumentId,\n  getVersionInlineBadge,\n  isCardinalityOneRelease,\n  Translate,\n  useArchivedReleases,\n  useTranslation,\n} from 'sanity'\n\nimport {usePaneRouter} from '../../../../components/paneRouter/usePaneRouter'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {Banner} from './Banner'\n\nexport function ArchivedReleaseDocumentBanner(): React.JSX.Element {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {t: tCore} = useTranslation()\n  const {data: archivedReleases} = useArchivedReleases()\n\n  const {params, setParams} = usePaneRouter()\n  const handleGoBack = () => {\n    setParams({\n      ...params,\n      rev: params?.historyEvent || undefined,\n      since: undefined,\n      historyVersion: undefined,\n    })\n  }\n\n  const release = useMemo(() => {\n    return archivedReleases.find(\n      (r) => getReleaseIdFromReleaseDocumentId(r._id) === params?.historyVersion,\n    )\n  }, [archivedReleases, params?.historyVersion])\n\n  const description = useMemo(() => {\n    if (release?.state === 'published') {\n      return 'banners.published-release.description'\n    }\n\n    if (release && isCardinalityOneRelease(release)) {\n      return 'banners.archived-scheduled-draft.description'\n    }\n\n    return 'banners.archived-release.description'\n  }, [release])\n\n  const title = release?.metadata.title || tCore('release.placeholder-untitled-release')\n\n  return (\n    <Banner\n      tone=\"caution\"\n      content={\n        <Text size={1}>\n          <Translate\n            t={t}\n            i18nKey={description}\n            values={{\n              title,\n            }}\n            components={{\n              VersionBadge: getVersionInlineBadge(release),\n            }}\n          />\n        </Text>\n      }\n      action={\n        params?.archivedRelease\n          ? undefined\n          : {\n              text: 'Go back to published version',\n              onClick: handleGoBack,\n            }\n      }\n    />\n  )\n}\n","import {ComposeSparklesIcon, InfoOutlineIcon, LaunchIcon} from '@sanity/icons'\nimport {Box, Card, Container, Flex, Heading, Text, useClickOutsideEvent} from '@sanity/ui'\nimport {useCallback, useMemo, useRef, useState} from 'react'\nimport {\n  getDocumentVariantType,\n  useCanvasCompanionDoc,\n  useNavigateToCanvasDoc,\n  useTranslation,\n} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Popover} from '../../../../../ui-components'\nimport {Button} from '../../../../../ui-components/button/Button'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {Banner} from './Banner'\n\nconst Image = styled.img`\n  object-fit: cover;\n  width: 100%;\n  height: 100%;\n  height: 180px;\n  display: flex;\n`\nconst CANVAS_IMAGE_URL =\n  'https://cdn.sanity.io/images/pyrmmpch/production/b47224e2f3a7d1747e43b9da1ac31739250e628b-632x376.png'\n\nconst CANVAS_APP_NAME = 'Canvas'\nconst CanvasPopoverContent = ({onClose}: {onClose: () => void}) => {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const ref = useRef<HTMLDivElement | null>(null)\n  useClickOutsideEvent(onClose, () => [ref.current])\n\n  return (\n    <Card radius={3} overflow={'hidden'} width={0} ref={ref}>\n      <Container width={0}>\n        <Image src={CANVAS_IMAGE_URL} alt={'Canvas'} />\n        <Flex paddingX={4} paddingBottom={4} paddingTop={3} direction={'column'}>\n          <Flex paddingY={1} gap={2}>\n            <Text size={1} weight=\"semibold\">\n              {CANVAS_APP_NAME}\n            </Text>\n            <Text size={1} muted>\n              <ComposeSparklesIcon />\n            </Text>\n          </Flex>\n          <Box paddingTop={3}>\n            <Heading size={1}>{t('canvas.banner.popover-heading')}</Heading>\n          </Box>\n          <Box paddingTop={4}>\n            <Text size={1}>{t('canvas.banner.popover-description')}</Text>\n          </Box>\n        </Flex>\n        <Flex width=\"full\" gap={3} justify=\"flex-end\" paddingX={4} paddingBottom={4}>\n          <Button\n            mode=\"bleed\"\n            text={t('canvas.banner.popover-button-text')}\n            autoFocus\n            tone=\"primary\"\n            href=\"https://snty.link/canvas-docs\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            as=\"a\"\n            iconRight={LaunchIcon}\n          />\n        </Flex>\n      </Container>\n    </Card>\n  )\n}\nconst CanvasLinkedBannerContent = ({documentId}: {documentId: string}) => {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const [open, setOpen] = useState(false)\n  const documentVariantType = getDocumentVariantType(documentId)\n  const variantText = useMemo(() => {\n    if (documentVariantType === 'published') return t('canvas.banner.linked-text.published')\n    if (documentVariantType === 'draft') return t('canvas.banner.linked-text.draft')\n    return t('canvas.banner.linked-text.version')\n  }, [documentVariantType, t])\n\n  const togglePopover = useCallback(() => setOpen((prev) => !prev), [])\n  const onClose = useCallback(() => setOpen(false), [])\n  return (\n    <Flex align={'center'} gap={2}>\n      <Text size={1} weight=\"medium\">\n        {variantText}\n      </Text>\n      <Popover\n        open={open}\n        size={0}\n        tone=\"default\"\n        portal\n        placement=\"bottom-start\"\n        content={<CanvasPopoverContent onClose={onClose} />}\n      >\n        <Button\n          tooltipProps={null}\n          mode=\"bleed\"\n          tone=\"default\"\n          icon={InfoOutlineIcon}\n          onClick={togglePopover}\n        />\n      </Popover>\n    </Flex>\n  )\n}\n\nexport function CanvasLinkedBanner() {\n  const {documentId, displayed} = useDocumentPane()\n  const {t} = useTranslation(structureLocaleNamespace)\n  const id = displayed?._id || documentId\n  const {companionDoc} = useCanvasCompanionDoc(id)\n  const navigateToCanvas = useNavigateToCanvasDoc(companionDoc?.canvasDocumentId, 'banner')\n\n  if (!companionDoc) return null\n\n  return (\n    <Banner\n      tone=\"neutral\"\n      data-test-id=\"canvas-linked-banner\"\n      paddingY={0}\n      content={<CanvasLinkedBannerContent documentId={id} />}\n      action={{\n        mode: 'ghost',\n        text: t('canvas.banner.edit-in-canvas-action'),\n        onClick: navigateToCanvas,\n      }}\n    />\n  )\n}\n","import {WarningOutlineIcon} from '@sanity/icons'\nimport {type ObjectSchemaType} from '@sanity/types'\nimport {Flex, Text} from '@sanity/ui'\nimport {type ComponentType, useCallback} from 'react'\nimport {\n  getVersionInlineBadge,\n  isPerspectiveWriteable,\n  isReleaseDocument,\n  type PerspectiveNotWriteableReason,\n  ReleasesNav,\n  type ReleasesNavMenuItemPropsGetter,\n  type TargetPerspective,\n  Translate,\n  useTranslation,\n  useWorkspace,\n} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {Banner} from './Banner'\n\ninterface Props {\n  schemaType: ObjectSchemaType\n  selectedPerspective: TargetPerspective\n  reason: PerspectiveNotWriteableReason\n}\n\n/**\n * This banner is displayed when a user attempts to create a new document in a perspective that's\n * not writeable. For example:\n *\n * - The published perspective (unless the schema type supports live-editing).\n * - Any release that's locked.\n */\nexport const ChooseNewDocumentDestinationBanner: ComponentType<Props> = ({\n  schemaType,\n  selectedPerspective,\n  reason,\n}) => {\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const {\n    document: {\n      drafts: {enabled: isDraftModelEnabled},\n    },\n  } = useWorkspace()\n\n  const menuItemProps = useCallback<ReleasesNavMenuItemPropsGetter>(\n    ({perspective}) => ({\n      disabled: !isPerspectiveWriteable({\n        selectedPerspective: perspective,\n        isDraftModelEnabled,\n        schemaType,\n      }).result,\n    }),\n    [isDraftModelEnabled, schemaType],\n  )\n\n  return (\n    <Banner\n      tone=\"caution\"\n      icon={WarningOutlineIcon}\n      content={\n        <Flex align=\"center\" gap={2}>\n          <Text size={1}>\n            {reason === 'PUBLISHED_NOT_WRITEABLE' &&\n              t('banners.choose-new-document-destination.cannot-create-published-document')}\n            {reason === 'DRAFTS_NOT_WRITEABLE' &&\n              t('banners.choose-new-document-destination.cannot-create-draft-document')}\n            {reason === 'RELEASE_NOT_ACTIVE' && isReleaseDocument(selectedPerspective) && (\n              <Translate\n                t={t}\n                i18nKey=\"banners.choose-new-document-destination.release-inactive\"\n                values={{\n                  title: selectedPerspective.metadata.title,\n                }}\n                components={{\n                  VersionBadge: getVersionInlineBadge(selectedPerspective),\n                }}\n              />\n            )}\n            <> {t('banners.choose-new-document-destination.choose-destination')}</>\n          </Text>\n          <ReleasesNav menuItemProps={menuItemProps} />\n        </Flex>\n      }\n    />\n  )\n}\n","import {getSanityCreateLinkMetadata, useSanityCreateConfig} from 'sanity'\n\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {Banner} from './Banner'\n\nexport function CreateLinkedBanner() {\n  const {value} = useDocumentPane()\n  const {documentLinkedBannerContent: CreateLinkedBannerContent} =\n    useSanityCreateConfig().components ?? {}\n  const createLinkMetadata = getSanityCreateLinkMetadata(value)\n\n  if (!CreateLinkedBannerContent || !createLinkMetadata) return null\n\n  return (\n    <Banner\n      tone=\"transparent\"\n      data-test-id=\"sanity-create-read-only-banner\"\n      content={<CreateLinkedBannerContent metadata={createLinkMetadata} />}\n    />\n  )\n}\n","import {Text, useToast} from '@sanity/ui'\nimport {useCallback, useEffect, useState} from 'react'\nimport {\n  getReleaseIdFromReleaseDocumentId,\n  getReleaseTone,\n  getVersionInlineBadge,\n  LATEST,\n  type ReleaseDocument,\n  Translate,\n  useConditionalToast,\n  useTranslation,\n  useVersionOperations,\n} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {Banner} from './Banner'\n\n// How long to wait after user hit the \"Add to release\"-button before displaying the \"waiting…\" toast\nconst TOAST_DELAY = 1000\n\ntype VersionCreateState = {\n  status: 'creating' | 'created'\n  lastUpdate: Date\n}\n\nexport function DocumentNotInReleaseBanner({\n  documentId,\n  currentRelease,\n  isScheduledRelease,\n}: {\n  documentId: string\n  currentRelease: ReleaseDocument\n  isScheduledRelease?: boolean\n}): React.JSX.Element {\n  const tone = getReleaseTone(currentRelease ?? LATEST)\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {t: tCore} = useTranslation()\n\n  const {createVersion} = useVersionOperations()\n\n  const [versionCreateState, setVersionCreateState] = useState<VersionCreateState | undefined>()\n  const toast = useToast()\n  const handleAddToRelease = useCallback(async () => {\n    if (currentRelease._id) {\n      setVersionCreateState({status: 'creating', lastUpdate: new Date()})\n      try {\n        await createVersion(getReleaseIdFromReleaseDocumentId(currentRelease._id), documentId)\n        setVersionCreateState({status: 'created', lastUpdate: new Date()})\n      } catch (err) {\n        toast.push({\n          status: 'error',\n          closable: true,\n          title: t('banners.release.error.title'),\n          description: t('banners.release.error.description', {message: err.message}),\n        })\n        // Note: we only want to reset pending state in case of failure, not unconditionally the request completes (i.e. in a finally clause)\n        // this is because the UI won't reflect that the document was successfully added to the release until we get the result back over the listener\n        // once the listener event that adds the document to the release arrives the UI knows that a version exists,\n        // and this banner will not be rendered anymore\n        setVersionCreateState(undefined)\n      }\n    }\n  }, [createVersion, currentRelease._id, documentId, t, toast])\n\n  const now = useCurrentTime(200)\n\n  useConditionalToast({\n    status: 'info',\n    id: 'add-document-to-release',\n    enabled: Boolean(\n      versionCreateState?.status === 'created' &&\n        now.getTime() - versionCreateState.lastUpdate.getTime() > TOAST_DELAY,\n    ),\n    closable: true,\n    title: t('banners.release.waiting.title'),\n    description: t('banners.release.waiting.description'),\n  })\n\n  return (\n    <Banner\n      tone={tone}\n      content={\n        <Text size={1}>\n          <Translate\n            i18nKey=\"banners.release.not-in-release\"\n            t={t}\n            values={{\n              title:\n                currentRelease?.metadata?.title || tCore('release.placeholder-untitled-release'),\n            }}\n            components={{\n              VersionBadge: getVersionInlineBadge(currentRelease),\n            }}\n          />\n        </Text>\n      }\n      // Adding to a scheduled release is not allowed\n      action={\n        isScheduledRelease\n          ? undefined\n          : {\n              text: t('banners.release.action.add-to-release'),\n              tone: tone,\n              disabled: Boolean(versionCreateState),\n              onClick: handleAddToRelease,\n              mode: 'default',\n            }\n      }\n    />\n  )\n}\n\nfunction useCurrentTime(updateIntervalMs: number): Date {\n  const [currentTime, setCurrentTime] = useState(new Date())\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setCurrentTime(new Date())\n    }, updateIntervalMs)\n    return () => clearInterval(intervalId)\n  }, [updateIntervalMs])\n  return currentTime\n}\n","import {defineEvent} from '@sanity/telemetry'\n\ninterface TypeInfo {\n  liveEditResolveType: 'publish' | 'discard'\n}\n\n/**\n * When a draft in a live edit document is published\n * @internal\n */\nexport const ResolvedLiveEdit = defineEvent<TypeInfo>({\n  name: 'LiveEdit Draft Resolved',\n  version: 1,\n  description: 'User resolved a draft of a live edit document to continue editing',\n})\n","import {type SanityDocument} from '@sanity/client'\nimport {ErrorOutlineIcon} from '@sanity/icons'\nimport {useTelemetry} from '@sanity/telemetry/react'\nimport {Flex, Text} from '@sanity/ui'\nimport {type ComponentType, useCallback, useEffect, useState} from 'react'\nimport {\n  getDraftId,\n  getPublishedId,\n  type ObjectSchemaType,\n  Translate,\n  useDocumentOperation,\n  useTranslation,\n} from 'sanity'\n\nimport {Button} from '../../../../../ui-components'\nimport {useDiffViewRouter} from '../../../../diffView/hooks/useDiffViewRouter'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {ResolvedLiveEdit} from './__telemetry__/DraftLiveEditBanner.telemetry'\nimport {Banner} from './Banner'\n\ninterface ObsoleteDraftBannerProps {\n  displayed: Partial<SanityDocument> | null\n  documentId: string\n  schemaType: ObjectSchemaType\n  i18nKey: string\n  /**\n   * Whether the user is blocked from editing the document while an obsolete draft exists.\n   */\n  isEditBlocking?: boolean\n}\n\nexport const ObsoleteDraftBanner: ComponentType<ObsoleteDraftBannerProps> = ({\n  displayed,\n  documentId,\n  schemaType,\n  i18nKey,\n  isEditBlocking,\n}) => {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const [isPublishing, setPublishing] = useState(false)\n  const [isDiscarding, setDiscarding] = useState(false)\n  const telemetry = useTelemetry()\n\n  const {publish, discardChanges} = useDocumentOperation(documentId, displayed?._type || '')\n\n  const handlePublish = useCallback(() => {\n    publish.execute()\n    setPublishing(true)\n    telemetry.log(ResolvedLiveEdit, {liveEditResolveType: 'publish'})\n  }, [publish, telemetry])\n\n  const handleDiscard = useCallback(() => {\n    discardChanges.execute()\n    setDiscarding(true)\n    telemetry.log(ResolvedLiveEdit, {liveEditResolveType: 'discard'})\n  }, [discardChanges, telemetry])\n\n  useEffect(() => {\n    return () => {\n      setPublishing(false)\n      setDiscarding(false)\n    }\n  })\n\n  const diffViewRouter = useDiffViewRouter()\n\n  const compareDraft = useCallback(() => {\n    if (typeof displayed?._id === 'undefined') {\n      return\n    }\n\n    diffViewRouter.navigateDiffView({\n      mode: 'version',\n      previousDocument: {\n        type: schemaType.name,\n        id: getPublishedId(displayed?._id),\n      },\n      nextDocument: {\n        type: schemaType.name,\n        id: getDraftId(displayed?._id),\n      },\n    })\n  }, [diffViewRouter, displayed?._id, schemaType.name])\n\n  return (\n    <Banner\n      content={\n        <Flex align=\"center\" justify=\"space-between\" gap={2}>\n          <Text size={1} weight=\"medium\">\n            <Translate t={t} i18nKey={i18nKey} values={{schemaType: schemaType.title}} />\n          </Text>\n          <Button\n            text={t('banners.obsolete-draft.actions.compare-draft.text')}\n            mode=\"ghost\"\n            onClick={compareDraft}\n          />\n          <Button\n            onClick={handlePublish}\n            text={t('banners.obsolete-draft.actions.publish-draft.text')}\n            tooltipProps={\n              isEditBlocking\n                ? {\n                    content: t('banners.live-edit-draft-banner.publish.tooltip'),\n                  }\n                : {}\n            }\n            loading={isPublishing}\n            tone=\"positive\"\n          />\n          <Button\n            onClick={handleDiscard}\n            text={t('banners.obsolete-draft.actions.discard-draft.text')}\n            tooltipProps={\n              isEditBlocking\n                ? {\n                    content: t('banners.live-edit-draft-banner.discard.tooltip'),\n                  }\n                : {}\n            }\n            loading={isDiscarding}\n            tone=\"caution\"\n          />\n        </Flex>\n      }\n      data-testid=\"live-edit-type-banner\"\n      icon={ErrorOutlineIcon}\n    />\n  )\n}\n","import {Flex, Text} from '@sanity/ui'\nimport {useCallback, useMemo} from 'react'\nimport {\n  getReleaseIdFromReleaseDocumentId,\n  getReleaseTone,\n  getVersionFromId,\n  isVersionId,\n  Translate,\n  useActiveReleases,\n  useDocumentVersions,\n  useOnlyHasVersions,\n  useSetPerspective,\n  useTranslation,\n  VersionInlineBadge,\n} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {Banner} from './Banner'\n\nexport function OpenReleaseToEditBanner({\n  documentId,\n  isPinnedDraftOrPublished,\n}: {\n  documentId: string\n  isPinnedDraftOrPublished: boolean\n}): React.JSX.Element | null {\n  const onlyHasVersions = useOnlyHasVersions({documentId})\n\n  /** this banner should only be rendered in specific cases\n   * 1. when the document is not a draft or published\n   * 2. when the document only has version or versions\n   * 3. when the global perspective is not set (published or draft)\n   */\n\n  if (!isVersionId(documentId)) {\n    return null\n  }\n\n  if (!onlyHasVersions || !isPinnedDraftOrPublished) {\n    return null\n  }\n\n  return <OpenReleaseToEditBannerInner documentId={documentId} />\n}\n\nexport function OpenReleaseToEditBannerInner({\n  documentId,\n}: {\n  documentId: string\n}): React.JSX.Element {\n  const {data: activeReleases} = useActiveReleases()\n  const setPerspective = useSetPerspective()\n  const releaseId = getVersionFromId(documentId) ?? ''\n  const currentVersion = useMemo(\n    () => activeReleases.find((version) => version._id.includes(releaseId)),\n    [activeReleases, releaseId],\n  )\n  const {t: tCore} = useTranslation()\n\n  const {data: documentVersions} = useDocumentVersions({documentId})\n\n  const documentVersionsTitleList = useMemo(\n    () =>\n      activeReleases\n        .filter((version) => {\n          return documentVersions.find((release) => {\n            const r = getVersionFromId(release) ?? ''\n            return getReleaseIdFromReleaseDocumentId(version._id) === r\n          })\n        })\n        .map((version) => version.metadata.title || tCore('release.placeholder-untitled-release')),\n    [activeReleases, documentVersions, tCore],\n  )\n  const tone = currentVersion && getReleaseTone(currentVersion)\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const handleGoToEdit = useCallback(async () => {\n    setPerspective(releaseId)\n  }, [releaseId, setPerspective])\n\n  return (\n    <Banner\n      tone={tone}\n      data-testid=\"open-release-to-edit-banner\"\n      content={\n        <Text size={1}>\n          <Flex direction={'row'} gap={1} wrap=\"wrap\">\n            {documentVersionsTitleList.length > 1 ? (\n              <Translate\n                t={t}\n                i18nKey=\"banners.release.navigate-to-edit-description-multiple\"\n                components={{\n                  VersionBadge: () => (\n                    <VersionInlineBadge> {documentVersionsTitleList[0]}</VersionInlineBadge>\n                  ),\n                }}\n                values={{count: documentVersionsTitleList.length - 1}}\n              />\n            ) : (\n              <Translate\n                t={t}\n                i18nKey=\"banners.release.navigate-to-edit-description-single\"\n                components={{\n                  VersionBadge: () => (\n                    <VersionInlineBadge> {documentVersionsTitleList[0]}</VersionInlineBadge>\n                  ),\n                }}\n              />\n            )}\n          </Flex>\n        </Text>\n      }\n      action={{\n        text: t('banners.release.action.open-to-edit'),\n        tone: tone,\n        onClick: handleGoToEdit,\n        mode: 'default',\n      }}\n    />\n  )\n}\n","import {WarningOutlineIcon} from '@sanity/icons'\nimport {Text} from '@sanity/ui'\nimport {useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {Banner} from './Banner'\n\nexport function RevisionNotFoundBanner() {\n  const {revisionNotFound} = useDocumentPane()\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (!revisionNotFound) return null\n\n  return (\n    <Banner\n      tone=\"caution\"\n      data-test-id=\"revision-not-found-banner\"\n      icon={WarningOutlineIcon}\n      content={<Text size={1}>{t('banners.revision-not-found.description')}</Text>}\n    />\n  )\n}\n","import {LockIcon} from '@sanity/icons'\nimport {Text} from '@sanity/ui'\nimport {\n  formatRelativeLocalePublishDate,\n  getReleaseTone,\n  LATEST,\n  type ReleaseDocument,\n  Translate,\n  useTranslation,\n} from 'sanity'\n\nimport {Banner} from './Banner'\n\nexport function ScheduledReleaseBanner({\n  currentRelease,\n}: {\n  currentRelease: ReleaseDocument\n}): React.JSX.Element {\n  const tone = getReleaseTone(currentRelease ?? LATEST)\n\n  const {t: tCore} = useTranslation()\n\n  return (\n    <Banner\n      tone={tone}\n      icon={LockIcon}\n      content={\n        <Text size={1}>\n          <Translate\n            t={tCore}\n            i18nKey=\"release.banner.scheduled-for-publishing-on\"\n            values={{\n              date: formatRelativeLocalePublishDate(currentRelease),\n            }}\n          />\n        </Text>\n      }\n    />\n  )\n}\n","import {UnpublishIcon} from '@sanity/icons'\nimport {Stack, Text} from '@sanity/ui'\nimport {\n  getVersionInlineBadge,\n  isGoingToUnpublish,\n  isReleaseDocument,\n  Translate,\n  usePerspective,\n  useTranslation,\n} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {Banner} from './Banner'\n\nexport function UnpublishedDocumentBanner() {\n  const {value, editState} = useDocumentPane()\n  const {selectedPerspective} = usePerspective()\n  const isCurrentVersionGoingToUnpublish =\n    isGoingToUnpublish(value) || (editState?.version && isGoingToUnpublish(editState?.version))\n\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {t: tCore} = useTranslation()\n\n  if (isReleaseDocument(selectedPerspective) && isCurrentVersionGoingToUnpublish) {\n    const title =\n      selectedPerspective.metadata?.title || tCore('release.placeholder-untitled-release')\n\n    return (\n      <Banner\n        tone=\"critical\"\n        content={\n          <Stack space={2}>\n            <Text size={1}>\n              <Translate\n                t={t}\n                i18nKey=\"banners.unpublished-release-banner.text\"\n                values={{\n                  title,\n                }}\n                components={{\n                  VersionBadge: getVersionInlineBadge(selectedPerspective),\n                }}\n              />\n            </Text>\n            <Text size={1}>\n              <Translate t={t} i18nKey=\"banners.unpublished-release-banner.text-with-published\" />\n            </Text>\n          </Stack>\n        }\n        icon={UnpublishIcon}\n      />\n    )\n  }\n  return null\n}\n","import {InfoOutlineIcon} from '@sanity/icons'\nimport {type ObjectSchemaType} from '@sanity/types'\nimport {Heading, Inline, Stack, Text} from '@sanity/ui'\nimport {useTranslation} from 'sanity'\nimport {css, styled} from 'styled-components'\n\nimport {Tooltip} from '../../../../../ui-components'\nimport {structureLocaleNamespace} from '../../../../i18n'\n\ninterface DocumentHeaderProps {\n  documentId: string\n  schemaType: ObjectSchemaType\n  title?: string\n}\n\n/**\n * Use CSS container queries to conditionally render headings at different sizes.\n * We hide this entire container (including the document type) if container queries\n * not supported in the current browser.\n *\n * Note that usage of container queries in `styled-components` is only supported in `6.x`.\n * As such, studios that include `\"styled-components\": \"<6\"` as a dependency will only see\n * the largest heading size here, even if their browser supports it!\n */\n\nexport const TitleContainer = styled(Stack)`\n  ${({theme}) => {\n    return css`\n      @supports not (container-type: inline-size) {\n        display: none !important;\n      }\n\n      container-type: inline-size;\n\n      [data-heading] {\n        font-size: ${theme.sanity.fonts.heading.sizes[4].fontSize}px;\n        line-height: ${theme.sanity.fonts.heading.sizes[4].lineHeight}px;\n        overflow-wrap: break-word;\n        text-wrap: pretty;\n      }\n\n      @container (max-width: 560px) {\n        [data-heading] {\n          font-size: ${theme.sanity.fonts.heading.sizes[3].fontSize}px;\n          line-height: ${theme.sanity.fonts.heading.sizes[3].lineHeight}px;\n        }\n      }\n\n      @container (max-width: 420px) {\n        [data-heading] {\n          font-size: ${theme.sanity.fonts.heading.sizes[2].fontSize}px;\n          line-height: ${theme.sanity.fonts.heading.sizes[2].lineHeight}px;\n        }\n      }\n    `\n  }}\n`\n\n/**\n * Header containing current document title and type.\n * Document type is hidden if the document `_id` matches the current document `_type`.\n * The entire header is hidden if container queries are not supported.\n */\nexport const FormHeader = ({documentId, schemaType, title}: DocumentHeaderProps) => {\n  const isSingleton = documentId === schemaType.name\n  const description = schemaType.description\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (schemaType.__experimental_formPreviewTitle === false) {\n    return null\n  }\n  return (\n    <TitleContainer marginBottom={6} space={4}>\n      {!isSingleton && (\n        <Inline space={1}>\n          <Text muted size={1}>\n            {schemaType.title ?? schemaType.name}\n          </Text>\n          {description && (\n            <Tooltip content={description} placement=\"right\">\n              <InfoOutlineIcon data-testid=\"schema-description-icon\" />\n            </Tooltip>\n          )}\n        </Inline>\n      )}\n      <Heading as=\"h2\" data-heading muted={!title} data-testid=\"document-panel-document-title\">\n        {title ?? t('document-view.form-view.form-title-fallback')}\n      </Heading>\n    </TitleContainer>\n  )\n}\n","import {Box, Container, Flex, focusFirstDescendant, Spinner, Text} from '@sanity/ui'\nimport {type FormEvent, forwardRef, useCallback, useEffect, useMemo, useState} from 'react'\nimport {tap} from 'rxjs/operators'\nimport {\n  createPatchChannel,\n  type DocumentMutationEvent,\n  type DocumentRebaseEvent,\n  FormBuilder,\n  type FormDocumentValue,\n  fromMutationPatches,\n  type PatchMsg,\n  PresenceOverlay,\n  useConditionalToast,\n  useDocumentPresence,\n  useDocumentStore,\n  usePerspective,\n  useTranslation,\n} from 'sanity'\nimport {useEffectEvent} from 'use-effect-event'\n\nimport {Delay} from '../../../../components'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {useDocumentTitle} from '../../useDocumentTitle'\nimport {FormHeader} from './FormHeader'\n\ninterface FormViewProps {\n  hidden: boolean\n  margins: [number, number, number, number]\n}\n\nconst preventDefault = (ev: FormEvent) => ev.preventDefault()\n\nexport const FormView = forwardRef<HTMLDivElement, FormViewProps>(function FormView(props, ref) {\n  const {hidden, margins} = props\n\n  const {\n    collapsedFieldSets,\n    collapsedPaths,\n    displayed: value,\n    editState,\n    documentId,\n    documentType,\n    fieldActions,\n    onChange,\n    validation,\n    ready,\n    formState,\n    onFocus,\n    connectionState,\n    onBlur,\n    onSetCollapsedPath,\n    onPathOpen,\n    onSetCollapsedFieldSet,\n    onSetActiveFieldGroup,\n    openPath,\n    compareValue,\n  } = useDocumentPane()\n  const {selectedReleaseId, selectedPerspective} = usePerspective()\n  const documentStore = useDocumentStore()\n  const presence = useDocumentPresence(documentId)\n  const {title} = useDocumentTitle()\n  // The `patchChannel` is an INTERNAL publish/subscribe channel that we use to notify form-builder\n  // nodes about both remote and local patches.\n  // - Used by the Portable Text input to modify selections.\n  // - Used by `withDocument` to reset value.\n  const [patchChannel] = useState(() => createPatchChannel())\n\n  const isLocked = editState?.transactionSyncLock?.enabled\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const conditionalToastParams = useMemo(\n    () => ({\n      id: `sync-lock`,\n      status: 'warning' as const,\n      enabled: isLocked,\n      title: t('document-view.form-view.sync-lock-toast.title'),\n      description: t('document-view.form-view.sync-lock-toast.description'),\n      closable: true,\n    }),\n    [isLocked, t],\n  )\n\n  useConditionalToast(conditionalToastParams)\n\n  useEffect(() => {\n    const sub = documentStore.pair\n      .documentEvents(documentId, documentType, selectedReleaseId)\n      .pipe(\n        tap((event) => {\n          if (event.type === 'mutation') {\n            patchChannel.publish(prepareMutationEvent(event))\n          }\n\n          if (event.type === 'rebase') {\n            patchChannel.publish(prepareRebaseEvent(event))\n          }\n        }),\n      )\n      .subscribe()\n\n    return () => {\n      sub.unsubscribe()\n    }\n  }, [documentId, documentStore, documentType, patchChannel, selectedReleaseId])\n\n  const hasRev = Boolean(value?._rev)\n  const handleInitialValue = useEffectEvent(() => {\n    // this is a workaround for an issue that caused the document pushed to withDocument to get\n    // stuck at the first initial value.\n    // This effect is triggered only when the document goes from not having a revision, to getting one\n    // so it will kick in as soon as the document is received from the backend\n    patchChannel.publish({\n      type: 'mutation',\n      patches: [],\n      snapshot: value,\n    })\n  })\n  useEffect(() => {\n    if (hasRev) {\n      handleInitialValue()\n    }\n    // React to changes in hasRev only\n  }, [hasRev])\n\n  const [formRef, setFormRef] = useState<null | HTMLDivElement>(null)\n\n  // We only want to run it on first mount\n  const [focusedFirstDescendant, setFocusedFirstDescendant] = useState(false)\n  useEffect(() => {\n    // Only focus on the first descendant if there is not already a focus path\n    // This is to avoid stealing focus from intent links\n    if (!focusedFirstDescendant && ready && !formState?.focusPath.length && formRef) {\n      setFocusedFirstDescendant(true)\n      focusFirstDescendant(formRef)\n    }\n  }, [focusedFirstDescendant, formRef, formState?.focusPath.length, ready])\n\n  const setRef = useCallback(\n    (node: HTMLDivElement | null) => {\n      setFormRef(node)\n      if (typeof ref === 'function') {\n        ref(node)\n      } else if (ref) {\n        ref.current = node\n      }\n    },\n    [ref],\n  )\n\n  const isReadOnly = connectionState === 'reconnecting' || formState?.readOnly || !editState?.ready\n\n  return (\n    <Container\n      hidden={hidden}\n      paddingX={4}\n      paddingTop={5}\n      paddingBottom={9}\n      sizing=\"border\"\n      width={1}\n    >\n      <PresenceOverlay margins={margins}>\n        <Box\n          as=\"form\"\n          onSubmit={preventDefault}\n          ref={setRef}\n          data-testid=\"form-view\"\n          data-read-only={isReadOnly ? 'true' : undefined}\n        >\n          {connectionState === 'connecting' && !editState?.draft && !editState?.published ? (\n            <Delay ms={300}>\n              {/* TODO: replace with loading block */}\n              <Flex align=\"center\" direction=\"column\" height=\"fill\" justify=\"center\">\n                <Spinner muted />\n                <Box marginTop={3}>\n                  <Text align=\"center\" muted size={1}>\n                    {t('document-view.form-view.loading')}\n                  </Text>\n                </Box>\n              </Flex>\n            </Delay>\n          ) : formState === null || hidden ? (\n            <Box padding={2}>\n              <Text>{t('document-view.form-view.form-hidden')}</Text>\n            </Box>\n          ) : (\n            <>\n              <FormHeader documentId={documentId} schemaType={formState.schemaType} title={title} />\n              <FormBuilder\n                __internal_fieldActions={fieldActions}\n                __internal_patchChannel={patchChannel}\n                changed={formState.changed}\n                collapsedFieldSets={collapsedFieldSets}\n                collapsedPaths={collapsedPaths}\n                compareValue={compareValue ?? undefined}\n                focused={formState.focused}\n                focusPath={formState.focusPath}\n                groups={formState.groups}\n                id=\"root\"\n                members={formState.members}\n                onChange={onChange}\n                onFieldGroupSelect={onSetActiveFieldGroup}\n                onPathBlur={onBlur}\n                onPathFocus={onFocus}\n                onPathOpen={onPathOpen}\n                onSetFieldSetCollapsed={onSetCollapsedFieldSet}\n                onSetPathCollapsed={onSetCollapsedPath}\n                openPath={openPath}\n                perspective={selectedPerspective}\n                presence={presence}\n                readOnly={isReadOnly}\n                schemaType={formState.schemaType}\n                validation={validation}\n                value={\n                  // note: the form state doesn't have a typed concept of a \"document\" value\n                  // but these should be compatible\n                  formState.value as FormDocumentValue\n                }\n              />\n            </>\n          )}\n        </Box>\n      </PresenceOverlay>\n    </Container>\n  )\n})\n\nfunction prepareMutationEvent(event: DocumentMutationEvent): PatchMsg {\n  const patches = event.mutations.map((mut) => mut.patch).filter(Boolean)\n\n  return {\n    type: 'mutation',\n    snapshot: event.document,\n    patches: fromMutationPatches(event.origin, patches),\n  }\n}\n\nfunction prepareRebaseEvent(event: DocumentRebaseEvent): PatchMsg {\n  const remotePatches = event.remoteMutations.map((mut) => mut.patch).filter(Boolean)\n  const localPatches = event.localMutations.map((mut) => mut.patch).filter(Boolean)\n\n  return {\n    type: 'rebase',\n    snapshot: event.document,\n    patches: fromMutationPatches('remote', remotePatches).concat(\n      fromMutationPatches('local', localPatches),\n    ),\n  }\n}\n","import {TabList} from '@sanity/ui'\nimport {type ComponentType, type ReactNode, useCallback} from 'react'\n\nimport {Tab} from '../../../../../ui-components'\nimport {usePaneRouter} from '../../../../components'\nimport {useDocumentPane} from '../../useDocumentPane'\n\n/**\n * This component will render the tabs for the document pane, following this rules:\n *  if the view tabs are wider than 200px it collapses to a dropdown\n *  if the header is smaller than 480px it collapses to a dropdown\n * For this we need to first measure the pane header width and then the tabs width.\n *\n * Gotcha, if the tabs are wider han 200px it renders a dropdown and if then the tabs change to be smaller than 200px\n * it will not change back to tabs, this is a limitation of the current implementation but an ok tradeoff to avoid mounting\n * ghost elements just to measure the width.\n */\nexport function DocumentHeaderTabs() {\n  const {activeViewId, paneKey, views} = useDocumentPane()\n\n  const tabPanelId = `${paneKey}tabpanel`\n\n  return (\n    <TabList space={1}>\n      {views.map((view, index) => (\n        <DocumentHeaderTab\n          key={view.id}\n          icon={view.icon}\n          id={`${paneKey}tab-${view.id}`}\n          isActive={activeViewId === view.id}\n          label={view.title}\n          tabPanelId={tabPanelId}\n          viewId={index === 0 ? null : (view.id ?? null)}\n        />\n      ))}\n    </TabList>\n  )\n}\n\nfunction DocumentHeaderTab(props: {\n  icon?: ComponentType | ReactNode\n  id: string\n  isActive: boolean\n  label: string\n  tabPanelId: string\n  viewId: string | null\n}) {\n  const {icon, id, isActive, label, tabPanelId, viewId, ...rest} = props\n  const {ready, editState} = useDocumentPane()\n  const {setView} = usePaneRouter()\n  const handleClick = useCallback(() => setView(viewId), [setView, viewId])\n\n  return (\n    <Tab\n      {...rest} // required to enable <TabList> keyboard navigation\n      aria-controls={tabPanelId}\n      disabled={!ready && !editState?.draft && !editState?.published}\n      icon={icon}\n      id={id}\n      label={label}\n      onClick={handleClick}\n      selected={isActive}\n    />\n  )\n}\n","import {useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {useDocumentTitle} from '../../useDocumentTitle'\n\nexport function DocumentHeaderTitle(): React.JSX.Element {\n  const {connectionState, schemaType, title, value: documentValue} = useDocumentPane()\n  const {title: documentTitle, error} = useDocumentTitle()\n  const subscribed = Boolean(documentValue)\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (connectionState === 'connecting' && !subscribed) {\n    return <></>\n  }\n\n  if (title) {\n    return <>{title}</>\n  }\n\n  if (!documentValue) {\n    return (\n      <>\n        {t('panes.document-header-title.new.text', {\n          schemaType: schemaType?.title || schemaType?.name,\n        })}\n      </>\n    )\n  }\n\n  if (error) {\n    return <>{t('panes.document-header-title.error.text', {error: error})}</>\n  }\n\n  return (\n    <>\n      {documentTitle || (\n        <span style={{color: 'var(--card-muted-fg-color)'}}>\n          {t('panes.document-header-title.untitled.text')}\n        </span>\n      )}\n    </>\n  )\n}\n","import {StarFilledIcon, StarIcon} from '@sanity/icons'\nimport {Text} from '@sanity/ui'\nimport {type ComponentType} from 'react'\nimport {useManageFavorite, type UseManageFavoriteProps, useTranslation} from 'sanity'\n\nimport {Button} from '../../../../../ui-components/button/Button'\nimport {structureLocaleNamespace} from '../../../../i18n'\n\nexport const FavoriteToggle: ComponentType<UseManageFavoriteProps & {documentExists: boolean}> = ({\n  documentExists,\n  ...props\n}) => {\n  const {isFavorited, isReady, favorite, unfavorite} = useManageFavorite(props)\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const description = t(\n    isFavorited\n      ? 'document.favorites.remove-from-favorites'\n      : 'document.favorites.add-to-favorites',\n  )\n\n  return (\n    <Button\n      mode=\"bleed\"\n      onClick={isFavorited ? unfavorite : favorite}\n      disabled={!isReady || !documentExists}\n      aria-label={description}\n      aria-live=\"assertive\"\n      tooltipProps={{\n        content: <Text size={1}>{description}</Text>,\n        placement: 'right',\n      }}\n    >\n      <Text size={1}>{isFavorited ? <StarFilledIcon /> : <StarIcon />}</Text>\n    </Button>\n  )\n}\n","import {ArrowLeftIcon} from '@sanity/icons'\nimport {memo, useMemo} from 'react'\nimport {CapabilityGate, getPublishedId, useActiveWorkspace, useTranslation} from 'sanity'\n\nimport {Button} from '../../../../../ui-components'\nimport {PaneHeader, usePane, usePaneRouter} from '../../../../components'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useStructureTool} from '../../../../useStructureTool'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {DocumentHeaderTabs} from './DocumentHeaderTabs'\nimport {DocumentHeaderTitle} from './DocumentHeaderTitle'\nimport {FavoriteToggle} from './FavoriteToggle'\n\n/**\n * When not collapsed this component will render the title and the tabs.\n * This component will render inside the document panel and not with the DocumentPanelHeader\n */\nexport const DocumentPanelSubHeader = memo(function DocumentPanelHeader() {\n  const {editState, connectionState, views, documentId, displayed} = useDocumentPane()\n  const {features} = useStructureTool()\n  const {index, BackLink} = usePaneRouter()\n  const {activeWorkspace} = useActiveWorkspace()\n  const publishedDocId = getPublishedId(documentId)\n\n  const showTabs = views.length > 1\n\n  const {collapsed, isLast} = usePane()\n  // Prevent focus if this is the last (non-collapsed) pane.\n  const tabIndex = isLast && !collapsed ? -1 : 0\n\n  // show the back button if both the feature is enabled and the current pane\n  // is not the first\n  const showBackButton = features.backButton && index > 0\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const title = useMemo(() => <DocumentHeaderTitle />, [])\n  const tabs = useMemo(() => showTabs && <DocumentHeaderTabs />, [showTabs])\n\n  const backButton = useMemo(\n    () =>\n      showBackButton && (\n        <Button\n          as={BackLink}\n          data-as=\"a\"\n          icon={ArrowLeftIcon}\n          mode=\"bleed\"\n          tooltipProps={{content: t('pane-header.back-button.text')}}\n        />\n      ),\n    [BackLink, showBackButton, t],\n  )\n\n  const favoriteToggle = (\n    <CapabilityGate capability=\"comlink\" condition=\"available\">\n      <FavoriteToggle\n        resourceType=\"studio\"\n        documentId={publishedDocId}\n        documentType={displayed?._type ?? ''}\n        resourceId={[activeWorkspace.projectId, activeWorkspace.dataset].join('.')}\n        schemaName={activeWorkspace.name}\n        projectId={activeWorkspace.projectId}\n        dataset={activeWorkspace.dataset}\n        documentExists={\n          (editState?.ready &&\n            (editState.version ?? editState.draft ?? editState.published) !== null) ??\n          false\n        }\n      />\n    </CapabilityGate>\n  )\n\n  return (\n    <PaneHeader\n      loading={connectionState === 'connecting' && !editState?.draft && !editState?.published}\n      title={title}\n      tabs={tabs}\n      tabIndex={tabIndex}\n      backButton={backButton}\n      appendTitle={favoriteToggle}\n    />\n  )\n})\n","import {BoundaryElementProvider, Box, Flex, PortalProvider, usePortal} from '@sanity/ui'\nimport {useEffect, useMemo, useRef, useState} from 'react'\nimport {\n  getSanityCreateLinkMetadata,\n  getVersionFromId,\n  isCardinalityOneRelease,\n  isGoingToUnpublish,\n  isNewDocument,\n  isPerspectiveWriteable,\n  isReleaseDocument,\n  isReleaseScheduledOrScheduling,\n  isSanityCreateLinked,\n  isSystemBundle,\n  LegacyLayerProvider,\n  type ReleaseDocument,\n  ScrollContainer,\n  useFilteredReleases,\n  usePerspective,\n  useWorkspace,\n  VirtualizerScrollInstanceProvider,\n} from 'sanity'\nimport {css, styled} from 'styled-components'\n\nimport {PaneContent, usePane, usePaneLayout, usePaneRouter} from '../../../components'\nimport {hasObsoleteDraft} from '../../../hasObsoleteDraft'\nimport {mustChooseNewDocumentDestination} from '../../../mustChooseNewDocumentDestination'\nimport {useStructureTool} from '../../../useStructureTool'\nimport {DocumentInspectorPanel} from '../documentInspector'\nimport {InspectDialog} from '../inspectDialog'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {\n  DeletedDocumentBanners,\n  DeprecatedDocumentTypeBanner,\n  InsufficientPermissionBanner,\n  ReferenceChangedBanner,\n  ScheduledDraftOverrideBanner,\n} from './banners'\nimport {ArchivedReleaseDocumentBanner} from './banners/ArchivedReleaseDocumentBanner'\nimport {CanvasLinkedBanner} from './banners/CanvasLinkedBanner'\nimport {ChooseNewDocumentDestinationBanner} from './banners/ChooseNewDocumentDestinationBanner'\nimport {CreateLinkedBanner} from './banners/CreateLinkedBanner'\nimport {DocumentNotInReleaseBanner} from './banners/DocumentNotInReleaseBanner'\nimport {ObsoleteDraftBanner} from './banners/ObsoleteDraftBanner'\nimport {OpenReleaseToEditBanner} from './banners/OpenReleaseToEditBanner'\nimport {RevisionNotFoundBanner} from './banners/RevisionNotFoundBanner'\nimport {ScheduledReleaseBanner} from './banners/ScheduledReleaseBanner'\nimport {UnpublishedDocumentBanner} from './banners/UnpublishedDocumentBanner'\nimport {FormView} from './documentViews'\nimport {DocumentPanelSubHeader} from './header/DocumentPanelSubHeader'\n\ninterface DocumentPanelProps {\n  footerHeight: number | null\n  headerHeight: number | null\n  isInspectOpen: boolean\n  rootElement: HTMLDivElement | null\n  setDocumentPanelPortalElement: (el: HTMLElement | null) => void\n  footer: React.ReactNode\n}\n\nconst DocumentBox = styled(Box)({\n  position: 'relative',\n})\n\nconst Scroller = styled(ScrollContainer)<{$disabled: boolean}>(({$disabled}) => {\n  if ($disabled) {\n    return {height: '100%'}\n  }\n\n  return css`\n    height: 100%;\n    overflow: auto;\n    position: relative;\n    scroll-behavior: smooth;\n    outline: none;\n  `\n})\n\nexport const DocumentPanel = function DocumentPanel(props: DocumentPanelProps) {\n  const {\n    footerHeight,\n    headerHeight,\n    isInspectOpen,\n    rootElement,\n    setDocumentPanelPortalElement,\n    footer,\n  } = props\n  const {\n    activeViewId,\n    displayed,\n    documentId,\n    editState,\n    inspector,\n    value,\n    views,\n    ready,\n    schemaType,\n    permissions,\n    isPermissionsLoading,\n  } = useDocumentPane()\n  const createLinkMetadata = getSanityCreateLinkMetadata(value)\n  const showCreateBanner = isSanityCreateLinked(createLinkMetadata)\n\n  const {params} = usePaneRouter()\n  const {collapsed: layoutCollapsed} = usePaneLayout()\n  const {collapsed} = usePane()\n  const parentPortal = usePortal()\n  const {features} = useStructureTool()\n  const [_portalElement, setPortalElement] = useState<HTMLDivElement | null>(null)\n  const [documentScrollElement, setDocumentScrollElement] = useState<HTMLDivElement | null>(null)\n  const formContainerElement = useRef<HTMLDivElement | null>(null)\n  const workspace = useWorkspace()\n\n  const requiredPermission = value._createdAt ? 'update' : 'create'\n\n  const activeView = useMemo(\n    () => views.find((view) => view.id === activeViewId) || views[0] || {type: 'form'},\n    [activeViewId, views],\n  )\n\n  // Use a local portal container when split panes is supported\n  const portalElement: HTMLElement | null = features.splitPanes\n    ? _portalElement || parentPortal.element\n    : parentPortal.element\n\n  // Calculate the height of the header\n  const margins: [number, number, number, number] = useMemo(() => {\n    if (layoutCollapsed) {\n      return [headerHeight || 0, 0, footerHeight ? footerHeight + 2 : 2, 0]\n    }\n\n    return [0, 0, 2, 0]\n  }, [layoutCollapsed, footerHeight, headerHeight])\n\n  const formViewHidden = activeView.type !== 'form'\n\n  const activeViewNode = useMemo(() => {\n    if (activeView.type === 'component' && activeView.component) {\n      const ActiveViewComponent = activeView.component\n      return (\n        <ActiveViewComponent\n          document={{\n            draft: editState?.draft || null,\n            displayed: displayed || value,\n            historical: displayed,\n            published: editState?.published || null,\n          }}\n          documentId={documentId}\n          options={activeView.options}\n          schemaType={schemaType}\n        />\n      )\n    }\n    return false\n  }, [activeView, displayed, documentId, editState?.draft, editState?.published, schemaType, value])\n\n  // Scroll to top as `documentId` changes\n  useEffect(() => {\n    if (!documentScrollElement?.scrollTo) return\n    documentScrollElement.scrollTo(0, 0)\n  }, [documentId, documentScrollElement])\n\n  // Pass portal element to `DocumentPane`\n  useEffect(() => {\n    if (portalElement) {\n      setDocumentPanelPortalElement(portalElement)\n    }\n  }, [portalElement, setDocumentPanelPortalElement])\n\n  const inspectDialog = useMemo(() => {\n    return isInspectOpen ? <InspectDialog value={displayed || value} /> : null\n  }, [isInspectOpen, displayed, value])\n\n  const showInspector = Boolean(!collapsed && inspector)\n  const {selectedPerspective, selectedReleaseId} = usePerspective()\n\n  const filteredReleases = useFilteredReleases({\n    historyVersion: params?.historyVersion,\n    displayed,\n    documentId,\n  })\n\n  // eslint-disable-next-line complexity\n  const banners = useMemo(() => {\n    if (params?.historyVersion) {\n      return <ArchivedReleaseDocumentBanner />\n    }\n\n    const isScheduledRelease =\n      isReleaseDocument(selectedPerspective) && isReleaseScheduledOrScheduling(selectedPerspective)\n\n    const documentInScheduledRelease = Boolean(\n      isScheduledRelease &&\n        displayed?._id &&\n        getVersionFromId(displayed?._id) === selectedReleaseId,\n    )\n\n    const isSelectedPerspectiveWriteable = isPerspectiveWriteable({\n      selectedPerspective,\n      isDraftModelEnabled: workspace.document.drafts.enabled,\n      schemaType,\n    })\n\n    if (\n      mustChooseNewDocumentDestination({\n        isSelectedPerspectiveWriteable,\n        editState,\n      })\n    ) {\n      return (\n        !isSelectedPerspectiveWriteable.result && (\n          <ChooseNewDocumentDestinationBanner\n            schemaType={schemaType}\n            selectedPerspective={selectedPerspective}\n            reason={isSelectedPerspectiveWriteable.reason}\n          />\n        )\n      )\n    }\n\n    if (documentInScheduledRelease) {\n      return <ScheduledReleaseBanner currentRelease={selectedPerspective as ReleaseDocument} />\n    }\n\n    const hasCardinalityOneReleases = filteredReleases.currentReleases.some(isCardinalityOneRelease)\n    if (selectedPerspective === 'drafts' && hasCardinalityOneReleases) {\n      return <ScheduledDraftOverrideBanner />\n    }\n\n    const isPinnedDraftOrPublish = isSystemBundle(selectedPerspective)\n    const isCurrentVersionGoingToUnpublish =\n      editState?.version && isGoingToUnpublish(editState?.version)\n\n    if (\n      displayed?._id &&\n      getVersionFromId(displayed._id) !== selectedReleaseId &&\n      ready &&\n      !isPinnedDraftOrPublish &&\n      isNewDocument(editState) === false &&\n      !isCurrentVersionGoingToUnpublish\n    ) {\n      return (\n        <DocumentNotInReleaseBanner\n          documentId={value._id}\n          currentRelease={selectedPerspective as ReleaseDocument}\n          isScheduledRelease={isScheduledRelease}\n        />\n      )\n    }\n\n    const displayedHasObsoleteDraft = hasObsoleteDraft({\n      editState,\n      workspace,\n      schemaType,\n    })\n\n    if (activeView.type === 'form' && !selectedReleaseId && displayedHasObsoleteDraft.result) {\n      if (displayedHasObsoleteDraft.reason === 'DRAFT_MODEL_INACTIVE') {\n        return (\n          <ObsoleteDraftBanner\n            displayed={displayed}\n            documentId={documentId}\n            schemaType={schemaType}\n            i18nKey=\"banners.obsolete-draft.draft-model-inactive.text\"\n          />\n        )\n      }\n\n      if (displayedHasObsoleteDraft.reason === 'LIVE_EDIT_ACTIVE') {\n        return (\n          <ObsoleteDraftBanner\n            displayed={displayed}\n            documentId={documentId}\n            schemaType={schemaType}\n            i18nKey=\"banners.live-edit-draft-banner.text\"\n            isEditBlocking\n          />\n        )\n      }\n    }\n\n    if (activeView.type !== 'form' || isPermissionsLoading) return null\n\n    return (\n      <>\n        {showCreateBanner && <CreateLinkedBanner />}\n        {!permissions?.granted && (\n          <InsufficientPermissionBanner requiredPermission={requiredPermission} />\n        )}\n        <RevisionNotFoundBanner />\n        <ReferenceChangedBanner />\n        <DeprecatedDocumentTypeBanner />\n        <CanvasLinkedBanner />\n        <DeletedDocumentBanners />\n        <UnpublishedDocumentBanner />\n        <OpenReleaseToEditBanner\n          documentId={displayed?._id ?? documentId}\n          isPinnedDraftOrPublished={isPinnedDraftOrPublish}\n        />\n      </>\n    )\n  }, [\n    params?.historyVersion,\n    selectedPerspective,\n    displayed,\n    selectedReleaseId,\n    editState,\n    ready,\n    activeView.type,\n    isPermissionsLoading,\n    showCreateBanner,\n    permissions?.granted,\n    requiredPermission,\n    documentId,\n    value._id,\n    schemaType,\n    filteredReleases,\n    workspace,\n  ])\n  const portalElements = useMemo(\n    () => ({documentScrollElement: documentScrollElement}),\n    [documentScrollElement],\n  )\n  const showFormView = features.resizablePanes || !showInspector\n  return (\n    <PaneContent>\n      <Flex height=\"fill\">\n        {showFormView && (\n          <Flex height=\"fill\" direction=\"column\" width=\"fill\" flex={2}>\n            <LegacyLayerProvider zOffset=\"paneHeader\">\n              {banners}\n              <DocumentPanelSubHeader />\n            </LegacyLayerProvider>\n            <DocumentBox flex={2} overflow=\"hidden\">\n              <PortalProvider element={portalElement} __unstable_elements={portalElements}>\n                <BoundaryElementProvider element={documentScrollElement}>\n                  <VirtualizerScrollInstanceProvider\n                    scrollElement={documentScrollElement}\n                    containerElement={formContainerElement}\n                  >\n                    <Scroller\n                      $disabled={layoutCollapsed || false}\n                      data-testid=\"document-panel-scroller\"\n                      ref={setDocumentScrollElement}\n                    >\n                      <FormView\n                        hidden={formViewHidden}\n                        margins={margins}\n                        ref={formContainerElement}\n                      />\n                      {activeViewNode}\n                    </Scroller>\n\n                    {inspectDialog}\n\n                    <div data-testid=\"document-panel-portal\" ref={setPortalElement} />\n                  </VirtualizerScrollInstanceProvider>\n                </BoundaryElementProvider>\n              </PortalProvider>\n            </DocumentBox>\n\n            {footer}\n          </Flex>\n        )}\n        {showInspector && (\n          <BoundaryElementProvider element={rootElement}>\n            <DocumentInspectorPanel\n              documentId={documentId}\n              documentType={schemaType.name}\n              flex={1}\n            />\n          </BoundaryElementProvider>\n        )}\n      </Flex>\n    </PaneContent>\n  )\n}\nDocumentPanel.displayName = 'DocumentPanel'\n","import {negate} from 'lodash'\n\nimport {type _PaneMenuGroup, type _PaneMenuItem, type _PaneMenuNode} from './components/pane/types'\nimport {type DocumentFieldMenuActionNode, type PaneMenuItem, type PaneMenuItemGroup} from './types'\n\nexport function isMenuNodeButton(node: _PaneMenuNode): node is _PaneMenuItem | _PaneMenuGroup {\n  return (node.type === 'item' || node.type === 'group') && node.renderAsButton\n}\n\nexport const isNotMenuNodeButton = negate(isMenuNodeButton)\n\nexport function resolveMenuNodes(params: {\n  actionHandler: (item: PaneMenuItem) => void\n  fieldActions?: DocumentFieldMenuActionNode[]\n  menuItems: PaneMenuItem[]\n  menuItemGroups: PaneMenuItemGroup[]\n}): _PaneMenuNode[] {\n  const {fieldActions = [], menuItems, menuItemGroups} = params\n\n  const nodes: _PaneMenuNode[] = []\n\n  let keyOffset = 0\n\n  for (let i = 0; i < fieldActions.length; i += 1) {\n    const a = fieldActions[i]\n\n    nodes.push(mapFieldActionToPaneMenuNode(a, `${i}-${a.type}`))\n  }\n\n  keyOffset += nodes.length\n\n  const groups: _PaneMenuGroup[] = []\n\n  for (const itemGroup of menuItemGroups) {\n    const group = groups.find((g) => g.key === itemGroup.id)\n\n    if (!group) {\n      groups.push({\n        type: 'group',\n        key: itemGroup.id,\n\n        children: [],\n        expanded: true,\n        renderAsButton: false,\n        title: itemGroup.title,\n        i18n: itemGroup.i18n,\n      })\n    }\n  }\n\n  const ungroupedItems: _PaneMenuItem[] = []\n\n  for (let i = 0; i < menuItems.length; i += 1) {\n    const item = menuItems[i]\n\n    let group = item.group && groups.find((g) => g.key === item.group)\n    const disabled = typeof item.disabled === 'string' ? {reason: item.disabled} : item.disabled\n\n    if (item.group && !group) {\n      group = {\n        type: 'group',\n        key: item.group,\n        disabled,\n        expanded: true,\n        icon: item.icon,\n        title: item.group,\n        children: [],\n        renderAsButton: false,\n      }\n      groups.push(group)\n    }\n\n    if (group) {\n      group.children.push({\n        type: 'item',\n        key: `${keyOffset + i}-item`,\n\n        hotkey: item.shortcut,\n        icon: item.icon,\n        intent: item.intent,\n        disabled,\n        onAction: () => params.actionHandler(item),\n        renderAsButton: item.showAsAction ?? false,\n        selected: item.selected,\n        title: item.title,\n        i18n: item.i18n,\n        tone: item.tone,\n      })\n    } else {\n      ungroupedItems.push({\n        type: 'item',\n        key: `${keyOffset + i}-item`,\n\n        hotkey: item.shortcut,\n        icon: item.icon,\n        intent: item.intent,\n        disabled,\n        onAction: () => params.actionHandler(item),\n        renderAsButton: item.showAsAction ?? false,\n        selected: item.selected,\n        title: item.title,\n        i18n: item.i18n,\n        tone: item.tone,\n      })\n    }\n  }\n\n  return [...ungroupedItems, ...groups, ...nodes]\n}\n\nfunction mapFieldActionToPaneMenuNode(a: DocumentFieldMenuActionNode, key: string): _PaneMenuNode {\n  if (a.type === 'divider') {\n    return {\n      type: 'divider',\n      key,\n    }\n  }\n\n  if (a.type === 'group') {\n    return {\n      type: 'group',\n      key,\n\n      children: a.children.map((child, childIdx) =>\n        mapFieldActionToPaneMenuNode(child, `${key}-${childIdx}-${child.type}`),\n      ),\n      disabled: a.disabled,\n      expanded: a.expanded ?? true,\n      icon: a.icon,\n      title: a.title,\n      i18n: a.i18n,\n      renderAsButton: a.renderAsButton ?? false,\n    }\n  }\n\n  return {\n    type: 'item',\n    key,\n    intent: a.intent,\n    disabled: a.disabled,\n    icon: a.icon,\n    iconRight: a.iconRight,\n    onAction: a.onAction,\n    renderAsButton: a.renderAsButton ?? false,\n    selected: a.selected,\n    title: a.title,\n    i18n: a.i18n,\n    tone: a.tone,\n  }\n}\n","/**\n * @internal\n */\nexport const _DEBUG = false\n\nexport const EMPTY_PARAMS = Object.freeze({})\nexport const LOADING_PANE = Symbol('LOADING_PANE')\n\nexport const DOCUMENT_PANEL_PORTAL_ELEMENT = 'documentPanelPortalElement'\n","import {type Placement} from '@sanity/ui'\n\nimport {type DialogProps} from '../../../../../ui-components'\n\nexport const POPOVER_FALLBACK_PLACEMENTS: Placement[] = ['left', 'bottom']\n\nexport const DIALOG_WIDTH_TO_UI_WIDTH: {[key: string]: DialogProps['width']} = {\n  small: 0,\n  medium: 1,\n  large: 2,\n  full: 'auto',\n}\n","import {type DocumentActionConfirmDialogProps, useTranslation} from 'sanity'\n\nimport {ConfirmPopover} from '../../../../../ui-components'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {POPOVER_FALLBACK_PLACEMENTS} from './constants'\n\nexport function ConfirmDialog(props: {\n  dialog: DocumentActionConfirmDialogProps\n  referenceElement: HTMLElement | null\n}) {\n  const {dialog, referenceElement} = props\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const {\n    cancelButtonIcon,\n    cancelButtonText,\n    confirmButtonIcon,\n    confirmButtonText,\n    message,\n    onCancel,\n    onConfirm,\n    tone,\n  } = dialog\n\n  return (\n    <ConfirmPopover\n      cancelButtonIcon={cancelButtonIcon}\n      cancelButtonText={cancelButtonText || t('confirm-dialog.cancel-button.fallback-text')}\n      confirmButtonIcon={confirmButtonIcon}\n      confirmButtonText={confirmButtonText || t('confirm-dialog.confirm-button.fallback-text')}\n      message={message}\n      onCancel={onCancel}\n      onConfirm={onConfirm}\n      open\n      referenceElement={referenceElement}\n      tone={tone}\n      placement=\"top\"\n      fallbackPlacements={POPOVER_FALLBACK_PLACEMENTS}\n    />\n  )\n}\n","import {\n  Box,\n  Dialog, // eslint-disable-line no-restricted-imports\n} from '@sanity/ui'\nimport {useId} from 'react'\nimport {type DocumentActionModalDialogProps, LegacyLayerProvider} from 'sanity'\n\nimport {DIALOG_WIDTH_TO_UI_WIDTH} from './constants'\n\n/**\n * Dialog rendered by custom document actions of dialog type `dialog`.\n * As these are user configurable with public facing APIs, internal studio ui-components are not used.\n */\nexport function ModalDialog(props: {dialog: DocumentActionModalDialogProps}) {\n  const {dialog} = props\n  const dialogId = useId()\n\n  const footer = dialog.footer && (\n    <Box paddingX={4} paddingY={3}>\n      {dialog.footer}\n    </Box>\n  )\n\n  return (\n    <LegacyLayerProvider zOffset=\"fullscreen\">\n      <Dialog\n        animate\n        __unstable_hideCloseButton={dialog.showCloseButton === false}\n        footer={footer}\n        header={dialog.header}\n        id={dialogId}\n        // eslint-disable-next-line react/jsx-handler-names\n        onClose={dialog.onClose}\n        // eslint-disable-next-line react/jsx-handler-names\n        onClickOutside={dialog.onClose}\n        width={dialog.width === undefined ? 1 : DIALOG_WIDTH_TO_UI_WIDTH[dialog.width]}\n      >\n        <Box padding={4}>{dialog.content}</Box>\n      </Dialog>\n    </LegacyLayerProvider>\n  )\n}\n","import {\n  Popover, // eslint-disable-line no-restricted-imports\n  useClickOutsideEvent,\n  useGlobalKeyDown,\n  useLayer,\n} from '@sanity/ui'\nimport {useCallback, useRef} from 'react'\nimport {type DocumentActionPopoverDialogProps} from 'sanity'\n\nimport {POPOVER_FALLBACK_PLACEMENTS} from './constants'\n\nexport function PopoverDialog(props: {\n  dialog: DocumentActionPopoverDialogProps\n  referenceElement: HTMLElement | null\n}) {\n  const {dialog, referenceElement} = props\n\n  return (\n    <Popover\n      content={<PopoverDialogContent dialog={dialog} />}\n      fallbackPlacements={POPOVER_FALLBACK_PLACEMENTS}\n      open\n      placement=\"top\"\n      portal\n      preventOverflow\n      referenceElement={referenceElement}\n    />\n  )\n}\n\n/**\n * Popover rendered by custom document actions of dialog type `popover`.\n * As these are user configurable with public facing APIs, internal studio ui-components are not used.\n */\nfunction PopoverDialogContent(props: {dialog: DocumentActionPopoverDialogProps}) {\n  const {dialog} = props\n  const {content, onClose} = dialog\n  const {isTopLayer} = useLayer()\n  const ref = useRef<HTMLDivElement | null>(null)\n\n  const handleGlobalKeyDown = useCallback(\n    (event: any) => {\n      if (event.key === 'Escape' && isTopLayer) onClose()\n    },\n    [isTopLayer, onClose],\n  )\n\n  useGlobalKeyDown(handleGlobalKeyDown)\n  useClickOutsideEvent(isTopLayer && onClose, () => [ref.current])\n\n  return <div ref={ref}>{content}</div>\n}\n","import {PortalProvider, Text, usePortal} from '@sanity/ui'\nimport {type ReactNode, useId} from 'react'\nimport {type DocumentActionDialogProps} from 'sanity'\n\nimport {Dialog} from '../../../../ui-components'\nimport {DOCUMENT_PANEL_PORTAL_ELEMENT} from '../../../constants'\nimport {ConfirmDialog} from './dialogs/ConfirmDialog'\nimport {ModalDialog} from './dialogs/ModalDialog'\nimport {PopoverDialog} from './dialogs/PopoverDialog'\n\nexport interface ActionStateDialogProps {\n  dialog: DocumentActionDialogProps\n  referenceElement?: HTMLElement | null\n}\n\n// A portal provider that uses the document panel portal element if it exists\n// as the portal element so that dialogs are scoped to the document panel\nfunction DocumentActionPortalProvider(props: {children: ReactNode}) {\n  const {children} = props\n  const {element, elements} = usePortal()\n  const portalElement = elements?.[DOCUMENT_PANEL_PORTAL_ELEMENT] || element\n\n  return <PortalProvider element={portalElement}>{children}</PortalProvider>\n}\n\nexport function ActionStateDialog(props: ActionStateDialogProps) {\n  const {dialog, referenceElement = null} = props\n  const modalId = useId()\n\n  if (dialog.type === 'confirm') {\n    return <ConfirmDialog dialog={dialog} referenceElement={referenceElement} />\n  }\n\n  if (dialog.type === 'popover') {\n    return <PopoverDialog dialog={dialog} referenceElement={referenceElement} />\n  }\n\n  if (dialog.type === 'dialog' || !dialog.type) {\n    return (\n      <DocumentActionPortalProvider>\n        <ModalDialog dialog={dialog} />\n      </DocumentActionPortalProvider>\n    )\n  }\n\n  if (dialog.type === 'custom') {\n    return <DocumentActionPortalProvider>{dialog?.component}</DocumentActionPortalProvider>\n  }\n\n  // @todo: add validation?\n  const unknownModal: any = dialog\n\n  console.warn(`Unsupported modal type ${unknownModal.type}`)\n\n  return (\n    <Dialog\n      id={modalId}\n      // eslint-disable-next-line react/jsx-handler-names\n      onClose={unknownModal.onClose}\n      // eslint-disable-next-line react/jsx-handler-names\n      onClickOutside={unknownModal.onClose}\n      width={1}\n    >\n      {unknownModal.content || (\n        // eslint-disable-next-line i18next/no-literal-string\n        <Text size={1}>\n          Unexpected modal type (<code>{unknownModal.type}</code>)\n        </Text>\n      )}\n    </Dialog>\n  )\n}\n","import {Menu} from '@sanity/ui'\nimport {memo, type ReactNode, useCallback, useId, useMemo, useState} from 'react'\nimport {\n  ContextMenuButton,\n  type DocumentActionDescription,\n  LegacyLayerProvider,\n  useTranslation,\n} from 'sanity'\n\nimport {MenuButton, MenuItem, type PopoverProps} from '../../../../ui-components'\nimport {structureLocaleNamespace} from '../../../i18n'\nimport {ActionStateDialog} from './ActionStateDialog'\n\nexport interface ActionMenuButtonProps {\n  actionStates: DocumentActionDescription[]\n  disabled: boolean\n}\n\n/**\n * @internal\n */\nexport const ActionDialogWrapper = memo(function ActionDialogWrapper({\n  actionStates,\n  children,\n  referenceElement,\n}: {\n  actionStates: DocumentActionDescription[]\n  children: ({handleAction}: {handleAction: (idx: number) => void}) => ReactNode\n  referenceElement?: HTMLElement | null\n}) {\n  const [actionIndex, setActionIndex] = useState(-1)\n  const currentAction = useMemo(() => actionStates[actionIndex], [actionIndex, actionStates])\n\n  const handleAction = useCallback((idx: number) => {\n    setActionIndex(idx)\n  }, [])\n\n  const result = useMemo(() => children({handleAction}), [children, handleAction])\n\n  return (\n    <>\n      {currentAction && currentAction.dialog && (\n        <LegacyLayerProvider zOffset=\"paneFooter\">\n          <ActionStateDialog dialog={currentAction.dialog} referenceElement={referenceElement} />\n        </LegacyLayerProvider>\n      )}\n      {result}\n    </>\n  )\n})\n\n/**\n * @internal\n */\nexport function ActionMenuButton(props: ActionMenuButtonProps) {\n  const {actionStates, disabled} = props\n  const idPrefix = useId()\n\n  const [referenceElement, setReferenceElement] = useState<HTMLButtonElement | null>(null)\n\n  const popoverProps: PopoverProps = useMemo(\n    () => ({\n      placement: 'top-end',\n      portal: true,\n      preventOverflow: true,\n    }),\n    [],\n  )\n\n  const {t} = useTranslation(structureLocaleNamespace)\n  const renderActionDialog = useCallback<\n    ({handleAction}: {handleAction: (idx: number) => void}) => ReactNode\n  >(\n    ({handleAction}) => (\n      <MenuButton\n        id={`${idPrefix}-action-menu`}\n        button={\n          <ContextMenuButton\n            aria-label={t('buttons.action-menu-button.aria-label')}\n            disabled={disabled}\n            data-testid=\"action-menu-button\"\n            tooltipProps={{content: t('buttons.action-menu-button.tooltip')}}\n          />\n        }\n        menu={\n          <Menu padding={1}>\n            {actionStates.map((actionState, idx) => (\n              <ActionMenuListItem\n                // oxlint-disable-next-line no-array-index-key\n                key={idx}\n                actionState={actionState}\n                disabled={disabled}\n                index={idx}\n                onAction={handleAction}\n              />\n            ))}\n          </Menu>\n        }\n        popover={popoverProps}\n        ref={setReferenceElement}\n      />\n    ),\n    [actionStates, disabled, idPrefix, popoverProps, t],\n  )\n\n  return (\n    <ActionDialogWrapper actionStates={actionStates} referenceElement={referenceElement}>\n      {renderActionDialog}\n    </ActionDialogWrapper>\n  )\n}\n\ninterface ActionMenuListItemProps {\n  actionState: DocumentActionDescription\n  disabled: boolean\n  index: number\n  onAction: (idx: number) => void\n}\n\nexport function ActionMenuListItem(props: ActionMenuListItemProps) {\n  const {actionState, disabled, index, onAction} = props\n  const {onHandle} = actionState\n\n  const handleClick = useCallback(() => {\n    onAction(index)\n    if (onHandle) onHandle()\n  }, [index, onAction, onHandle])\n\n  const hotkeys = useMemo(() => {\n    return actionState.shortcut\n      ? String(actionState.shortcut)\n          .split('+')\n          .map((s) => s.slice(0, 1).toUpperCase() + s.slice(1))\n      : undefined\n  }, [actionState.shortcut])\n\n  return (\n    <MenuItem\n      data-testid={`action-${actionState.label.replace(' ', '')}`}\n      disabled={disabled || Boolean(actionState.disabled)}\n      hotkeys={hotkeys}\n      icon={actionState.icon}\n      onClick={handleClick}\n      text={actionState.label}\n      tone={actionState.tone}\n      {...(actionState.disabled && {tooltipProps: {content: actionState.title}})}\n    />\n  )\n}\n","import {TrashIcon} from '@sanity/icons'\nimport {useCallback, useMemo, useState} from 'react'\nimport {\n  type DocumentActionComponent,\n  InsufficientPermissionsMessage,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n  useTranslation,\n} from 'sanity'\n\nimport {ConfirmDeleteDialog} from '../components'\nimport {structureLocaleNamespace} from '../i18n'\nimport {useDocumentPane} from '../panes/document/useDocumentPane'\n\nconst DISABLED_REASON_TITLE_KEY = {\n  NOTHING_TO_DELETE: 'action.delete.disabled.nothing-to-delete',\n  NOT_READY: 'action.delete.disabled.not-ready',\n}\n\n/** @internal */\nexport const DeleteAction: DocumentActionComponent = ({id, type, draft, onComplete, release}) => {\n  const {setIsDeleting: paneSetIsDeleting} = useDocumentPane()\n  const {delete: deleteOp} = useDocumentOperation(id, type, release)\n  const [isDeleting, setIsDeleting] = useState(false)\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false)\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const handleCancel = useCallback(() => {\n    setConfirmDialogOpen(false)\n    onComplete()\n  }, [onComplete])\n\n  const handleConfirm = useCallback(() => {\n    setIsDeleting(true)\n    setConfirmDialogOpen(false)\n    paneSetIsDeleting(true)\n    deleteOp.execute()\n    onComplete()\n  }, [deleteOp, onComplete, paneSetIsDeleting])\n\n  const handle = useCallback(() => {\n    setConfirmDialogOpen(true)\n  }, [])\n\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    version: release,\n    permission: 'delete',\n  })\n\n  const currentUser = useCurrentUser()\n\n  return useMemo(() => {\n    if (!isPermissionsLoading && !permissions?.granted) {\n      return {\n        tone: 'critical',\n        icon: TrashIcon,\n        disabled: true,\n        label: t('action.delete.label'),\n        title: (\n          <InsufficientPermissionsMessage context=\"delete-document\" currentUser={currentUser} />\n        ),\n      }\n    }\n\n    return {\n      tone: 'critical',\n      icon: TrashIcon,\n      disabled: isDeleting || Boolean(deleteOp.disabled) || isPermissionsLoading,\n      title: (deleteOp.disabled && t(DISABLED_REASON_TITLE_KEY[deleteOp.disabled])) || '',\n      label: isDeleting ? t('action.delete.running.label') : t('action.delete.label'),\n      shortcut: 'Ctrl+Alt+D',\n      onHandle: handle,\n      dialog: isConfirmDialogOpen && {\n        type: 'custom',\n        component: (\n          <ConfirmDeleteDialog\n            action=\"delete\"\n            id={draft?._id || id}\n            type={type}\n            onCancel={handleCancel}\n            onConfirm={handleConfirm}\n          />\n        ),\n      },\n    }\n  }, [\n    currentUser,\n    deleteOp.disabled,\n    draft?._id,\n    handle,\n    handleCancel,\n    handleConfirm,\n    id,\n    isConfirmDialogOpen,\n    isDeleting,\n    isPermissionsLoading,\n    permissions?.granted,\n    t,\n    type,\n  ])\n}\n\nDeleteAction.action = 'delete'\nDeleteAction.displayName = 'DeleteAction'\n","import {ResetIcon} from '@sanity/icons'\nimport {useCallback, useMemo, useState} from 'react'\nimport {\n  type DocumentActionComponent,\n  type DocumentActionDialogProps,\n  InsufficientPermissionsMessage,\n  isPublishedId,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n  useTranslation,\n} from 'sanity'\n\nimport {structureLocaleNamespace} from '../i18n'\nimport {useDocumentPane} from '../panes/document/useDocumentPane'\n\nconst DISABLED_REASON_KEY = {\n  NO_CHANGES: 'action.discard-changes.disabled.no-change',\n  NOT_PUBLISHED: 'action.discard-changes.disabled.not-published',\n  NOT_READY: 'action.discard-changes.disabled.not-ready',\n} as const\n\n/** @internal */\nexport const DiscardChangesAction: DocumentActionComponent = ({\n  id,\n  type,\n  published,\n  liveEdit,\n  onComplete,\n  release,\n}) => {\n  const {discardChanges} = useDocumentOperation(id, type, release)\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false)\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    version: release,\n    permission: 'discardDraft',\n  })\n  const currentUser = useCurrentUser()\n  const {displayed} = useDocumentPane()\n\n  const {t} = useTranslation(structureLocaleNamespace)\n  const isPublished = displayed?._id && isPublishedId(displayed?._id)\n\n  const handleConfirm = useCallback(() => {\n    discardChanges.execute()\n    onComplete()\n  }, [discardChanges, onComplete])\n\n  const handle = useCallback(() => {\n    setConfirmDialogOpen(true)\n  }, [])\n\n  const dialog: DocumentActionDialogProps | false = useMemo(\n    () =>\n      isConfirmDialogOpen && {\n        type: 'confirm',\n        tone: 'critical',\n        onCancel: onComplete,\n        onConfirm: handleConfirm,\n        message: t('action.discard-changes.confirm-dialog.confirm-discard-changes'),\n      },\n    [handleConfirm, isConfirmDialogOpen, onComplete, t],\n  )\n\n  return useMemo(() => {\n    if (!published || liveEdit || isPublished) {\n      return null\n    }\n\n    if (!isPermissionsLoading && !permissions?.granted) {\n      return {\n        tone: 'critical',\n        icon: ResetIcon,\n        disabled: true,\n        label: t('action.discard-changes.label'),\n        title: (\n          <InsufficientPermissionsMessage context=\"discard-changes\" currentUser={currentUser} />\n        ),\n      }\n    }\n\n    return {\n      tone: 'critical',\n      icon: ResetIcon,\n      disabled: Boolean(discardChanges.disabled) || isPermissionsLoading,\n      title: t((discardChanges.disabled && DISABLED_REASON_KEY[discardChanges.disabled]) || ''),\n      label: t('action.discard-changes.label'),\n      onHandle: handle,\n      dialog,\n    }\n  }, [\n    currentUser,\n    dialog,\n    discardChanges.disabled,\n    handle,\n    isPermissionsLoading,\n    isPublished,\n    liveEdit,\n    permissions?.granted,\n    published,\n    t,\n  ])\n}\n\nDiscardChangesAction.action = 'discardChanges'\nDiscardChangesAction.displayName = 'DiscardChangesAction'\n","import {CopyIcon} from '@sanity/icons'\nimport {uuid} from '@sanity/uuid'\nimport {useCallback, useMemo, useState} from 'react'\nimport {filter, firstValueFrom} from 'rxjs'\nimport {\n  type DuplicateDocumentActionComponent,\n  InsufficientPermissionsMessage,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n  useDocumentStore,\n  useTranslation,\n} from 'sanity'\nimport {useRouter} from 'sanity/router'\n\nimport {structureLocaleNamespace} from '../i18n'\n\nconst DISABLED_REASON_KEY = {\n  NOTHING_TO_DUPLICATE: 'action.duplicate.disabled.nothing-to-duplicate',\n  NOT_READY: 'action.duplicate.disabled.not-ready',\n}\n\n/** @internal */\nexport const DuplicateAction: DuplicateDocumentActionComponent = ({\n  id,\n  type,\n  onComplete,\n  release,\n  mapDocument,\n}) => {\n  const documentStore = useDocumentStore()\n  const {duplicate} = useDocumentOperation(id, type, release)\n  const {navigateIntent} = useRouter()\n  const [isDuplicating, setDuplicating] = useState(false)\n\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    version: release,\n    permission: 'duplicate',\n  })\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const currentUser = useCurrentUser()\n\n  const handle = useCallback(async () => {\n    const dupeId = uuid()\n\n    setDuplicating(true)\n\n    // set up the listener before executing\n    const duplicateSuccess = firstValueFrom(\n      documentStore.pair\n        .operationEvents(id, type)\n        .pipe(filter((e) => e.op === 'duplicate' && e.type === 'success')),\n    )\n    duplicate.execute(dupeId, {mapDocument})\n\n    // only navigate to the duplicated document when the operation is successful\n    await duplicateSuccess\n    navigateIntent('edit', {id: dupeId, type})\n\n    onComplete()\n  }, [documentStore.pair, duplicate, id, mapDocument, navigateIntent, onComplete, type])\n\n  return useMemo(() => {\n    if (!isPermissionsLoading && !permissions?.granted) {\n      return {\n        icon: CopyIcon,\n        disabled: true,\n        label: t('action.duplicate.label'),\n        title: (\n          <InsufficientPermissionsMessage context=\"duplicate-document\" currentUser={currentUser} />\n        ),\n      }\n    }\n\n    return {\n      icon: CopyIcon,\n      disabled: isDuplicating || Boolean(duplicate.disabled) || isPermissionsLoading,\n      label: isDuplicating ? t('action.duplicate.running.label') : t('action.duplicate.label'),\n      title: duplicate.disabled ? t(DISABLED_REASON_KEY[duplicate.disabled]) : '',\n      onHandle: handle,\n    }\n  }, [\n    currentUser,\n    duplicate.disabled,\n    handle,\n    isDuplicating,\n    isPermissionsLoading,\n    permissions?.granted,\n    t,\n  ])\n}\n\nDuplicateAction.action = 'duplicate'\nDuplicateAction.displayName = 'DuplicateAction'\n","import {RevertIcon} from '@sanity/icons'\nimport {useCallback, useEffect, useMemo, useRef, useState} from 'react'\nimport {\n  type DocumentActionComponent,\n  type DocumentActionDialogProps,\n  useDocumentOperation,\n  useDocumentOperationEvent,\n  useTranslation,\n} from 'sanity'\nimport {useRouter} from 'sanity/router'\n\nimport {structureLocaleNamespace} from '../i18n'\nimport {useDocumentPane} from '../panes/document/useDocumentPane'\n\n/** @internal */\nexport const HistoryRestoreAction: DocumentActionComponent = ({\n  id,\n  type,\n  revision,\n  onComplete,\n  release,\n}) => {\n  const {restore} = useDocumentOperation(id, type, release)\n  const {revisionNotFound} = useDocumentPane()\n  const event = useDocumentOperationEvent(id, type)\n  const {navigateIntent} = useRouter()\n  const prevEvent = useRef(event)\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false)\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const handleConfirm = useCallback(() => {\n    restore.execute(revision!)\n    onComplete()\n  }, [restore, revision, onComplete])\n\n  /**\n   * If the restore operation is successful, navigate to the document edit view\n   */\n  useEffect(() => {\n    if (!event || event === prevEvent.current) return\n\n    if (event.type === 'success' && event.op === 'restore') {\n      navigateIntent('edit', {id, type})\n    }\n\n    prevEvent.current = event\n  }, [event, id, navigateIntent, type])\n\n  const handle = useCallback(() => {\n    setConfirmDialogOpen(true)\n  }, [])\n\n  const dialog: DocumentActionDialogProps | null = useMemo(() => {\n    if (isConfirmDialogOpen) {\n      return {\n        type: 'confirm',\n        tone: 'critical',\n        onCancel: onComplete,\n        onConfirm: handleConfirm,\n        message: t('action.restore.confirm.message'),\n      }\n    }\n\n    return null\n  }, [handleConfirm, isConfirmDialogOpen, onComplete, t])\n\n  const isRevisionInitial = revision === '@initial'\n  const isRevisionLatest = revision === undefined // undefined means latest revision\n\n  return useMemo(() => {\n    if (isRevisionLatest || revisionNotFound) {\n      return null\n    }\n\n    return {\n      label: t('action.restore.label'),\n      tone: 'caution',\n      onHandle: handle,\n      title: t(\n        isRevisionInitial\n          ? 'action.restore.disabled.cannot-restore-initial'\n          : 'action.restore.tooltip',\n      ),\n      icon: RevertIcon,\n      dialog,\n      disabled: isRevisionInitial,\n    }\n  }, [dialog, handle, isRevisionInitial, isRevisionLatest, revisionNotFound, t])\n}\n\nHistoryRestoreAction.action = 'restore'\nHistoryRestoreAction.displayName = 'HistoryRestoreAction'\n","import {defineEvent} from '@sanity/telemetry'\n\ninterface DocumentPublishedInfo {\n  /**\n   * The document was created and published straight away\n   */\n  publishedImmediately: boolean\n\n  /**\n   * The document had a previously published version when it was published\n   */\n  previouslyPublished: boolean\n}\nexport const DocumentPublished = defineEvent<DocumentPublishedInfo>({\n  name: 'Document Published',\n  version: 1,\n  description: 'User clicked the \"Publish\" button in the document pane',\n})\n","import {PublishIcon} from '@sanity/icons'\nimport {useTelemetry} from '@sanity/telemetry/react'\nimport {isValidationErrorMarker} from '@sanity/types'\nimport {useCallback, useEffect, useMemo, useState} from 'react'\nimport {\n  type DocumentActionComponent,\n  InsufficientPermissionsMessage,\n  isPublishedId,\n  type TFunction,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n  useEditState,\n  useRelativeTime,\n  useSyncState,\n  useTranslation,\n  useValidationStatus,\n} from 'sanity'\n\nimport {structureLocaleNamespace, type StructureLocaleResourceKeys} from '../i18n'\nimport {useDocumentPane} from '../panes/document/useDocumentPane'\nimport {DocumentPublished} from './__telemetry__/documentActions.telemetry'\n\nconst DISABLED_REASON_TITLE_KEY: Record<string, StructureLocaleResourceKeys> = {\n  LIVE_EDIT_ENABLED: 'action.publish.live-edit.publish-disabled',\n  ALREADY_PUBLISHED: 'action.publish.already-published.no-time-ago.tooltip',\n  NO_CHANGES: 'action.publish.no-changes.tooltip',\n  NOT_READY: 'action.publish.disabled.not-ready',\n} as const\n\nconst PUBLISHED_STATE = {status: 'published'} as const\n\nfunction getDisabledReason(\n  reason: keyof typeof DISABLED_REASON_TITLE_KEY,\n  publishedAt: string | undefined,\n  t: TFunction,\n) {\n  if (reason === 'ALREADY_PUBLISHED' && publishedAt) {\n    return <AlreadyPublished publishedAt={publishedAt} />\n  }\n  return t(DISABLED_REASON_TITLE_KEY[reason])\n}\n\nfunction AlreadyPublished({publishedAt}: {publishedAt: string}) {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const timeSincePublished = useRelativeTime(publishedAt, {useTemporalPhrase: true})\n  return <span>{t('action.publish.already-published.tooltip', {timeSincePublished})}</span>\n}\n\n/** @internal */\nexport const PublishAction: DocumentActionComponent = (props) => {\n  const {id, type, liveEdit, draft, published, release} = props\n  const [publishState, setPublishState] = useState<\n    {status: 'publishing'; publishRevision: string | undefined} | {status: 'published'} | null\n  >(null)\n  const {publish} = useDocumentOperation(id, type)\n  const validationStatus = useValidationStatus(id, type)\n  const syncState = useSyncState(id, type)\n  const {changesOpen, documentId, documentType, value} = useDocumentPane()\n  const editState = useEditState(documentId, documentType)\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const revision = (editState?.draft || editState?.published || {})._rev\n\n  const hasValidationErrors = validationStatus.validation.some(isValidationErrorMarker)\n  // we use this to \"schedule\" publish after pending tasks (e.g. validation and sync) has completed\n  const [publishScheduled, setPublishScheduled] = useState<boolean>(false)\n  const isSyncing = syncState.isSyncing\n  const isValidating = validationStatus.isValidating\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    permission: 'publish',\n  })\n\n  const currentUser = useCurrentUser()\n\n  const title = publish.disabled\n    ? getDisabledReason(publish.disabled, (published || {})._updatedAt, t) || ''\n    : hasValidationErrors\n      ? t('action.publish.validation-issues.tooltip')\n      : ''\n\n  const currentPublishRevision = published?._rev\n\n  const doPublish = useCallback(() => {\n    publish.execute()\n    setPublishState({status: 'publishing', publishRevision: currentPublishRevision})\n  }, [publish, currentPublishRevision])\n\n  useEffect(() => {\n    // make sure the validation status is about the current revision and not an earlier one\n    const validationComplete =\n      validationStatus.isValidating === false && validationStatus.revision !== revision\n\n    if (!publishScheduled || isSyncing || !validationComplete) {\n      return\n    }\n\n    if (!hasValidationErrors) {\n      doPublish()\n    }\n    setPublishScheduled(false)\n  }, [\n    isSyncing,\n    doPublish,\n    hasValidationErrors,\n    publishScheduled,\n    validationStatus.revision,\n    revision,\n    isValidating,\n    validationStatus.isValidating,\n  ])\n\n  useEffect(() => {\n    const didPublish =\n      // All we need to check here is for the revision of the current published document\n      // to be different from what it was at the time of publish\n      // a successful publish will always lead to a new published revision\n      publishState?.status === 'publishing' &&\n      currentPublishRevision !== publishState.publishRevision\n\n    const nextState = didPublish ? PUBLISHED_STATE : null\n    const delay = didPublish ? 200 : 4000\n    const timer = setTimeout(() => {\n      setPublishState(nextState)\n    }, delay)\n    return () => clearTimeout(timer)\n  }, [changesOpen, publishState, currentPublishRevision])\n\n  const telemetry = useTelemetry()\n\n  const handle = useCallback(() => {\n    telemetry.log(DocumentPublished, {\n      publishedImmediately: !draft?._createdAt,\n      previouslyPublished: Boolean(published),\n    })\n    if (\n      syncState.isSyncing ||\n      validationStatus.isValidating ||\n      validationStatus.revision !== revision\n    ) {\n      setPublishScheduled(true)\n    } else {\n      doPublish()\n    }\n  }, [\n    telemetry,\n    draft?._createdAt,\n    published,\n    syncState.isSyncing,\n    validationStatus.isValidating,\n    validationStatus.revision,\n    revision,\n    doPublish,\n  ])\n\n  return useMemo(() => {\n    if (release) {\n      // Version documents are not publishable by this action, they should be published as part of a release\n      return null\n    }\n    if (liveEdit) {\n      // Live edit documents are not publishable by this action, they are published automatically\n      return null\n    }\n\n    /**\n     * When draft is null, if not a published or version document\n     * then it means the draft is yet to be saved - in this case don't disabled\n     * the publish button due to ALREADY_PUBLISHED reason\n     */\n    if (isPublishedId(value._id) && draft !== null) {\n      return {\n        tone: 'default',\n        icon: PublishIcon,\n        label: t('action.publish.label'),\n        title: getDisabledReason('ALREADY_PUBLISHED', published?._updatedAt, t),\n        disabled: true,\n      }\n    }\n\n    if (!isPermissionsLoading && !permissions?.granted) {\n      return {\n        tone: 'default',\n        icon: PublishIcon,\n        label: t('action.publish.label'),\n        title: (\n          <InsufficientPermissionsMessage context=\"publish-document\" currentUser={currentUser} />\n        ),\n        disabled: true,\n      }\n    }\n\n    const disabled = Boolean(\n      publishScheduled ||\n        editState?.transactionSyncLock?.enabled ||\n        publishState?.status === 'publishing' ||\n        publishState?.status === 'published' ||\n        hasValidationErrors ||\n        publish.disabled,\n    )\n\n    return {\n      disabled: disabled || isPermissionsLoading,\n      tone: 'default',\n      label:\n        publishState?.status === 'published'\n          ? t('action.publish.published.label')\n          : publishScheduled || publishState?.status === 'publishing'\n            ? t('action.publish.running.label')\n            : t('action.publish.draft.label'),\n      // @todo: Implement loading state, to show a `<Button loading />` state\n      // loading: publishScheduled || publishState === 'publishing',\n      icon: PublishIcon,\n      title: publishScheduled\n        ? t('action.publish.waiting')\n        : publishState?.status === 'published' || publishState?.status === 'publishing'\n          ? null\n          : title,\n      shortcut: disabled || publishScheduled ? null : 'Ctrl+Alt+P',\n      onHandle: handle,\n    }\n  }, [\n    release,\n    liveEdit,\n    value._id,\n    draft,\n    isPermissionsLoading,\n    permissions?.granted,\n    publishScheduled,\n    editState?.transactionSyncLock?.enabled,\n    publishState,\n    hasValidationErrors,\n    publish.disabled,\n    t,\n    title,\n    handle,\n    published?._updatedAt,\n    currentUser,\n  ])\n}\n\nPublishAction.action = 'publish'\nPublishAction.displayName = 'PublishAction'\n","import {UnpublishIcon} from '@sanity/icons'\nimport {useCallback, useMemo, useState} from 'react'\nimport {\n  type DocumentActionComponent,\n  type DocumentActionModalDialogProps,\n  InsufficientPermissionsMessage,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n  usePerspective,\n  useTranslation,\n} from 'sanity'\n\nimport {ConfirmDeleteDialog} from '../components'\nimport {structureLocaleNamespace} from '../i18n'\n\nconst DISABLED_REASON_KEY = {\n  NOT_PUBLISHED: 'action.unpublish.disabled.not-published',\n  NOT_READY: 'action.unpublish.disabled.not-ready',\n  LIVE_EDIT_ENABLED: 'action.unpublish.disabled.live-edit-enabled',\n}\n\n/** @internal */\nexport const UnpublishAction: DocumentActionComponent = ({\n  id,\n  type,\n  draft,\n  onComplete,\n  liveEdit,\n  release,\n}) => {\n  const {unpublish} = useDocumentOperation(id, type)\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false)\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    permission: 'unpublish',\n  })\n  const currentUser = useCurrentUser()\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {selectedPerspective} = usePerspective()\n\n  const isDraft = selectedPerspective === 'drafts'\n\n  const handleCancel = useCallback(() => {\n    setConfirmDialogOpen(false)\n    onComplete()\n  }, [onComplete])\n\n  const handleConfirm = useCallback(() => {\n    setConfirmDialogOpen(false)\n    unpublish.execute()\n    onComplete()\n  }, [onComplete, unpublish])\n\n  const dialog: DocumentActionModalDialogProps | null = useMemo(() => {\n    if (isConfirmDialogOpen) {\n      return {\n        type: 'dialog',\n        onClose: onComplete,\n        content: (\n          <ConfirmDeleteDialog\n            id={draft?._id || id}\n            type={type}\n            action=\"unpublish\"\n            onCancel={handleCancel}\n            onConfirm={handleConfirm}\n          />\n        ),\n      }\n    }\n\n    return null\n  }, [draft, id, handleCancel, handleConfirm, isConfirmDialogOpen, onComplete, type])\n\n  return useMemo(() => {\n    if (release || isDraft) {\n      // Version documents cannot be unpublished by this action, they should be unpublished as part of a release\n      // Draft documents can't either\n      return null\n    }\n    if (liveEdit) {\n      return null\n    }\n\n    if (!isPermissionsLoading && !permissions?.granted) {\n      return {\n        tone: 'critical',\n        icon: UnpublishIcon,\n        label: 'Unpublish',\n        title: (\n          <InsufficientPermissionsMessage context=\"unpublish-document\" currentUser={currentUser} />\n        ),\n        disabled: true,\n      }\n    }\n\n    return {\n      tone: 'critical',\n      icon: UnpublishIcon,\n      disabled: Boolean(unpublish.disabled) || isPermissionsLoading,\n      label: t('action.unpublish.label'),\n      title: unpublish.disabled ? t(DISABLED_REASON_KEY[unpublish.disabled]) : '',\n      onHandle: () => setConfirmDialogOpen(true),\n      dialog,\n    }\n  }, [\n    release,\n    isDraft,\n    liveEdit,\n    isPermissionsLoading,\n    permissions?.granted,\n    unpublish.disabled,\n    t,\n    dialog,\n    currentUser,\n  ])\n}\n\nUnpublishAction.action = 'unpublish'\nUnpublishAction.displayName = 'UnpublishAction'\n","/* eslint-disable camelcase */\nimport {Flex, LayerProvider, Stack, Text} from '@sanity/ui'\nimport {memo, useCallback, useMemo, useState} from 'react'\nimport {\n  type DocumentActionComponent,\n  type DocumentActionDescription,\n  type DocumentActionProps,\n  Hotkeys,\n  isSanityDefinedAction,\n  usePerspective,\n  useSource,\n} from 'sanity'\n\nimport {Button, Tooltip} from '../../../../ui-components'\nimport {RenderActionCollectionState, type ResolvedAction, usePaneRouter} from '../../../components'\nimport {HistoryRestoreAction} from '../../../documentActions'\nimport {toLowerCaseNoSpaces} from '../../../util/toLowerCaseNoSpaces'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {ActionMenuButton} from './ActionMenuButton'\nimport {ActionStateDialog} from './ActionStateDialog'\n\ninterface DocumentStatusBarActionsInnerProps {\n  disabled: boolean\n  states: ResolvedAction[]\n}\n\nconst DocumentStatusBarActionsInner = memo(function DocumentStatusBarActionsInner(\n  props: DocumentStatusBarActionsInnerProps,\n) {\n  const {disabled, states} = props\n  const {__internal_tasks} = useSource()\n  const {editState} = useDocumentPane()\n  const {params} = usePaneRouter()\n  const showingRevision = Boolean(params?.rev)\n\n  const {selectedReleaseId} = usePerspective()\n  const [firstActionState, ...menuActionStates] = states\n  const [buttonElement, setButtonElement] = useState<HTMLButtonElement | null>(null)\n\n  // TODO: This could be refactored to use the tooltip from the button if the firstAction.title was updated to a string.\n  const tooltipContent = useMemo(() => {\n    if (!firstActionState || (!firstActionState.title && !firstActionState.shortcut)) return null\n\n    return (\n      <Flex style={{maxWidth: 300}} align=\"center\" gap={3}>\n        {firstActionState.title && <Text size={1}>{firstActionState.title}</Text>}\n        {firstActionState.shortcut && (\n          <Hotkeys\n            data-testid=\"document-status-bar-hotkeys\"\n            fontSize={1}\n            style={{marginTop: -4, marginBottom: -4}}\n            keys={String(firstActionState.shortcut)\n              .split('+')\n              .map((s) => s.slice(0, 1).toUpperCase() + s.slice(1).toLowerCase())}\n          />\n        )}\n      </Flex>\n    )\n  }, [firstActionState])\n\n  const showFirstActionButton = showingRevision\n    ? Boolean(firstActionState)\n    : selectedReleaseId\n      ? // If the first action is a custom action and we are in a version document show it.\n        firstActionState && !isSanityDefinedAction(firstActionState)\n      : firstActionState && !editState?.liveEdit\n\n  const sideMenuItems = useMemo(() => {\n    return showFirstActionButton ? menuActionStates : [firstActionState, ...menuActionStates]\n  }, [showFirstActionButton, firstActionState, menuActionStates])\n\n  return (\n    <Flex align=\"center\" gap={1}>\n      {__internal_tasks && __internal_tasks.footerAction}\n      {showFirstActionButton && (\n        <LayerProvider zOffset={200}>\n          <Tooltip disabled={!tooltipContent} content={tooltipContent} placement=\"top\">\n            <Stack>\n              <Button\n                data-testid={`action-${toLowerCaseNoSpaces(firstActionState.label)}`}\n                disabled={disabled || Boolean(firstActionState.disabled)}\n                icon={firstActionState.icon}\n                // eslint-disable-next-line react/jsx-handler-names\n                onClick={firstActionState.onHandle}\n                ref={setButtonElement}\n                text={firstActionState.label}\n                tone={firstActionState.tone || 'primary'}\n              />\n            </Stack>\n          </Tooltip>\n        </LayerProvider>\n      )}\n      {sideMenuItems.length > 0 && (\n        <ActionMenuButton actionStates={sideMenuItems} disabled={disabled} />\n      )}\n      {showFirstActionButton && firstActionState && firstActionState.dialog && (\n        <ActionStateDialog dialog={firstActionState.dialog} referenceElement={buttonElement} />\n      )}\n    </Flex>\n  )\n})\n\nexport const DocumentStatusBarActions = memo(function DocumentStatusBarActions() {\n  const {\n    actions: allActions,\n    connectionState,\n    documentId,\n    editState,\n    isInitialValueLoading,\n  } = useDocumentPane()\n\n  // The restore action has a dedicated place in the UI; it's only visible when the user is viewing\n  // a different document revision. It must be omitted from this collection.\n  const actions = useMemo(\n    () => (allActions ?? []).filter((action) => !isRestoreAction(action)),\n    [allActions],\n  )\n  const actionProps: Omit<DocumentActionProps, 'onComplete'> | null = useMemo(\n    () => (editState ? {...editState, initialValueResolved: !isInitialValueLoading} : null),\n    [editState, isInitialValueLoading],\n  )\n\n  const renderDocumentStatusBarActions = useCallback<\n    (props: {states: ResolvedAction[]}) => React.ReactNode\n  >(\n    ({states}) => (\n      <DocumentStatusBarActionsInner\n        // Use document ID as key to make sure that the actions state is reset when the document changes\n        key={documentId}\n        disabled={connectionState !== 'connected'}\n        states={states}\n      />\n    ),\n    [connectionState, documentId],\n  )\n\n  if (actions.length === 0 || !actionProps) {\n    return null\n  }\n\n  return (\n    <RenderActionCollectionState actions={actions} actionProps={actionProps} group=\"default\">\n      {renderDocumentStatusBarActions}\n    </RenderActionCollectionState>\n  )\n})\n\nexport const HistoryStatusBarActions = memo(function HistoryStatusBarActions() {\n  const {\n    actions,\n    connectionState,\n    editState,\n    revisionId: revision,\n    isInitialValueLoading,\n  } = useDocumentPane()\n\n  const disabled = (editState?.draft || editState?.published || {})._rev === revision\n  const actionProps: Omit<DocumentActionProps, 'onComplete'> | null = useMemo(\n    () =>\n      editState\n        ? {\n            ...editState,\n            revision: revision || undefined,\n            initialValueResolved: !isInitialValueLoading,\n          }\n        : null,\n    [editState, revision, isInitialValueLoading],\n  )\n\n  // If multiple `restore` actions are defined, ensure only the final one is used.\n  const historyActions = useMemo(() => (actions ?? []).filter(isRestoreAction).slice(-1), [actions])\n\n  const renderDocumentStatusBarActions = useCallback<\n    (props: {states: DocumentActionDescription[]}) => React.ReactNode\n  >(\n    ({states}) => (\n      <DocumentStatusBarActionsInner\n        disabled={connectionState !== 'connected' || Boolean(disabled)}\n        states={states}\n      />\n    ),\n    [connectionState, disabled],\n  )\n  if (!actionProps) {\n    return null\n  }\n  return (\n    <RenderActionCollectionState actions={historyActions} actionProps={actionProps} group=\"default\">\n      {renderDocumentStatusBarActions}\n    </RenderActionCollectionState>\n  )\n})\n\nexport function isRestoreAction(\n  action: DocumentActionComponent,\n): action is DocumentActionComponent & {action: 'restore'} {\n  return action.action === HistoryRestoreAction.action\n}\n","import {useEffect, useState} from 'react'\n\n/**\n * This hook is used to determine if the gradient should be shown on the chip scroll container.\n * It uses an IntersectionObserver to observe the last child of the container and sets the showGradient state based on the intersection.\n * @param containerRef - The ref to the container that contains all the chips\n * @returns showGradient - A boolean that determines if the gradient should be shown\n * @internal\n */\nexport function useChipScrollPosition(containerRef: React.RefObject<HTMLDivElement | null>) {\n  const [showGradient, setShowGradient] = useState(false)\n\n  useEffect(() => {\n    const checkOverflow = () => {\n      // container is the parent that contains all the chips\n      const container = containerRef.current\n      if (!container) return\n      const {scrollWidth, clientWidth} = container\n      const needsScrolling = scrollWidth > clientWidth\n\n      if (!needsScrolling) {\n        setShowGradient(false)\n        return\n      }\n\n      // Check if scrolled to the end\n      // becausee it doesn't need to show the gradient then\n      const {scrollLeft} = container\n      const isAtEnd = scrollLeft + clientWidth >= scrollWidth\n      setShowGradient(!isAtEnd)\n    }\n\n    function setupObservers() {\n      checkOverflow()\n      // container is the parent that contains all the chips\n      const container = containerRef.current\n      if (!container) return {intersectionObserver: null, mutationObserver: null}\n\n      const intersectionObserver = new IntersectionObserver((entries) => {\n        const entry = entries[0]\n\n        if (entry) {\n          setShowGradient(!entry.isIntersecting)\n        }\n      })\n\n      const updateLastChipObserver = () => {\n        // Disconnect previous observation\n        intersectionObserver.disconnect()\n\n        // Get the new last child\n        const lastChip = container.children[container.children.length - 1]\n        intersectionObserver.observe(lastChip)\n      }\n\n      // Set up initial observation\n      updateLastChipObserver()\n\n      // Set up mutation observer to watch for changes to children\n      // this is needed because sometimes the list of releases takes some time to be rendered\n      // otherwise it could accidentally set the last child as the \"drafts\" / \"published\" chip\n      const mutationObserver = new MutationObserver(() => {\n        updateLastChipObserver()\n        checkOverflow()\n      })\n\n      mutationObserver.observe(container, {\n        childList: true,\n        subtree: false,\n      })\n\n      return {intersectionObserver, mutationObserver}\n    }\n\n    const {intersectionObserver, mutationObserver} = setupObservers()\n\n    return () => {\n      intersectionObserver?.disconnect()\n      mutationObserver?.disconnect()\n    }\n  }, [containerRef])\n\n  return showGradient\n}\n","import {Text} from '@sanity/ui'\nimport {memo, useCallback, useMemo} from 'react'\nimport {\n  formatRelativeLocalePublishDate,\n  getReleaseIdFromReleaseDocumentId,\n  getReleaseTone,\n  getVersionFromId,\n  isDraftId,\n  isGoingToUnpublish,\n  isPublishedId,\n  isPublishedPerspective,\n  isReleaseScheduledOrScheduling,\n  isVersionId,\n  type ReleaseDocument,\n  type SanityDocumentLike,\n  Translate,\n  useActiveReleases,\n  useDateTimeFormat,\n  type UseDateTimeFormatOptions,\n  useFilteredReleases,\n  useOnlyHasVersions,\n  usePerspective,\n  useSchema,\n  useSetPerspective,\n  useTranslation,\n  useWorkspace,\n  VersionChip,\n} from 'sanity'\n\nimport {isLiveEditEnabled} from '../../../../../components/paneItem/helpers'\nimport {usePaneRouter} from '../../../../../components/paneRouter/usePaneRouter'\nimport {useDocumentPane} from '../../../useDocumentPane'\n\nconst TooltipContent = ({release}: {release: ReleaseDocument}) => {\n  const {t} = useTranslation()\n\n  if (release.state === 'archived') {\n    return <Text size={1}>{t('release.chip.tooltip.archived')}</Text>\n  }\n  if (release.metadata.releaseType === 'asap') {\n    return <Text size={1}>{t('release.type.asap')}</Text>\n  }\n  if (release.metadata.releaseType === 'scheduled') {\n    const isActive = release.state === 'active'\n\n    return (\n      release.metadata.intendedPublishAt && (\n        <Text size={1}>\n          {isActive ? (\n            <Translate\n              t={t}\n              i18nKey=\"release.chip.tooltip.intended-for-date\"\n              values={{\n                date: formatRelativeLocalePublishDate(release),\n              }}\n            />\n          ) : (\n            <Translate\n              t={t}\n              i18nKey=\"release.chip.tooltip.scheduled-for-date\"\n              values={{\n                date: formatRelativeLocalePublishDate(release),\n              }}\n            />\n          )}\n        </Text>\n      )\n    )\n  }\n\n  if (release.metadata.releaseType === 'undecided') {\n    return <Text size={1}>{t('release.type.undecided')}</Text>\n  }\n  return null\n}\n\nconst DATE_TIME_FORMAT: UseDateTimeFormatOptions = {\n  dateStyle: 'medium',\n  timeStyle: 'short',\n}\n\n// eslint-disable-next-line complexity\nexport const DocumentPerspectiveList = memo(function DocumentPerspectiveList() {\n  const {selectedReleaseId, selectedPerspectiveName} = usePerspective()\n  const {t} = useTranslation()\n  const setPerspective = useSetPerspective()\n  const {params, setParams} = usePaneRouter()\n  const dateTimeFormat = useDateTimeFormat(DATE_TIME_FORMAT)\n  const {loading} = useActiveReleases()\n  const schema = useSchema()\n  const {editState, displayed, documentType, documentId} = useDocumentPane()\n  const isCreatingDocument = displayed && !displayed._createdAt\n\n  const filteredReleases = useFilteredReleases({\n    historyVersion: params?.historyVersion,\n    displayed,\n    documentId,\n  })\n\n  const onlyHasVersions = useOnlyHasVersions({documentId})\n  const workspace = useWorkspace()\n\n  const handlePerspectiveChange = useCallback(\n    (perspective: Parameters<typeof setPerspective>[0]) => () => {\n      if (perspective === 'published' && params?.historyVersion) {\n        setParams({\n          ...params,\n          rev: params?.historyEvent || undefined,\n          since: undefined,\n          historyVersion: undefined,\n        })\n      }\n      setPerspective(perspective)\n    },\n    [setPerspective, setParams, params],\n  )\n\n  const schemaType = schema.get(documentType)\n  const isLiveEdit = schemaType ? isLiveEditEnabled(schemaType) : false\n\n  const isPublishedChipDisabled = useMemo(() => {\n    // If it's a live edit document the only option to edit it is through\n    // the published perspective, users should be able to select it.\n    if (isLiveEdit && !selectedReleaseId) return false\n\n    // If it's not live edit, we want to check for the existence of the published doc.\n    return !editState?.published\n  }, [isLiveEdit, selectedReleaseId, editState?.published])\n\n  const getReleaseChipState = useCallback(\n    (release: ReleaseDocument): {selected: boolean; disabled?: boolean} => {\n      if (!params?.historyVersion) {\n        const isCurrentVersionGoingToUnpublish =\n          editState?.version &&\n          isGoingToUnpublish(editState?.version) &&\n          getReleaseIdFromReleaseDocumentId(release._id) ===\n            getVersionFromId(editState?.version?._id)\n\n        return {\n          selected: Boolean(\n            getReleaseIdFromReleaseDocumentId(release._id) ===\n              getVersionFromId(displayed?._id || '') || isCurrentVersionGoingToUnpublish,\n          ),\n        }\n      }\n\n      const isReleaseHistoryMatch =\n        getReleaseIdFromReleaseDocumentId(release._id) === params.historyVersion\n\n      return {selected: isReleaseHistoryMatch, disabled: isReleaseHistoryMatch}\n    },\n    [displayed?._id, editState?.version, params?.historyVersion],\n  )\n\n  const isPublishSelected: boolean = useMemo(() => {\n    /**\n     * The publish perspective is selected when:\n     *  - the document is live edit and there is no draft\n     *  - the document is published and the selected perspective is published\n     */\n    if (isLiveEdit && !editState?.draft?._id && !selectedReleaseId) return true\n    if (\n      isPublishedId(displayed?._id || '') &&\n      isPublishedPerspective(selectedPerspectiveName || '')\n    ) {\n      return true\n    }\n    return false\n  }, [\n    displayed?._id,\n    editState?.draft?._id,\n    isLiveEdit,\n    selectedPerspectiveName,\n    selectedReleaseId,\n  ])\n\n  const isDraftSelected: boolean = useMemo(() => {\n    const displayedId = displayed?._id || ''\n    /** the draft is selected when:\n     * not viewing a historical version,\n     * when the document displayed is a draft,\n     * when the perspective is null,\n     * when the document is not published and the displayed version is draft,\n     * when there is no draft (new document),\n     */\n    if (isPublishSelected) return false\n    if (params?.historyVersion) return false\n    if (selectedPerspectiveName) return false\n    if (isVersionId(displayedId)) return false\n    if (isDraftId(displayedId)) return true\n    if (\n      isPublishedId(displayedId) &&\n      editState?.published &&\n      isPublishedPerspective(selectedPerspectiveName || '')\n    )\n      return false\n    return true\n  }, [\n    displayed?._id,\n    editState?.published,\n    isPublishSelected,\n    params?.historyVersion,\n    selectedPerspectiveName,\n  ])\n\n  const isDraftDisabled: boolean = useMemo(() => {\n    // Draft is disabled when the document has no published or draft but has versions\n    if (onlyHasVersions || (isCreatingDocument && selectedReleaseId)) {\n      return true\n    }\n\n    // Draft is disabled when we are creating a new document inside a release\n    // or when the document is live edit and there is no draft\n    if (!editState?.draft && !isLiveEdit) {\n      return false\n    }\n\n    if (isCreatingDocument && selectedReleaseId) return true\n    if (isLiveEdit) return true\n    return false\n  }, [editState?.draft, isCreatingDocument, isLiveEdit, onlyHasVersions, selectedReleaseId])\n\n  const isDraftModelEnabled = workspace.document.drafts?.enabled\n\n  return (\n    <>\n      <VersionChip\n        tooltipContent={\n          <Text size={1}>\n            {editState?.published && editState?.published?._updatedAt ? (\n              <Translate\n                t={t}\n                i18nKey=\"release.chip.tooltip.published-date\"\n                values={{date: dateTimeFormat.format(new Date(editState?.published._updatedAt))}}\n              />\n            ) : (\n              <>{t('release.chip.tooltip.not-published')}</>\n            )}\n          </Text>\n        }\n        disabled={isPublishedChipDisabled}\n        onClick={handlePerspectiveChange('published')}\n        selected={isPublishSelected}\n        text={t('release.chip.published')}\n        tone=\"positive\"\n        contextValues={{\n          documentId: editState?.published?._id || editState?.id || '',\n          menuReleaseId: editState?.published?._id || editState?.id || '',\n          releases: filteredReleases.notCurrentReleases,\n          releasesLoading: loading,\n          documentType,\n          fromRelease: 'published',\n          isVersion: false,\n          disabled: !editState?.published,\n        }}\n      />\n      {isDraftModelEnabled && (\n        <VersionChip\n          tooltipContent={\n            <Text size={1}>\n              {editState?.draft ? (\n                <>\n                  {editState?.draft._updatedAt ? (\n                    <Translate\n                      t={t}\n                      i18nKey=\"release.chip.tooltip.edited-date\"\n                      values={{date: dateTimeFormat.format(new Date(editState?.draft._updatedAt))}}\n                    />\n                  ) : (\n                    <Translate\n                      t={t}\n                      i18nKey=\"release.chip.tooltip.created-date\"\n                      values={{date: dateTimeFormat.format(new Date(editState?.draft._createdAt))}}\n                    />\n                  )}\n                </>\n              ) : (\n                <>\n                  {isLiveEdit\n                    ? t('release.chip.tooltip.draft-disabled.live-edit')\n                    : t('release.chip.tooltip.no-edits')}\n                </>\n              )}\n            </Text>\n          }\n          selected={isDraftSelected}\n          disabled={isDraftDisabled}\n          text={t('release.chip.draft')}\n          tone={editState?.draft ? 'caution' : 'neutral'}\n          onClick={handlePerspectiveChange('drafts')}\n          contextValues={{\n            documentId: editState?.draft?._id || editState?.published?._id || editState?.id || '',\n            menuReleaseId:\n              editState?.draft?._id || editState?.published?._id || editState?.id || '',\n            releases: filteredReleases.notCurrentReleases,\n            releasesLoading: loading,\n            documentType: documentType,\n            fromRelease: 'draft',\n            isVersion: false,\n          }}\n        />\n      )}\n      {filteredReleases.inCreation && (\n        <VersionChip\n          tooltipContent={<TooltipContent release={filteredReleases.inCreation} />}\n          selected\n          onClick={() => {}}\n          locked={false}\n          tone={getReleaseTone(filteredReleases.inCreation)}\n          text={\n            filteredReleases.inCreation.metadata.title || t('release.placeholder-untitled-release')\n          }\n          contextValues={{\n            disabled: true, // disable the chip context menu, this one is in creation\n            documentId: displayed?._id || '',\n            menuReleaseId: filteredReleases.inCreation._id,\n            releases: filteredReleases.notCurrentReleases,\n            releasesLoading: loading,\n            documentType,\n            fromRelease: getReleaseIdFromReleaseDocumentId(filteredReleases.inCreation._id),\n            releaseState: filteredReleases.inCreation.state,\n            isVersion: true,\n            release: filteredReleases.inCreation,\n          }}\n        />\n      )}\n\n      {displayed &&\n        filteredReleases.currentReleases?.map((release) => (\n          <VersionChip\n            key={release._id}\n            tooltipContent={<TooltipContent release={release} />}\n            {...getReleaseChipState(release)}\n            onClick={handlePerspectiveChange(getReleaseIdFromReleaseDocumentId(release._id))}\n            text={release.metadata.title || t('release.placeholder-untitled-release')}\n            tone={getReleaseTone(release)}\n            locked={isReleaseScheduledOrScheduling(release)}\n            contextValues={{\n              documentId: displayed?._id || '',\n              menuReleaseId: release._id,\n              releases: filteredReleases.notCurrentReleases,\n              releasesLoading: loading,\n              documentType: documentType,\n              fromRelease: getReleaseIdFromReleaseDocumentId(release._id),\n              releaseState: release.state,\n              isVersion: true,\n              // displayed, in this instance is not going to be the version to compare to\n              // since it's going to be the published version\n              isGoingToUnpublish: editState?.version\n                ? isGoingToUnpublish(editState?.version as SanityDocumentLike)\n                : false,\n              release,\n            }}\n          />\n        ))}\n    </>\n  )\n})\n","import {ArrowLeftIcon, CloseIcon, SplitVerticalIcon} from '@sanity/icons'\nimport {Box, Card, Flex} from '@sanity/ui'\n// eslint-disable-next-line camelcase\nimport {getTheme_v2, rgba} from '@sanity/ui/theme'\nimport {\n  type ForwardedRef,\n  forwardRef,\n  memo,\n  useCallback,\n  useDeferredValue,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport {type DocumentActionDescription, useFieldActions, useTranslation} from 'sanity'\nimport {css, styled} from 'styled-components'\n\nimport {Button, TooltipDelayGroupProvider} from '../../../../../ui-components'\nimport {\n  PaneContextMenuButton,\n  PaneHeader,\n  PaneHeaderActionButton,\n  RenderActionCollectionState,\n  usePane,\n  usePaneRouter,\n} from '../../../../components'\nimport {type _PaneMenuNode} from '../../../../components/pane/types'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {isMenuNodeButton, isNotMenuNodeButton, resolveMenuNodes} from '../../../../menuNodes'\nimport {type PaneMenuItem} from '../../../../types'\nimport {useStructureTool} from '../../../../useStructureTool'\nimport {ActionDialogWrapper, ActionMenuListItem} from '../../statusBar/ActionMenuButton'\nimport {isRestoreAction} from '../../statusBar/DocumentStatusBarActions'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {DocumentHeaderTitle} from './DocumentHeaderTitle'\nimport {useChipScrollPosition} from './hook/useChipScrollPosition'\nimport {DocumentPerspectiveList} from './perspective/DocumentPerspectiveList'\n\nexport interface DocumentPanelHeaderProps {\n  menuItems: PaneMenuItem[]\n}\n\nconst HorizontalScroller = styled(Card)<{$showGradient: boolean}>((props) => {\n  const theme = getTheme_v2(props.theme)\n\n  return css`\n    scrollbar-width: none;\n    z-index: 1;\n    flex: 1;\n    position: relative;\n    > div {\n      &::-webkit-scrollbar {\n        width: 0;\n        height: 0;\n      }\n    }\n\n    ${props.$showGradient &&\n    css`\n      &::after {\n        content: '';\n        display: block;\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        width: 150px;\n        background: linear-gradient(to right, ${rgba(theme.color.bg, 0)}, var(--card-bg-color));\n        transition: 'opacity 300ms ease-out';\n        pointer-events: none;\n      }\n    `}\n  `\n})\n\nexport const DocumentPanelHeader = memo(\n  forwardRef(function DocumentPanelHeader(\n    _props: DocumentPanelHeaderProps,\n    ref: ForwardedRef<HTMLDivElement>,\n  ) {\n    const {menuItems} = _props\n    const {\n      actions: allActions,\n      editState,\n      onMenuAction,\n      isInitialValueLoading,\n      onPaneClose,\n      onPaneSplit,\n      menuItemGroups,\n      schemaType,\n      connectionState,\n      views,\n      unstable_languageFilter,\n    } = useDocumentPane()\n    const {features} = useStructureTool()\n    const {index, BackLink, hasGroupSiblings} = usePaneRouter()\n    const {actions: fieldActions} = useFieldActions()\n    const [referenceElement, setReferenceElement] = useState<HTMLElement | null>(null)\n    const scrollContainerRef = useRef<HTMLDivElement>(null)\n    const showGradient = useChipScrollPosition(scrollContainerRef)\n\n    // The restore action has a dedicated place in the UI; it's only visible when the user is\n    // viewing a different document revision. It must be omitted from this collection.\n    const actions = useMemo(\n      () => (allActions ?? []).filter((action) => !isRestoreAction(action)),\n      [allActions],\n    )\n\n    const menuNodes = useMemo(\n      () =>\n        resolveMenuNodes({actionHandler: onMenuAction, fieldActions, menuItems, menuItemGroups}),\n      [onMenuAction, fieldActions, menuItemGroups, menuItems],\n    )\n\n    const menuButtonNodes = useMemo(() => menuNodes.filter(isMenuNodeButton), [menuNodes])\n    const contextMenuNodes = useMemo(() => menuNodes.filter(isNotMenuNodeButton), [menuNodes])\n    const showTabs = views.length > 1\n\n    const {collapsed, isLast} = usePane()\n    // Prevent focus if this is the last (non-collapsed) pane.\n    const tabIndex = isLast && !collapsed ? -1 : 0\n\n    // there are three kinds of buttons possible:\n    //\n    // 1. split pane - creates a new split pane\n    // 2. close split pane — closes the current split pane\n    // 3. close pane group — closes the current pane group\n\n    // show the split pane button if they're enabled and there is more than one\n    // view available to use to create a split view\n    const showSplitPaneButton = features.splitViews && onPaneSplit && views.length > 1\n\n    // show the split pane button close button if the split button is showing\n    // and there is more than one split pane open (aka has-siblings)\n    const showSplitPaneCloseButton = showSplitPaneButton && hasGroupSiblings\n\n    // show the back button if both the feature is enabled and the current pane\n    // is not the first\n    const showBackButton = features.backButton && index > 0\n\n    // show the pane group close button if the `showSplitPaneCloseButton` is\n    // _not_ showing (the split pane button replaces the group close button)\n    // and if the back button is not showing (the back button and the close\n    // button do the same thing and shouldn't be shown at the same time)\n    // and if a BackLink component was provided\n    const showPaneGroupCloseButton = !showSplitPaneCloseButton && !showBackButton && !!BackLink\n\n    const {t} = useTranslation(structureLocaleNamespace)\n\n    const renderPaneActions = useCallback<\n      (props: {states: DocumentActionDescription[]}) => React.ReactNode\n    >(\n      ({states}) => (\n        <DocumentPanelHeaderActionDialogDeferred\n          contextMenuNodes={contextMenuNodes}\n          setReferenceElement={setReferenceElement}\n          referenceElement={referenceElement}\n          states={states}\n        />\n      ),\n      [contextMenuNodes, referenceElement],\n    )\n\n    const title = useMemo(() => <DocumentHeaderTitle />, [])\n    const backButton = useMemo(\n      () =>\n        showBackButton && (\n          <Button\n            as={BackLink}\n            data-as=\"a\"\n            icon={ArrowLeftIcon}\n            mode=\"bleed\"\n            tooltipProps={{content: t('pane-header.back-button.text')}}\n          />\n        ),\n      [BackLink, showBackButton, t],\n    )\n    const renderedActions = useMemo(\n      () => (\n        <Flex align=\"center\" gap={1}>\n          {unstable_languageFilter.length > 0 && (\n            <>\n              {unstable_languageFilter.map((LanguageFilterComponent, idx) => {\n                return (\n                  <LanguageFilterComponent key={`language-filter-${idx}`} schemaType={schemaType} />\n                )\n              })}\n            </>\n          )}\n\n          {menuButtonNodes.map((item) => (\n            <PaneHeaderActionButton key={item.key} node={item} />\n          ))}\n          {editState && (\n            <RenderActionCollectionState\n              actions={actions}\n              actionProps={{...editState, initialValueResolved: !isInitialValueLoading}}\n              group=\"paneActions\"\n            >\n              {renderPaneActions}\n            </RenderActionCollectionState>\n          )}\n\n          {showSplitPaneButton && (\n            <Button\n              key=\"split-pane-button\"\n              aria-label={t('buttons.split-pane-button.aria-label')}\n              icon={SplitVerticalIcon}\n              mode=\"bleed\"\n              onClick={onPaneSplit}\n              tooltipProps={{content: t('buttons.split-pane-button.tooltip')}}\n            />\n          )}\n\n          {showSplitPaneCloseButton && (\n            <Button\n              key=\"close-view-button\"\n              icon={CloseIcon}\n              mode=\"bleed\"\n              onClick={onPaneClose}\n              tooltipProps={{content: t('buttons.split-pane-close-button.title')}}\n            />\n          )}\n\n          {showPaneGroupCloseButton && (\n            <Button\n              key=\"close-view-button\"\n              icon={CloseIcon}\n              mode=\"bleed\"\n              tooltipProps={{content: t('buttons.split-pane-close-group-button.title')}}\n              as={BackLink}\n            />\n          )}\n        </Flex>\n      ),\n      [\n        BackLink,\n        actions,\n        editState,\n        isInitialValueLoading,\n        menuButtonNodes,\n        onPaneClose,\n        onPaneSplit,\n        renderPaneActions,\n        schemaType,\n        showPaneGroupCloseButton,\n        showSplitPaneButton,\n        showSplitPaneCloseButton,\n        t,\n        unstable_languageFilter,\n      ],\n    )\n\n    return (\n      <TooltipDelayGroupProvider>\n        {collapsed ? (\n          <PaneHeader\n            border\n            ref={ref}\n            loading={connectionState === 'connecting' && !editState?.draft && !editState?.published}\n            title={title}\n            tabIndex={tabIndex}\n            backButton={backButton}\n          />\n        ) : (\n          <Card hidden={collapsed} style={{lineHeight: 0}} borderBottom>\n            <Flex gap={3} paddingY={3}>\n              <HorizontalScroller $showGradient={showGradient}>\n                <Flex\n                  flex={1}\n                  gap={1}\n                  overflow=\"auto\"\n                  paddingX={3}\n                  data-testid=\"document-perspective-list\"\n                  ref={scrollContainerRef}\n                >\n                  <DocumentPerspectiveList />\n                </Flex>\n              </HorizontalScroller>\n\n              <Box flex=\"none\" paddingRight={3}>\n                {renderedActions}\n              </Box>\n            </Flex>\n          </Card>\n        )}\n      </TooltipDelayGroupProvider>\n    )\n  }),\n)\n\nconst DocumentPanelHeaderActionDialogDeferred = memo(\n  function DocumentPanelHeaderActionDialogDeferred(props: {\n    states: DocumentActionDescription[]\n    setReferenceElement: React.Dispatch<React.SetStateAction<HTMLElement | null>>\n    referenceElement: HTMLElement | null\n    contextMenuNodes: _PaneMenuNode[]\n  }) {\n    const {setReferenceElement, referenceElement, contextMenuNodes} = props\n    /**\n     * The purpose of this component is to allow deferring the rendering of document action hook states if the main thread becomes very busy.\n     * The `useDeferredValue` doesn't have an effect unless it's used to delay rendering a component that has `React.memo` to prevent unnecessary re-renders.\n     */\n    const states = useDeferredValue(props.states)\n\n    return (\n      <DocumentPanelHeaderActionDialog\n        setReferenceElement={setReferenceElement}\n        referenceElement={referenceElement}\n        contextMenuNodes={contextMenuNodes}\n        states={states}\n      />\n    )\n  },\n)\n\nconst DocumentPanelHeaderActionDialog = memo(function DocumentPanelHeaderActionDialog(props: {\n  states: DocumentActionDescription[]\n  setReferenceElement: React.Dispatch<React.SetStateAction<HTMLElement | null>>\n  referenceElement: HTMLElement | null\n  contextMenuNodes: _PaneMenuNode[]\n}) {\n  const {states, setReferenceElement, contextMenuNodes, referenceElement} = props\n\n  const renderActionDialog = useCallback<\n    ({handleAction}: {handleAction: (idx: number) => void}) => React.ReactNode\n  >(\n    ({handleAction}) => (\n      <div ref={setReferenceElement}>\n        <PaneContextMenuButton\n          key=\"context-menu\"\n          nodes={contextMenuNodes}\n          actionsNodes={\n            states.length > 0\n              ? states.map((actionState, actionIndex) => (\n                  <ActionMenuListItem\n                    key={actionState.label}\n                    actionState={actionState}\n                    disabled={Boolean(actionState.disabled)}\n                    index={actionIndex}\n                    onAction={handleAction}\n                  />\n                ))\n              : undefined\n          }\n        />\n      </div>\n    ),\n    [contextMenuNodes, setReferenceElement, states],\n  )\n\n  return (\n    <ActionDialogWrapper actionStates={states} referenceElement={referenceElement}>\n      {renderActionDialog}\n    </ActionDialogWrapper>\n  )\n})\n","import {Button, type ButtonProps} from '../../../ui-components'\n\ninterface SpacerButtonProps {\n  size?: ButtonProps['size']\n}\n\n/**\n * This renders a visually hidden <Button> component that is still contributes\n * to document layout.\n *\n * It's used to simplify padding in Sanity UI components that contain buttons which\n * may not always be rendered.\n *\n * TODO: let's find a more elegant solve to this layout shift problem\n *\n * @internal\n */\nexport function SpacerButton({size}: SpacerButtonProps) {\n  return (\n    <Button\n      aria-hidden\n      disabled\n      size={size}\n      style={{\n        pointerEvents: 'none',\n        visibility: 'hidden',\n        width: 0,\n      }}\n      text=\"-\"\n    />\n  )\n}\n","import {Badge, type BadgeTone, Inline} from '@sanity/ui'\nimport {memo, useCallback, useDeferredValue} from 'react'\nimport {type DocumentBadgeDescription} from 'sanity'\n\nimport {Tooltip} from '../../../../ui-components'\nimport {RenderBadgeCollectionState} from '../../../components'\nimport {useDocumentPane} from '../useDocumentPane'\n\ninterface DocumentBadgesInnerProps {\n  states: DocumentBadgeDescription[]\n}\n\nconst BADGE_TONES: Record<string, BadgeTone | undefined> = {\n  primary: 'primary',\n  success: 'positive',\n  warning: 'caution',\n  danger: 'critical',\n}\n\nconst DocumentBadgesInner = memo(function DocumentBadgesInner({states}: DocumentBadgesInnerProps) {\n  if (states.length === 0) {\n    return null\n  }\n  return (\n    <Inline space={1}>\n      {states.map((badge, index) => (\n        <Tooltip\n          key={`${badge.label}-${index}`}\n          content={badge.title}\n          disabled={!badge.title}\n          placement=\"top\"\n          portal\n        >\n          <Badge\n            fontSize={1}\n            mode=\"outline\"\n            paddingX={2}\n            paddingY={1}\n            radius={4}\n            tone={badge.color ? BADGE_TONES[badge.color] : undefined}\n            style={{whiteSpace: 'nowrap'}}\n          >\n            {badge.label}\n          </Badge>\n        </Tooltip>\n      ))}\n    </Inline>\n  )\n})\n\nconst DocumentBadgesDeferred = memo(function DocumentBadgesDeferred(\n  props: DocumentBadgesInnerProps,\n) {\n  /**\n   * The purpose of this component is to allow deferring the rendering of document action hook states if the main thread becomes very busy.\n   * The `useDeferredValue` doesn't have an effect unless it's used to delay rendering a component that has `React.memo` to prevent unnecessary re-renders.\n   */\n  const states = useDeferredValue(props.states)\n  return <DocumentBadgesInner states={states} />\n})\n\nexport function DocumentBadges() {\n  const {badges, editState} = useDocumentPane()\n\n  const renderDocumentBadges = useCallback<\n    (props: {states: DocumentBadgeDescription[]}) => React.ReactNode\n  >(({states}) => <DocumentBadgesDeferred states={states} />, [])\n\n  if (!editState || !badges) return null\n\n  return (\n    <RenderBadgeCollectionState badges={badges} badgeProps={editState}>\n      {renderDocumentBadges}\n    </RenderBadgeCollectionState>\n  )\n}\n","import {\n  AddIcon,\n  CloseIcon,\n  EditIcon,\n  type IconComponent,\n  PublishIcon,\n  TrashIcon,\n  UnpublishIcon,\n} from '@sanity/icons'\n\nexport const TIMELINE_ICON_COMPONENTS: {[key: string]: IconComponent | undefined} = {\n  create: AddIcon,\n  delete: TrashIcon,\n  discardDraft: CloseIcon,\n  initial: AddIcon,\n  editDraft: EditIcon,\n  editLive: EditIcon,\n  publish: PublishIcon,\n  unpublish: UnpublishIcon,\n}\n","import {type IconComponent} from '@sanity/icons'\nimport {type ChunkType} from 'sanity'\n\nimport {TIMELINE_ICON_COMPONENTS} from './constants'\n\nexport function getTimelineEventIconComponent(type: ChunkType): IconComponent | undefined {\n  return TIMELINE_ICON_COMPONENTS[type]\n}\n","import {ChevronLeftIcon} from '@sanity/icons'\nimport {type MouseEvent, useCallback} from 'react'\nimport {useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Button} from '../../../../ui-components'\nimport {structureLocaleNamespace} from '../../../i18n'\nimport {TIMELINE_LIST_WRAPPER_ID} from './timeline'\n\n/**\n * This is a hack to force the scrollbar to not appear when the list is expanding,\n * if we don't do this the scrollbar will appear for a brief moment when the list is expanding and then disappear\n * when the list is fully expanded.\n */\nfunction hideScrollbarOnExpand(isExpanded: boolean) {\n  // Do nothing if the list is already expanded\n  if (isExpanded) return\n\n  const listWrapper = document.getElementById(TIMELINE_LIST_WRAPPER_ID)\n\n  if (listWrapper) {\n    const firstChildren = listWrapper.children[0] as HTMLElement\n    const hasScrollbar = firstChildren.scrollHeight > firstChildren.clientHeight\n    if (!hasScrollbar) {\n      //\n      const currentStyle = getComputedStyle(firstChildren).overflowY\n      // Add overflow hidden to the listWrapper to avoid the scrollbar to appear when expanding\n      firstChildren.style.overflowY = 'hidden'\n      setTimeout(() => {\n        // Reset the overflow style after the list is expanded\n        firstChildren.style.overflowY = currentStyle\n      }, 0)\n    }\n  }\n}\n\nconst FlipIcon = styled(ChevronLeftIcon)`\n  transition: transform 200ms;\n  &[data-expanded='true'] {\n    transform: rotate(-90deg);\n  }\n`\n\nexport function ExpandableTimelineItemButton({\n  isExpanded,\n  onExpand,\n}: {\n  isExpanded: boolean\n  onExpand: () => void\n}) {\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const handleExpandClick = useCallback(\n    (e: MouseEvent<HTMLButtonElement>) => {\n      e.stopPropagation()\n      hideScrollbarOnExpand(isExpanded)\n      onExpand()\n    },\n    [onExpand, isExpanded],\n  )\n\n  return (\n    <Button\n      mode=\"bleed\"\n      icon={<FlipIcon data-expanded={isExpanded} />}\n      tooltipProps={{\n        content: isExpanded\n          ? t('timeline-item.menu.action-collapse')\n          : t('timeline-item.menu.action-expand'),\n      }}\n      onClick={handleExpandClick}\n    />\n  )\n}\n","import {Box, Flex, Stack} from '@sanity/ui'\nimport {css, styled} from 'styled-components'\n\nexport const StackWrapper = styled(Stack)`\n  max-width: 200px;\n`\n\nexport const ListWrapper = styled(Flex)<{$maxHeight: string}>`\n  max-height: ${(props) => props.$maxHeight};\n  min-width: 244px;\n`\n\nexport const Root = styled(Box)<{$visible?: boolean}>(({$visible}) => {\n  return css`\n    opacity: 0;\n    pointer-events: none;\n    transition: opacity 0.2s;\n\n    ${$visible &&\n    css`\n      opacity: 1;\n      pointer-events: auto;\n    `}\n  `\n})\n","import {type ChunkType, type StudioLocaleResourceKeys} from 'sanity'\n\n/**\n * Maps from a chunk type to an i18n key for the operation\n *\n * @internal\n */\nexport const TIMELINE_ITEM_I18N_KEY_MAPPING: Record<ChunkType, StudioLocaleResourceKeys> = {\n  initial: 'timeline.operation.created-initial',\n  create: 'timeline.operation.created',\n  publish: 'timeline.operation.published',\n  editLive: 'timeline.operation.edited-live',\n  editDraft: 'timeline.operation.edited-draft',\n  unpublish: 'timeline.operation.unpublished',\n  discardDraft: 'timeline.operation.draft-discarded',\n  delete: 'timeline.operation.deleted',\n}\n","import {type AvatarSize, AvatarStack} from '@sanity/ui'\nimport {UserAvatar} from 'sanity'\n\ninterface UserAvatarStackProps {\n  maxLength?: number\n  userIds: string[]\n  size?: AvatarSize\n  withTooltip?: boolean\n}\n\nexport function UserAvatarStack({\n  maxLength,\n  userIds,\n  size,\n  withTooltip = true,\n}: UserAvatarStackProps) {\n  return (\n    <AvatarStack maxLength={maxLength} size={size}>\n      {userIds.map((userId) => (\n        <UserAvatar key={userId} user={userId} withTooltip={withTooltip} />\n      ))}\n    </AvatarStack>\n  )\n}\n","import {Box, Card, Flex, Skeleton, Stack, Text} from '@sanity/ui'\n// eslint-disable-next-line camelcase\nimport {getTheme_v2, type ThemeColorAvatarColorKey} from '@sanity/ui/theme'\nimport {type MouseEvent, useCallback, useMemo} from 'react'\nimport {\n  AvatarSkeleton,\n  type ChunkType,\n  type RelativeTimeOptions,\n  useDateTimeFormat,\n  UserAvatar,\n  useRelativeTime,\n  useTranslation,\n  useUser,\n} from 'sanity'\nimport {css, styled} from 'styled-components'\n\nimport {Tooltip} from '../../../../ui-components'\nimport {getTimelineEventIconComponent} from './helpers'\nimport {TIMELINE_ITEM_I18N_KEY_MAPPING} from './timelineI18n'\nimport {UserAvatarStack} from './userAvatarStack'\nimport {type ChunksWithCollapsedDrafts} from './utils'\n\nexport const IconBox = styled(Flex)<{$color: ThemeColorAvatarColorKey}>((props) => {\n  const theme = getTheme_v2(props.theme)\n  const color = props.$color\n\n  return css`\n    --card-icon-color: ${theme.color.avatar[color].fg};\n    background-color: ${theme.color.avatar[color].bg};\n    box-shadow: 0 0 0 1px var(--card-bg-color);\n\n    position: absolute;\n    width: ${theme.avatar.sizes[0].size}px;\n    height: ${theme.avatar.sizes[0].size}px;\n    right: -3px;\n    bottom: -3px;\n    border-radius: 50%;\n  `\n})\n\nconst TIMELINE_ITEM_EVENT_TONE: Record<ChunkType | 'withinSelection', ThemeColorAvatarColorKey> = {\n  initial: 'blue',\n  create: 'blue',\n  publish: 'green',\n  editLive: 'green',\n  editDraft: 'yellow',\n  unpublish: 'orange',\n  discardDraft: 'orange',\n  delete: 'red',\n  withinSelection: 'magenta',\n}\n\nexport interface TimelineItemProps {\n  chunk: ChunksWithCollapsedDrafts\n  isSelected: boolean\n  onSelect: (chunk: ChunksWithCollapsedDrafts) => void\n  collaborators?: Set<string>\n  optionsMenu?: React.ReactNode\n}\n\nconst RELATIVE_TIME_OPTIONS: RelativeTimeOptions = {\n  minimal: true,\n  useTemporalPhrase: true,\n}\n\nconst NameSkeleton = styled(Skeleton)((props) => {\n  const theme = getTheme_v2(props.theme)\n  return css`\n    width: 6ch;\n    height: ${theme.font.text.sizes[0].lineHeight}px;\n  `\n})\n\nconst UserLine = ({userId}: {userId: string}) => {\n  const [user, loading] = useUser(userId)\n\n  return (\n    <Flex key={userId} align=\"center\" gap={2} padding={1}>\n      <Box>{loading || !user ? <AvatarSkeleton animated /> : <UserAvatar user={user} />}</Box>\n      <Box>\n        {loading || !user?.displayName ? (\n          <Text size={1}>\n            <NameSkeleton animated />\n          </Text>\n        ) : (\n          <Text muted size={1}>\n            {user.displayName}\n          </Text>\n        )}\n      </Box>\n    </Flex>\n  )\n}\nconst TooltipContent = ({collaborators}: {collaborators: string[]}) => {\n  const {t} = useTranslation('studio')\n  return (\n    <Stack paddingBottom={1}>\n      <Box padding={1} paddingBottom={2}>\n        <Text size={1} weight=\"medium\">\n          {t('timeline.changes.title')}\n        </Text>\n      </Box>\n      {collaborators.map((userId) => (\n        <UserLine key={userId} userId={userId} />\n      ))}\n    </Stack>\n  )\n}\nexport function TimelineItem({\n  chunk,\n  isSelected,\n  onSelect,\n  collaborators,\n  optionsMenu,\n}: TimelineItemProps) {\n  const {t} = useTranslation('studio')\n  const {type, endTimestamp: timestamp} = chunk\n  const IconComponent = getTimelineEventIconComponent(type)\n  const authorUserIds = Array.from(chunk.authors)\n  const collaboratorsUsersIds = collaborators ? Array.from(collaborators) : []\n  const isSelectable = type !== 'delete'\n  const dateFormat = useDateTimeFormat({dateStyle: 'medium', timeStyle: 'short'})\n  const date = new Date(timestamp)\n\n  const updatedTimeAgo = useRelativeTime(date || '', RELATIVE_TIME_OPTIONS)\n\n  const formattedTimestamp = useMemo(() => {\n    const parsedDate = new Date(timestamp)\n    const formattedDate = dateFormat.format(parsedDate)\n\n    return formattedDate\n  }, [timestamp, dateFormat])\n\n  const handleClick = useCallback(\n    (evt: MouseEvent<HTMLDivElement>) => {\n      evt.preventDefault()\n      evt.stopPropagation()\n\n      if (isSelectable) {\n        onSelect(chunk)\n      }\n    },\n    [onSelect, chunk, isSelectable],\n  )\n\n  return (\n    <Flex align=\"center\" gap={1}>\n      <Card\n        as=\"button\"\n        onClick={handleClick}\n        padding={2}\n        pressed={isSelected}\n        radius={2}\n        data-ui=\"timelineItem\"\n        data-testid=\"timeline-item-button\"\n        data-chunk-id={chunk.id}\n      >\n        <Flex align=\"center\" gap={3}>\n          <div style={{position: 'relative'}}>\n            <UserAvatarStack maxLength={3} userIds={authorUserIds} size={2} />\n            <IconBox align=\"center\" justify=\"center\" $color={TIMELINE_ITEM_EVENT_TONE[type]}>\n              <Text size={0}>{IconComponent && <IconComponent />}</Text>\n            </IconBox>\n          </div>\n          <Stack space={2}>\n            <Text size={1} weight=\"medium\">\n              {t(TIMELINE_ITEM_I18N_KEY_MAPPING[type]) || <code>{type}</code>}\n            </Text>\n\n            <Text as=\"time\" size={1} muted dateTime={timestamp} title={formattedTimestamp}>\n              {updatedTimeAgo}\n            </Text>\n          </Stack>\n\n          {collaboratorsUsersIds.length > 0 && (\n            <Flex flex={1} justify=\"flex-end\" align=\"center\">\n              <Tooltip\n                placement=\"top\"\n                content={<TooltipContent collaborators={collaboratorsUsersIds} />}\n                portal\n              >\n                <Box paddingLeft={2} paddingY={2}>\n                  <UserAvatarStack\n                    maxLength={3}\n                    userIds={collaboratorsUsersIds}\n                    size={0}\n                    withTooltip={false}\n                  />\n                </Box>\n              </Tooltip>\n            </Flex>\n          )}\n        </Flex>\n      </Card>\n      {optionsMenu}\n    </Flex>\n  )\n}\n","import {type Chunk, type ChunkType} from 'sanity'\n\nexport type NonPublishChunk = Omit<Chunk, 'type'> & {\n  type: Exclude<ChunkType, 'publish'>\n  parentId?: string\n}\n\nexport type PublishChunk = Omit<Chunk, 'type'> & {\n  type: 'publish'\n  children: string[]\n  collaborators: Set<string>\n}\n\nexport const isNonPublishChunk = (chunk: Chunk): chunk is NonPublishChunk =>\n  chunk.type !== 'publish'\n\nexport const isPublishChunk = (chunk: Chunk): chunk is PublishChunk => chunk.type === 'publish'\n\n/**\n * searches for the previous publish action in the list of chunks\n * e.g. chunks = [publish, edit, publish, edit, edit] it needs to return the second publish action\n * e.g. chunks = [publish, edit, delete, edit, edit] it returns undefined\n */\n\nfunction getPreviousPublishAction(chunks: Chunk[]) {\n  let previousPublish: PublishChunk | null = null\n  // We need to iterate from the end to the start of the list\n  for (let index = chunks.length - 1; index >= 0; index--) {\n    const chunk = chunks[index]\n    if (isPublishChunk(chunk)) {\n      previousPublish = chunk\n      break\n    }\n    if (chunk.type === 'editDraft') {\n      continue\n    } else break\n  }\n\n  return previousPublish\n}\nexport type ChunksWithCollapsedDrafts = NonPublishChunk | PublishChunk\n\n/**\n * Takes an array of chunks and adds them metadata necessary for the timeline view.\n * for draft chunks, it will add the parentId of the published chunk if this draft action is now published\n * for published, it will add the children array and the collaborators array\n */\nexport function addChunksMetadata(chunks: Chunk[]): ChunksWithCollapsedDrafts[] {\n  const result: ChunksWithCollapsedDrafts[] = []\n\n  for (const chunk of chunks) {\n    if (isPublishChunk(chunk)) {\n      result.push({\n        ...chunk,\n        type: 'publish',\n        children: [],\n        collaborators: new Set(), // Initialize the collaborators array\n      })\n      continue\n    }\n    if (isNonPublishChunk(chunk)) {\n      const previousPublish = getPreviousPublishAction(result)\n      if (chunk.type === 'editDraft' && previousPublish?.type === 'publish') {\n        Array.from(chunk.authors).forEach((id) => {\n          previousPublish.collaborators.add(id)\n        })\n        previousPublish.children.push(chunk.id)\n        result.push({\n          ...chunk,\n          parentId: previousPublish.id,\n        })\n        continue\n      }\n    }\n    if (isNonPublishChunk(chunk)) {\n      result.push(chunk)\n    }\n  }\n\n  return result\n}\n","import {Box, Text} from '@sanity/ui'\nimport {useCallback, useEffect, useMemo, useState} from 'react'\nimport {\n  type Chunk,\n  CommandList,\n  type CommandListRenderItemCallback,\n  LoadingBlock,\n  useTranslation,\n} from 'sanity'\n\nimport {ExpandableTimelineItemButton} from './expandableTimelineItemButton'\nimport {ListWrapper, Root, StackWrapper} from './timeline.styled'\nimport {TimelineItem} from './timelineItem'\nimport {\n  addChunksMetadata,\n  type ChunksWithCollapsedDrafts,\n  isNonPublishChunk,\n  isPublishChunk,\n} from './utils'\n\ninterface TimelineProps {\n  chunks: Chunk[]\n  hasMoreChunks: boolean | null\n  lastChunk?: Chunk | null\n  onLoadMore: () => void\n  onSelect: (chunk: Chunk) => void\n  /**\n   * The list needs a predefined max height for the scroller to work.\n   */\n  listMaxHeight?: string\n}\n\nexport const TIMELINE_LIST_WRAPPER_ID = 'timeline-list-wrapper'\n\nexport const Timeline = ({\n  chunks,\n  hasMoreChunks,\n  lastChunk: selectedChunk,\n  onLoadMore,\n  onSelect,\n  listMaxHeight = 'calc(100vh - 280px)',\n}: TimelineProps) => {\n  const [mounted, setMounted] = useState(false)\n  const {t} = useTranslation('studio')\n  const selectedChunkId = selectedChunk?.id\n  const chunksWithMetadata = useMemo(() => addChunksMetadata(chunks), [chunks])\n\n  const [expandedParents, setExpandedParents] = useState<Set<string>>(() => {\n    if (selectedChunkId) {\n      // If the selected chunk is a draft, we need to expand its parent\n      const selected = chunksWithMetadata.find((chunk) => chunk.id === selectedChunkId)\n      if (selected && isNonPublishChunk(selected) && selected.parentId) {\n        return new Set([selected.parentId])\n      }\n    }\n    return new Set()\n  })\n\n  useEffect(() => {\n    // This effect ensures that when we reload the timeline with a selected draft, we expand its parent.\n    if (selectedChunkId) {\n      const selected = chunksWithMetadata.find((chunk) => chunk.id === selectedChunkId)\n      if (selected && isNonPublishChunk(selected) && selected.parentId) {\n        const parentId = selected.parentId\n        setExpandedParents((prev) => {\n          if (prev.has(parentId)) return prev\n          const next = new Set(prev)\n          next.add(parentId)\n          return next\n        })\n      }\n    }\n  }, [chunksWithMetadata, selectedChunkId])\n\n  const filteredChunks = useMemo(() => {\n    return chunksWithMetadata.filter((chunk) => {\n      if (isPublishChunk(chunk) || !chunk.parentId) return true\n      // If the chunk has a parent id keep it hidden until the parent is expanded.\n      return expandedParents.has(chunk.parentId)\n    })\n  }, [chunksWithMetadata, expandedParents])\n\n  useEffect(() => {\n    // This effect ensures that we load more chunks if the list is not long enough.\n    // This could happen if a parent chunk has multiple drafts, so you could end with a list of 50 transactions but only\n    // 1 parent chunk, the publish, which squashed all the changes.\n    // In that case, users will see the loading block at the bottom, but nothing will really be happening. Because they haven't reach the end of the list.\n    if (filteredChunks.length < 16 && hasMoreChunks) {\n      onLoadMore()\n    }\n  }, [filteredChunks, hasMoreChunks, onLoadMore])\n\n  const handleExpandParent = useCallback(\n    (parentId: string) => () =>\n      setExpandedParents((prev) => {\n        const next = new Set(prev)\n\n        if (prev.has(parentId)) next.delete(parentId)\n        else next.add(parentId)\n\n        return next\n      }),\n    [],\n  )\n\n  const selectedIndex = useMemo(\n    () =>\n      selectedChunkId ? filteredChunks.findIndex((chunk) => chunk.id === selectedChunkId) : -1,\n    [selectedChunkId, filteredChunks],\n  )\n  const handleSelectChunk = useCallback(\n    (chunk: ChunksWithCollapsedDrafts) => {\n      const timelineChunk = chunks.find((c) => c.id === chunk.id)\n      if (timelineChunk) onSelect(timelineChunk)\n      else {\n        console.error('TimelineItem: chunk not found')\n        onSelect(chunk)\n      }\n    },\n    [chunks, onSelect],\n  )\n\n  const renderItem = useCallback<CommandListRenderItemCallback<(typeof filteredChunks)[number]>>(\n    (chunk, {activeIndex}) => {\n      const isFirst = activeIndex === 0\n\n      return (\n        <Box\n          paddingBottom={1}\n          paddingTop={isFirst ? 1 : 0}\n          paddingRight={1}\n          paddingLeft={isNonPublishChunk(chunk) && chunk.parentId ? 4 : 1}\n        >\n          <TimelineItem\n            chunk={chunk}\n            isSelected={selectedChunkId === chunk.id}\n            onSelect={handleSelectChunk}\n            collaborators={isPublishChunk(chunk) ? chunk.collaborators : undefined}\n            optionsMenu={\n              isPublishChunk(chunk) && chunk.children.length > 0 ? (\n                <ExpandableTimelineItemButton\n                  isExpanded={expandedParents.has(chunk.id)}\n                  onExpand={handleExpandParent(chunk.id)}\n                />\n              ) : null\n            }\n          />\n          {activeIndex === filteredChunks.length - 1 && hasMoreChunks && <LoadingBlock />}\n        </Box>\n      )\n    },\n    [\n      expandedParents,\n      filteredChunks.length,\n      handleExpandParent,\n      handleSelectChunk,\n      hasMoreChunks,\n      selectedChunkId,\n    ],\n  )\n\n  useEffect(() => setMounted(true), [])\n\n  return (\n    <Root\n      /**\n       * We delay initial rendering if `selectedIndex` is present.\n       * This is a _temporary_ workaround to allow the virtual <CommandList>\n       * to scroll to a specific index prior to being displayed.\n       *\n       * Without this, there'll be a noticeable 'flash' where the virtual list\n       * will render with its child items at the top and then scroll into position.\n       */\n      $visible={!selectedIndex || mounted}\n      data-ui=\"timeline\"\n    >\n      {filteredChunks.length === 0 && (\n        <StackWrapper padding={3} space={3}>\n          <Text size={1} weight=\"medium\">\n            {t('timeline.error.no-document-history-title')}\n          </Text>\n          <Text muted size={1}>\n            {t('timeline.error.no-document-history-description')}\n          </Text>\n        </StackWrapper>\n      )}\n\n      {filteredChunks.length > 0 && (\n        <ListWrapper direction=\"column\" $maxHeight={listMaxHeight} id={TIMELINE_LIST_WRAPPER_ID}>\n          <CommandList\n            activeItemDataAttr=\"data-hovered\"\n            ariaLabel={t('timeline.list.aria-label')}\n            autoFocus=\"list\"\n            initialIndex={selectedIndex}\n            initialScrollAlign=\"center\"\n            itemHeight={57}\n            items={filteredChunks}\n            onEndReached={onLoadMore}\n            onEndReachedIndexOffset={20}\n            overscan={5}\n            renderItem={renderItem}\n            wrapAround={false}\n          />\n        </ListWrapper>\n      )}\n    </Root>\n  )\n}\n\nTimeline.displayName = 'Timeline'\n","import {ErrorOutlineIcon} from '@sanity/icons'\nimport {Flex, Stack} from '@sanity/ui'\nimport {TextWithTone, useTranslation} from 'sanity'\n\nexport function TimelineError({versionError}: {versionError?: boolean}) {\n  const {t} = useTranslation('studio')\n\n  return (\n    <Flex align=\"flex-start\" gap={3} padding={4}>\n      <TextWithTone tone=\"critical\">\n        <ErrorOutlineIcon />\n      </TextWithTone>\n      <Stack space={4}>\n        <TextWithTone size={1} tone=\"critical\" weight=\"medium\">\n          {versionError\n            ? t('timeline.error.load-document-changes-version-title')\n            : t('timeline.error.load-document-changes-title')}\n        </TextWithTone>\n        <TextWithTone size={1} tone=\"critical\">\n          {versionError\n            ? t('timeline.error.load-document-changes-version-description')\n            : t('timeline.error.load-document-changes-description')}\n        </TextWithTone>\n      </Stack>\n    </Flex>\n  )\n}\n","import {ChevronDownIcon} from '@sanity/icons'\nimport {\n  Flex,\n  type Placement,\n  PortalProvider,\n  useClickOutsideEvent,\n  useGlobalKeyDown,\n  useToast,\n} from '@sanity/ui'\nimport {useCallback, useMemo, useState} from 'react'\nimport {type Chunk, useTimelineSelector, useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Button, Popover} from '../../../../ui-components'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {Timeline} from './timeline'\nimport {TimelineError} from './TimelineError'\nimport {TIMELINE_ITEM_I18N_KEY_MAPPING} from './timelineI18n'\n\ninterface TimelineMenuProps {\n  chunk: Chunk | null\n  mode: 'rev' | 'since'\n  placement?: Placement\n}\n\nconst Root = styled(Popover)`\n  overflow: hidden;\n  overflow: clip;\n`\n\nexport const TIMELINE_MENU_PORTAL = 'timeline-menu'\n\nexport function TimelineMenu({chunk, mode, placement}: TimelineMenuProps) {\n  const {setTimelineRange, timelineError, ready, timelineStore} = useDocumentPane()\n  const [open, setOpen] = useState(false)\n  const [button, setButton] = useState<HTMLButtonElement | null>(null)\n  const [popoverRef, setPopoverRef] = useState<HTMLElement | null>(null)\n\n  const toast = useToast()\n\n  const chunks = useTimelineSelector(timelineStore, (state) => state.chunks)\n  const loading = useTimelineSelector(timelineStore, (state) => state.isLoading)\n  const hasMoreChunks = useTimelineSelector(timelineStore, (state) => state.hasMoreChunks)\n  const realRevChunk = useTimelineSelector(timelineStore, (state) => state.realRevChunk)\n  const sinceTime = useTimelineSelector(timelineStore, (state) => state.sinceTime)\n\n  const {t} = useTranslation('studio')\n\n  const handleOpen = useCallback(() => {\n    setOpen(true)\n  }, [])\n\n  const handleClose = useCallback(() => {\n    setOpen(false)\n  }, [])\n\n  const handleGlobalKeyDown = useCallback(\n    (event: KeyboardEvent) => {\n      if (open && (event.key === 'Escape' || event.key === 'Tab')) {\n        handleClose()\n        button?.focus()\n      }\n    },\n    [button, handleClose, open],\n  )\n\n  useGlobalKeyDown(handleGlobalKeyDown)\n  useClickOutsideEvent(open && handleClose, () => [button, popoverRef])\n\n  const selectRev = useCallback(\n    (revChunk: Chunk) => {\n      try {\n        const [sinceId, revId] = timelineStore?.findRangeForRev(revChunk) || [null, null]\n        setTimelineRange(sinceId, revId)\n      } catch (err) {\n        toast.push({\n          closable: true,\n          description: err.message,\n          status: 'error',\n          title: t('timeline.error.unable-to-load-revision'),\n        })\n      }\n    },\n    [setTimelineRange, t, timelineStore, toast],\n  )\n\n  const selectSince = useCallback(\n    (sinceChunk: Chunk) => {\n      try {\n        const [sinceId, revId] = timelineStore?.findRangeForSince(sinceChunk) || [null, null]\n        setTimelineRange(sinceId, revId)\n      } catch (err) {\n        toast.push({\n          closable: true,\n          description: err.message,\n          status: 'error',\n          title: t('timeline.error.unable-to-load-revision'),\n        })\n      }\n    },\n    [setTimelineRange, t, timelineStore, toast],\n  )\n\n  const handleLoadMore = useCallback(() => {\n    if (!loading) {\n      timelineStore?.loadMore()\n    }\n  }, [loading, timelineStore])\n\n  const content = useMemo(() => {\n    if (timelineError) return <TimelineError />\n\n    if (mode === 'rev') {\n      return (\n        <Timeline\n          chunks={chunks}\n          hasMoreChunks={hasMoreChunks}\n          lastChunk={realRevChunk}\n          onLoadMore={handleLoadMore}\n          onSelect={selectRev}\n        />\n      )\n    }\n\n    const filteredChunks = realRevChunk\n      ? chunks.filter((c) => c.index < realRevChunk.index)\n      : chunks\n    return (\n      <Timeline\n        chunks={filteredChunks}\n        hasMoreChunks={hasMoreChunks}\n        lastChunk={sinceTime}\n        onLoadMore={handleLoadMore}\n        onSelect={selectSince}\n      />\n    )\n  }, [\n    chunks,\n    handleLoadMore,\n    hasMoreChunks,\n    mode,\n    realRevChunk,\n    selectRev,\n    selectSince,\n    sinceTime,\n    timelineError,\n  ])\n\n  const formatParams = {\n    timestamp: {dateStyle: 'medium', timeStyle: 'short'},\n  }\n\n  const revLabel = chunk\n    ? t(TIMELINE_ITEM_I18N_KEY_MAPPING[chunk.type], {\n        context: 'timestamp',\n        timestamp: new Date(chunk?.endTimestamp),\n        formatParams,\n      })\n    : t('timeline.latest-revision')\n\n  const sinceLabel = chunk\n    ? t('timeline.since', {\n        timestamp: new Date(chunk?.endTimestamp),\n        formatParams,\n      })\n    : t('timeline.since-version-missing')\n\n  const buttonLabel = mode === 'rev' ? revLabel : sinceLabel\n  const portalElements = useMemo(() => ({[TIMELINE_MENU_PORTAL]: popoverRef}), [popoverRef])\n\n  return (\n    <PortalProvider __unstable_elements={portalElements}>\n      <Root\n        data-testid=\"timeline-menu\"\n        constrainSize\n        content={open && content}\n        data-ui=\"versionMenu\"\n        open={open}\n        placement={placement}\n        matchReferenceWidth\n        portal\n        ref={setPopoverRef}\n      >\n        <Flex width={'fill'}>\n          <Button\n            data-testid={open ? 'timeline-menu-close-button' : 'timeline-menu-open-button'}\n            disabled={!ready}\n            mode=\"ghost\"\n            onClick={open ? handleClose : handleOpen}\n            ref={setButton}\n            selected={open}\n            width=\"fill\"\n            tooltipProps={null}\n            justify={'space-between'}\n            style={{\n              maxWidth: '100%',\n            }}\n            iconRight={ChevronDownIcon}\n            text={ready ? buttonLabel : t('timeline.loading-history')}\n          />\n        </Flex>\n      </Root>\n    </PortalProvider>\n  )\n}\n","import {motion} from 'framer-motion'\nimport {type ComponentProps} from 'react'\nimport {keyframes, styled} from 'styled-components'\n\nconst StyledMotionPath = styled(motion.path)`\n  transform-origin: center;\n`\n\ntype MotionCircleProps = Omit<ComponentProps<typeof motion.circle>, 'd'>\ntype MotionPathProps = Omit<ComponentProps<typeof motion.path>, 'd' | 'ref'>\n\nconst Circle = (props: MotionCircleProps) => (\n  <motion.circle fill=\"none\" r=\"8\" cx=\"12.5\" cy=\"12.5\" strokeWidth=\"1.2\" {...props} />\n)\nconst Arrows = (props: MotionPathProps) => (\n  <StyledMotionPath\n    fill=\"none\"\n    d=\"M14 17.5619L11.5 20.5L14.5 23.0619M11 7.43811L13.5 4.50001L10.5 1.93811\"\n    {...props}\n  />\n)\nconst Checkmark = (props: MotionPathProps) => (\n  <motion.path d=\"M9.5 12.1316L11.7414 14.5L16 10\" {...props} />\n)\n\nconst rotateAnimation = keyframes`\n  0% {\n    transform: rotate(0);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`\nconst RotateGroup = styled.g`\n  transform-origin: center;\n\n  &[data-rotate] {\n    animation: ${rotateAnimation} 1s ease-in-out infinite;\n  }\n`\n\nconst root = {\n  syncing: {\n    scale: 1,\n    transition: {\n      duration: 0,\n    },\n  },\n  saved: {\n    scale: [1, 0.8, 1.2, 0.9, 1.1, 0.95, 1.05, 0.99, 1],\n    transition: {\n      duration: 0.5,\n      delay: 0.2,\n    },\n  },\n  changes: {transition: {duration: 0}},\n}\n\nconst circle = {\n  syncing: {\n    strokeDasharray: '0, 0, 23, 3, 23, 3',\n    strokeDashoffset: 10,\n    opacity: 1,\n    transition: {\n      duration: 0,\n    },\n  },\n  saved: {\n    strokeDasharray: '0, 0, 23, 0, 23, 0',\n    strokeDashoffset: 10,\n    opacity: 1,\n    transition: {\n      duration: 0.2,\n    },\n  },\n  changes: {\n    strokeDasharray: '0, 60, 23, 0, 23, 0',\n    strokeDashoffset: 0,\n    opacity: 0,\n    transition: {\n      duration: 0.5,\n    },\n  },\n}\n\nconst arrows = {\n  syncing: {\n    opacity: 1,\n    transition: {\n      duration: 0,\n    },\n  },\n  saved: {\n    opacity: 0,\n    transition: {\n      duration: 0.2,\n    },\n  },\n  changes: {\n    opacity: 0,\n  },\n}\n\nconst checkmark = {\n  syncing: {\n    pathLength: 0,\n    transition: {duration: 0},\n  },\n  saved: {\n    pathLength: 1,\n    transition: {\n      delay: 0.4,\n      duration: 0.3,\n    },\n  },\n  changes: {\n    pathLength: 0,\n    transition: {\n      duration: 0.2,\n    },\n  },\n}\n\ninterface AnimatedStatusIconProps {\n  status?: 'changes' | 'saved' | 'syncing'\n}\n\nexport function AnimatedStatusIcon(props: AnimatedStatusIconProps) {\n  const {status} = props\n\n  if (!status) {\n    return null\n  }\n\n  return (\n    <svg\n      width=\"1em\"\n      height=\"1em\"\n      viewBox=\"0 0 25 25\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"1.2\"\n      data-sanity-icon=\"animated-status-icon\"\n    >\n      <motion.g variants={root} initial={status} animate={status}>\n        <RotateGroup data-rotate={status === 'changes' ? undefined : ''}>\n          <Arrows variants={arrows} initial={status} animate={status} />\n          <Circle variants={circle} initial={status} animate={status} />\n        </RotateGroup>\n        <Checkmark variants={checkmark} initial={status} animate={status} />\n      </motion.g>\n    </svg>\n  )\n}\n","import {type ButtonTone, Flex, Text} from '@sanity/ui'\nimport {TextWithTone, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {AnimatedStatusIcon} from './AnimatedStatusIcon'\n\ntype StatusType = 'saved' | 'syncing'\ninterface ReviewChangesButtonProps {\n  status?: StatusType\n}\n\nconst STATUS_DICTIONARY: Record<StatusType, {i18nKey: string; tone: ButtonTone}> = {\n  saved: {\n    i18nKey: 'status-bar.document-status-pulse.status.saved.text',\n    tone: 'positive',\n  },\n  syncing: {\n    i18nKey: 'status-bar.document-status-pulse.status.syncing.text',\n    tone: 'default',\n  },\n}\n\nexport const DocumentStatusPulse = (props: ReviewChangesButtonProps) => {\n  const {status} = props\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (status !== 'saved' && status !== 'syncing') {\n    return null\n  }\n\n  const currentStatus = STATUS_DICTIONARY[status]\n\n  return (\n    <Flex align=\"center\" gap={2} data-testid=\"pane-footer-document-status-pulse\">\n      <TextWithTone size={1} tone={currentStatus.tone}>\n        <AnimatedStatusIcon status={status} />\n      </TextWithTone>\n\n      <Text muted size={1}>\n        {t(currentStatus.i18nKey)}\n      </Text>\n    </Flex>\n  )\n}\n","import {\n  Box,\n  // eslint-disable-next-line no-restricted-imports\n  Button,\n  Flex,\n  Skeleton,\n  Text,\n} from '@sanity/ui'\nimport {AnimatePresence, motion} from 'framer-motion'\nimport {useEffect, useLayoutEffect, useMemo, useState} from 'react'\nimport {\n  AvatarSkeleton,\n  isPublishedPerspective,\n  TIMELINE_ITEM_I18N_KEY_MAPPING,\n  useEvents,\n  usePerspective,\n  UserAvatar,\n  useRelativeTime,\n  useSource,\n  useSyncState,\n  useTimelineSelector,\n  useTranslation,\n} from 'sanity'\n\nimport {HISTORY_INSPECTOR_NAME} from '../constants'\nimport {TIMELINE_ITEM_I18N_KEY_MAPPING as TIMELINE_ITEM_I18N_KEY_MAPPING_LEGACY} from '../timeline'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {DocumentStatusPulse} from './DocumentStatusPulse'\n\nconst RELATIVE_TIME_OPTIONS = {\n  minimal: true,\n  useTemporalPhrase: true,\n} as const\n\nconst MotionButton = motion.create(Button)\nconst MotionBox = motion.create(Box)\n\nconst ButtonSkeleton = () => {\n  return (\n    <Flex align=\"center\" gap={3} paddingLeft={1} paddingRight={2} paddingY={2}>\n      <div style={{margin: -5}}>\n        <AvatarSkeleton $size={0} animated />\n      </div>\n      <Skeleton animated style={{width: '80px', height: '15px'}} radius={2} />\n    </Flex>\n  )\n}\n\nconst DocumentStatusButton = ({\n  author,\n  translationKey,\n  timestamp = '',\n}: {\n  author: string\n  translationKey: string\n  timestamp?: string\n}) => {\n  const {onHistoryOpen, inspector, onHistoryClose} = useDocumentPane()\n  const {t} = useTranslation()\n  const relativeTime = useRelativeTime(timestamp, RELATIVE_TIME_OPTIONS)\n\n  return (\n    <MotionButton\n      data-testid=\"pane-footer-document-status\"\n      animate={{opacity: 1}}\n      initial={{opacity: 0}}\n      exit={{opacity: 0}}\n      mode=\"bleed\"\n      onClick={inspector?.name === HISTORY_INSPECTOR_NAME ? onHistoryClose : onHistoryOpen}\n      padding={2}\n      muted\n    >\n      <Flex align=\"center\" flex=\"none\" gap={3}>\n        {author && (\n          <div style={{margin: -5}}>\n            <UserAvatar user={author} size={0} />\n          </div>\n        )}\n        <Text muted size={1}>\n          {t(translationKey)} {relativeTime}\n        </Text>\n      </Flex>\n    </MotionButton>\n  )\n}\n\nconst FallbackStatus = () => {\n  const {editState} = useDocumentPane()\n  const {selectedPerspective} = usePerspective()\n\n  const status = useMemo(() => {\n    if (isPublishedPerspective(selectedPerspective) && editState?.published?._updatedAt) {\n      return {\n        translationKey: TIMELINE_ITEM_I18N_KEY_MAPPING.published.createDocumentVersion,\n        timestamp: editState.published._updatedAt,\n      }\n    }\n    if (editState?.version?._updatedAt) {\n      return {\n        translationKey:\n          editState?.version?._updatedAt === editState?.version?._createdAt\n            ? TIMELINE_ITEM_I18N_KEY_MAPPING.version.createDocumentVersion\n            : TIMELINE_ITEM_I18N_KEY_MAPPING.version.editDocumentVersion,\n        timestamp: editState.version._updatedAt,\n      }\n    }\n    if (editState?.draft?._updatedAt) {\n      return {\n        translationKey:\n          editState?.draft?._updatedAt === editState?.draft?._createdAt\n            ? TIMELINE_ITEM_I18N_KEY_MAPPING.draft.createDocumentVersion\n            : TIMELINE_ITEM_I18N_KEY_MAPPING.draft.editDocumentVersion,\n        timestamp: editState.draft._updatedAt,\n      }\n    }\n    return null\n  }, [\n    selectedPerspective,\n    editState?.published?._updatedAt,\n    editState?.version?._updatedAt,\n    editState?.version?._createdAt,\n    editState?.draft?._updatedAt,\n    editState?.draft?._createdAt,\n  ])\n  if (!status) {\n    return null\n  }\n  return (\n    <DocumentStatusButton\n      author=\"\"\n      translationKey={status.translationKey}\n      timestamp={status.timestamp}\n    />\n  )\n}\n\nconst EventsStatus = () => {\n  const {events, loading} = useEvents()\n  const event = events?.[0]\n\n  if (!event && loading) {\n    return <ButtonSkeleton />\n  }\n  if (!event) {\n    return <FallbackStatus />\n  }\n\n  return (\n    <DocumentStatusButton\n      author={event.author}\n      translationKey={TIMELINE_ITEM_I18N_KEY_MAPPING[event.documentVariantType][event.type]}\n      timestamp={event.timestamp}\n    />\n  )\n}\n\nconst TimelineStatus = () => {\n  const {timelineStore} = useDocumentPane()\n  const chunks = useTimelineSelector(timelineStore, (state) => state.chunks)\n  const loading = useTimelineSelector(timelineStore, (state) => state.isLoading)\n  const event = chunks?.[0]\n\n  if (!event && loading) {\n    return <ButtonSkeleton />\n  }\n  if (!event) {\n    return <FallbackStatus />\n  }\n\n  const author = Array.from(event.authors)[0]\n  return (\n    <DocumentStatusButton\n      author={author}\n      translationKey={TIMELINE_ITEM_I18N_KEY_MAPPING_LEGACY[event.type]}\n      timestamp={event.endTimestamp}\n    />\n  )\n}\n\nconst SYNCING_TIMEOUT = 1000\nconst SAVED_TIMEOUT = 3000\n\nexport function DocumentStatusLine() {\n  const {documentId, documentType, editState, value} = useDocumentPane()\n  const [status, setStatus] = useState<'saved' | 'syncing' | null>(null)\n  const source = useSource()\n  const eventsEnabled = source.beta?.eventsAPI?.documents\n\n  const syncState = useSyncState(documentId, documentType, editState?.release)\n\n  const lastUpdated = value?._updatedAt\n\n  // eslint-disable-next-line consistent-return\n  useEffect(() => {\n    // Schedule an update to set the status to 'saved' when status changed to 'syncing.\n    // We use `syncState.isSyncing` here to avoid the status being set to 'saved' when the document is syncing.\n    if (status === 'syncing' && !syncState.isSyncing) {\n      const timerId = setTimeout(() => setStatus('saved'), SYNCING_TIMEOUT)\n      return () => clearTimeout(timerId)\n    }\n    // Schedule an update to clear the status when status changed to 'saved'\n    if (status === 'saved') {\n      const timerId = setTimeout(() => setStatus(null), SAVED_TIMEOUT)\n      return () => clearTimeout(timerId)\n    }\n  }, [status, lastUpdated, syncState.isSyncing])\n\n  // Clear the status when documentId changes to make sure we don't show the wrong status when opening a new document\n  useLayoutEffect(() => {\n    setStatus(null)\n  }, [documentId])\n\n  // Set status to 'syncing' when lastUpdated changes and we go from not syncing to syncing\n  useLayoutEffect(() => {\n    if (syncState.isSyncing) {\n      setStatus('syncing')\n    }\n  }, [syncState.isSyncing, lastUpdated])\n\n  return (\n    <AnimatePresence>\n      {status ? (\n        <MotionBox\n          paddingLeft={2}\n          animate={{opacity: 1}}\n          initial={{opacity: 0}}\n          exit={{opacity: 0}}\n        >\n          <DocumentStatusPulse status={status || undefined} />\n        </MotionBox>\n      ) : (\n        <>{eventsEnabled ? <EventsStatus /> : <TimelineStatus />}</>\n      )}\n    </AnimatePresence>\n  )\n}\n","import {RestoreIcon} from '@sanity/icons'\nimport {Box, Flex, Text} from '@sanity/ui'\nimport {format} from 'date-fns'\nimport {Translate, useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {useDocumentPane} from '../useDocumentPane'\n\nexport const StatusText = styled(Text)`\n  color: var(--card-muted-fg-color);\n\n  em {\n    color: var(--card-fg-color);\n    font-weight: 500;\n    font-style: normal;\n  }\n`\n\nexport function RevisionStatusLine(): React.JSX.Element {\n  const {displayed, revisionNotFound} = useDocumentPane()\n  const {t} = useTranslation()\n  const date = displayed?._updatedAt || displayed?._createdAt\n\n  const message = {\n    name: 'revision',\n    text: date ? (\n      <Translate\n        t={t}\n        i18nKey=\"document-status.revision-from\"\n        values={{\n          date: format(new Date(date), `MMM d, yyyy '@' pp`),\n        }}\n      />\n    ) : null,\n    tone: 'caution',\n  }\n\n  return (\n    <>\n      <Flex flex={1} gap={3} padding={2}>\n        <Box flex=\"none\">\n          <Text size={1}>\n            <RestoreIcon />\n          </Text>\n        </Box>\n        <Box flex={1}>\n          <StatusText size={1} textOverflow=\"ellipsis\">\n            {revisionNotFound ? (\n              <Translate t={t} i18nKey=\"document-status.revision-not-found\" />\n            ) : (\n              message.text\n            )}\n          </StatusText>\n        </Box>\n      </Flex>\n    </>\n  )\n}\n","import {useLayoutEffect} from 'react'\nimport {resizeObserver} from 'sanity'\n\nexport function useResizeObserver({\n  element,\n  onResize,\n}: {\n  element?: HTMLDivElement | null\n  onResize: (event: ResizeObserverEntry) => void\n}): void {\n  useLayoutEffect(() => {\n    if (element) {\n      resizeObserver.observe(element, onResize)\n    }\n\n    return () => {\n      if (element) {\n        resizeObserver.unobserve(element)\n      }\n    }\n  }, [element, onResize])\n}\n","import {Card, Flex} from '@sanity/ui'\nimport {motion} from 'framer-motion'\nimport {type Ref, useCallback, useMemo, useState} from 'react'\nimport {\n  type CreateLinkMetadata,\n  isPublishedPerspective,\n  isReleaseDocument,\n  isSanityCreateLinked,\n  usePerspective,\n  useSanityCreateConfig,\n} from 'sanity'\n\nimport {usePaneRouter} from '../../../components'\nimport {SpacerButton} from '../../../components/spacerButton'\nimport {DOCUMENT_PANEL_PORTAL_ELEMENT} from '../../../constants'\nimport {EMPTY_PARAMS} from '../constants'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {useDocumentTitle} from '../useDocumentTitle'\nimport {DocumentBadges} from './DocumentBadges'\nimport {DocumentStatusBarActions, HistoryStatusBarActions} from './DocumentStatusBarActions'\nimport {DocumentStatusLine} from './DocumentStatusLine'\nimport {RevisionStatusLine} from './RevisionStatusLine'\nimport {useResizeObserver} from './useResizeObserver'\n\nexport interface DocumentStatusBarProps {\n  actionsBoxRef?: Ref<HTMLDivElement>\n  createLinkMetadata?: CreateLinkMetadata\n}\n\nconst CONTAINER_BREAKPOINT = 480 // px\n\nconst AnimatedCard = motion.create(Card)\n\nexport function DocumentStatusBar(props: DocumentStatusBarProps) {\n  const {actionsBoxRef, createLinkMetadata} = props\n  const {editState, onChange: onDocumentChange, revisionNotFound} = useDocumentPane()\n  const {params = EMPTY_PARAMS} = usePaneRouter()\n  const {selectedPerspective} = usePerspective()\n  const {title} = useDocumentTitle()\n\n  const CreateLinkedActions = useSanityCreateConfig().components?.documentLinkedActions\n\n  const showingRevision = Boolean(params.rev)\n  const [collapsed, setCollapsed] = useState<boolean | null>(null)\n  const [rootElement, setRootElement] = useState<HTMLDivElement | null>(null)\n\n  const handleResize = useCallback((event: ResizeObserverEntry) => {\n    setCollapsed(event.contentRect.width < CONTAINER_BREAKPOINT)\n  }, [])\n\n  useResizeObserver({element: rootElement, onResize: handleResize})\n\n  const shouldRender = useMemo(() => {\n    const isReady = Boolean(editState?.ready && typeof collapsed === 'boolean')\n    if (selectedPerspective) {\n      if (isPublishedPerspective(selectedPerspective)) {\n        return isReady && Boolean(editState?.published)\n      }\n      if (isReleaseDocument(selectedPerspective)) {\n        return isReady && Boolean(editState?.version)\n      }\n    }\n    return isReady\n  }, [collapsed, editState?.published, editState?.ready, editState?.version, selectedPerspective])\n\n  let actions: React.JSX.Element | null = null\n  if (createLinkMetadata && isSanityCreateLinked(createLinkMetadata) && CreateLinkedActions) {\n    actions = (\n      <CreateLinkedActions\n        metadata={createLinkMetadata}\n        panelPortalElementId={DOCUMENT_PANEL_PORTAL_ELEMENT}\n        onDocumentChange={onDocumentChange}\n        documentTitle={title}\n      />\n    )\n  } else if (showingRevision) {\n    actions = <HistoryStatusBarActions />\n  } else {\n    actions = <DocumentStatusBarActions />\n  }\n\n  if (showingRevision && revisionNotFound) {\n    return null\n  }\n\n  return (\n    <AnimatedCard\n      key={showingRevision ? 'revision' : 'published'}\n      initial={{opacity: 0.2}}\n      animate={{opacity: 1, transition: {duration: 0.3}}}\n      tone={showingRevision ? 'caution' : undefined}\n      radius={3}\n      ref={setRootElement}\n      sizing=\"border\"\n      padding={2}\n    >\n      {shouldRender && (\n        <Flex\n          align=\"stretch\"\n          gap={1}\n          justify=\"space-between\"\n          paddingLeft={showingRevision ? 0 : 1}\n          paddingRight={showingRevision ? 0 : 1}\n        >\n          <Flex align=\"center\" flex={1} gap={collapsed ? 2 : 3} wrap=\"wrap\" paddingRight={3}>\n            <Flex align=\"center\">\n              {showingRevision ? <RevisionStatusLine /> : <DocumentStatusLine />}\n              <SpacerButton />\n            </Flex>\n            <DocumentBadges />\n          </Flex>\n\n          <Flex\n            align=\"flex-start\"\n            justify=\"flex-end\"\n            ref={actionsBoxRef}\n            style={{flexShrink: 0, marginLeft: 'auto'}}\n          >\n            <SpacerButton />\n            {actions}\n          </Flex>\n        </Flex>\n      )}\n    </AnimatedCard>\n  )\n}\n","import {isHotkey} from 'is-hotkey-esm'\nimport {\n  type ElementType,\n  type HTMLProps,\n  memo,\n  type Ref,\n  useCallback,\n  useMemo,\n  useState,\n} from 'react'\nimport {type DocumentActionDescription, type DocumentActionProps, LegacyLayerProvider} from 'sanity'\n\nimport {RenderActionCollectionState} from '../../../components'\nimport {ActionStateDialog} from '../statusBar'\nimport {useDocumentPane} from '../useDocumentPane'\n\nexport interface KeyboardShortcutResponderProps {\n  actionsBoxElement: HTMLElement | null\n  activeIndex: number\n  as?: ElementType\n  currentMinWidth?: number\n  flex?: number\n  id: string\n  minWidth?: number\n  onActionStart: (index: number) => void\n  rootRef: Ref<HTMLDivElement>\n  states: DocumentActionDescription[]\n}\n\nconst KeyboardShortcutResponder = memo(function KeyboardShortcutResponder(\n  props: KeyboardShortcutResponderProps & Omit<HTMLProps<HTMLDivElement>, 'as' | 'height'>,\n) {\n  const {\n    actionsBoxElement,\n    activeIndex,\n    as: As = 'div',\n    children,\n    id,\n    onActionStart,\n    onKeyDown,\n    rootRef,\n    states,\n    ...rest\n  } = props\n\n  const activeAction = states[activeIndex]\n\n  const handleKeyDown = useCallback(\n    (event: any) => {\n      const matchingStates = states.filter(\n        (state) => state.shortcut && isHotkey(state.shortcut, event),\n      )\n\n      const matchingState = matchingStates[0]\n\n      if (matchingStates.length > 1) {\n        console.warn(\n          `Keyboard shortcut conflict: More than one document action matches the shortcut \"${matchingState.shortcut}\"`,\n        )\n      }\n\n      if (matchingState && !matchingState.disabled && matchingState.onHandle) {\n        event.preventDefault()\n        matchingState.onHandle()\n        onActionStart(states.indexOf(matchingState))\n        return\n      }\n\n      if (onKeyDown) {\n        onKeyDown(event)\n      }\n    },\n    [onActionStart, onKeyDown, states],\n  )\n\n  return (\n    <As id={id} onKeyDown={handleKeyDown} tabIndex={-1} {...rest} ref={rootRef}>\n      {children}\n      {activeAction && activeAction.dialog && (\n        <LegacyLayerProvider zOffset=\"paneFooter\">\n          <ActionStateDialog dialog={activeAction.dialog} referenceElement={actionsBoxElement} />\n        </LegacyLayerProvider>\n      )}\n    </As>\n  )\n})\n\nexport interface DocumentActionShortcutsProps {\n  actionsBoxElement: HTMLElement | null\n  as?: ElementType\n  currentMinWidth?: number\n  debug?: boolean\n  flex: number\n  id: string\n  minWidth: number\n  rootRef: Ref<HTMLDivElement>\n}\n\nexport const DocumentActionShortcuts = memo(\n  (props: DocumentActionShortcutsProps & Omit<HTMLProps<HTMLDivElement>, 'as'>) => {\n    const {actionsBoxElement, as = 'div', children, ...rest} = props\n    const {actions, editState, isInitialValueLoading, revisionId} = useDocumentPane()\n    const [activeIndex, setActiveIndex] = useState(-1)\n\n    const onActionStart = useCallback((idx: number) => {\n      setActiveIndex(idx)\n    }, [])\n\n    const actionProps: DocumentActionProps | null = useMemo(\n      () =>\n        editState && {\n          ...editState,\n\n          // @todo: what to call here?\n          onComplete: () => undefined,\n\n          revision: revisionId || undefined,\n          initialValueResolved: !isInitialValueLoading,\n        },\n      [editState, isInitialValueLoading, revisionId],\n    )\n\n    const renderDocumentActionShortcuts = useCallback<\n      (props: {states: DocumentActionDescription[]}) => React.ReactNode\n    >(\n      ({states}) => (\n        <KeyboardShortcutResponder\n          {...rest}\n          activeIndex={activeIndex}\n          actionsBoxElement={actionsBoxElement}\n          as={as}\n          onActionStart={onActionStart}\n          states={states}\n        >\n          {children}\n        </KeyboardShortcutResponder>\n      ),\n      [actionsBoxElement, activeIndex, as, children, onActionStart, rest],\n    )\n\n    if (!actionProps || !actions) return null\n\n    return (\n      <RenderActionCollectionState actionProps={actionProps} actions={actions}>\n        {renderDocumentActionShortcuts}\n      </RenderActionCollectionState>\n    )\n  },\n)\n\nDocumentActionShortcuts.displayName = 'Memo(DocumentActionShortcuts)'\n","import {EarthAmericasIcon, JsonIcon, LinkIcon, TransferIcon} from '@sanity/icons'\nimport {\n  type DocumentIdStack,\n  type DocumentInspector,\n  type DocumentInspectorMenuItem,\n  type TFunction,\n} from 'sanity'\n\nimport {type PaneMenuItem, type StructureToolFeatures} from '../../types'\nimport {INSPECT_ACTION_PREFIX} from './constants'\n\ninterface GetMenuItemsParams {\n  currentInspector?: DocumentInspector\n  features: StructureToolFeatures\n  hasValue: boolean\n  inspectors: DocumentInspector[]\n  previewUrl?: string | null\n  documentIdStack?: DocumentIdStack\n  inspectorMenuItems: DocumentInspectorMenuItem[]\n  t: TFunction\n}\n\nfunction getInspectorItems({\n  currentInspector,\n  hasValue,\n  inspectors,\n  inspectorMenuItems,\n}: GetMenuItemsParams): PaneMenuItem[] {\n  return inspectors\n    .map((inspector, index) => {\n      const menuItem = inspectorMenuItems[index]\n\n      if (!menuItem || menuItem.hidden) return null\n\n      return {\n        action: `${INSPECT_ACTION_PREFIX}${inspector.name}`,\n        group: menuItem.showAsAction ? undefined : 'inspectors',\n        icon: menuItem.icon,\n        disabled: !hasValue,\n        selected: currentInspector?.name === inspector.name,\n        shortcut: menuItem.hotkeys?.join('+'),\n        showAsAction: menuItem.showAsAction,\n        title: menuItem.title,\n        tone: menuItem.tone,\n      }\n    })\n    .filter(Boolean) as PaneMenuItem[]\n}\n\nfunction getInspectItem({hasValue, t}: GetMenuItemsParams): PaneMenuItem {\n  return {\n    action: 'inspect',\n    group: 'inspectors',\n    title: t('document-inspector.menu-item.title'),\n    icon: JsonIcon,\n    disabled: !hasValue,\n    shortcut: 'Ctrl+Alt+I',\n  }\n}\n\nfunction getCompareVersionsItem({documentIdStack, t}: GetMenuItemsParams): PaneMenuItem | null {\n  const disabled = typeof documentIdStack?.previousId === 'undefined' && {\n    reason: t('compare-versions.menu-item.disabled-reason'),\n  }\n\n  return {\n    action: 'compareVersions',\n    group: 'inspectors',\n    title: t('compare-versions.menu-item.title'),\n    icon: TransferIcon,\n    disabled,\n  }\n}\n\nexport function getProductionPreviewItem({previewUrl, t}: GetMenuItemsParams): PaneMenuItem | null {\n  if (!previewUrl) return null\n\n  return {\n    action: 'production-preview',\n    group: 'links',\n    title: t('production-preview.menu-item.title'),\n    icon: EarthAmericasIcon,\n    shortcut: 'Ctrl+Alt+O',\n  }\n}\n\nexport function getMenuItems(params: GetMenuItemsParams): PaneMenuItem[] {\n  const inspectorItems = getInspectorItems(params)\n  const items = [\n    // Get production preview item\n    getProductionPreviewItem(params),\n    getCompareVersionsItem(params),\n  ].filter(Boolean) as PaneMenuItem[]\n\n  return [\n    // Always present document menu item to copy current url to clipboard\n    {\n      action: 'copy-document-url',\n      showAsAction: true,\n      title: params.t('action.copy-document-url.label'),\n      icon: LinkIcon,\n    },\n    ...inspectorItems,\n\n    // TODO: convert to inspector or document view?\n    getInspectItem(params),\n\n    ...items,\n  ]\n}\n","import {Card, Code, Stack, Text} from '@sanity/ui'\nimport {isDev, Translate, useTranslation} from 'sanity'\n\nimport {ErrorPane} from '../../error'\n\ninterface DocumentLayoutErrorProps {\n  currentMinWidth?: number\n  documentType?: string\n  minWidth?: number\n  paneKey: string\n  value?: Record<string, unknown>\n}\n\nexport function DocumentLayoutError(props: DocumentLayoutErrorProps) {\n  const {documentType, value, currentMinWidth, paneKey, minWidth} = props\n  const {t} = useTranslation()\n\n  return (\n    <ErrorPane\n      currentMinWidth={currentMinWidth}\n      flex={2.5}\n      minWidth={minWidth}\n      paneKey={paneKey}\n      title={\n        <Translate\n          t={t}\n          i18nKey=\"panes.document-pane.document-unknown-type.title\"\n          values={{documentType}}\n        />\n      }\n      tone=\"caution\"\n    >\n      <Stack space={4}>\n        {documentType && (\n          <Text as=\"p\">\n            <Translate\n              t={t}\n              i18nKey=\"panes.document-pane.document-unknown-type.text\"\n              values={{documentType}}\n            />\n          </Text>\n        )}\n\n        {!documentType && (\n          <Text as=\"p\">{t('panes.document-pane.document-unknown-type.without-schema.text')}</Text>\n        )}\n\n        {isDev && value && (\n          /* eslint-disable i18next/no-literal-string */\n          <>\n            <Text as=\"p\">Here is the JSON representation of the document:</Text>\n\n            <Card padding={3} overflow=\"auto\" radius={2} shadow={1} tone=\"inherit\">\n              <Code language=\"json\" size={[1, 1, 2]}>\n                {JSON.stringify(value, null, 2)}\n              </Code>\n            </Card>\n          </>\n          /* eslint-enable i18next/no-literal-string */\n        )}\n      </Stack>\n    </ErrorPane>\n  )\n}\n","import {DialogProvider, type DialogProviderProps, PortalProvider} from '@sanity/ui'\nimport {type Dispatch, type SetStateAction, useMemo} from 'react'\nimport {getSanityCreateLinkMetadata, useZIndex} from 'sanity'\n\nimport {TooltipDelayGroupProvider} from '../../../../ui-components/tooltipDelayGroupProvider/TooltipDelayGroupProvider'\nimport {PaneFooter} from '../../../components'\nimport {DOCUMENT_PANEL_PORTAL_ELEMENT} from '../../../constants'\nimport {DocumentStatusBar} from '../statusBar'\nimport {useDocumentPane} from '../useDocumentPane'\n\nconst DIALOG_PROVIDER_POSITION: DialogProviderProps['position'] = [\n  // We use the `position: fixed` for dialogs on narrower screens (first two media breakpoints).\n  'fixed',\n  'fixed',\n  // And we use the `position: absolute` strategy (within panes) on wide screens.\n  'absolute',\n]\n\nexport function DocumentLayoutFooter({\n  documentPanelPortalElement,\n  setFooterElement,\n  setActionsBoxElement,\n}: {\n  documentPanelPortalElement: HTMLElement | null\n  setFooterElement: Dispatch<SetStateAction<HTMLDivElement | null>>\n  setActionsBoxElement: Dispatch<SetStateAction<HTMLDivElement | null>>\n}) {\n  const zOffsets = useZIndex()\n\n  const {value} = useDocumentPane()\n  const portalElements = useMemo(\n    () => ({[DOCUMENT_PANEL_PORTAL_ELEMENT]: documentPanelPortalElement}),\n    [documentPanelPortalElement],\n  )\n\n  const createLinkMetadata = getSanityCreateLinkMetadata(value)\n  return (\n    // These providers are added because we want the dialogs in `DocumentStatusBar` to be scoped to the document pane\n    // The portal element comes from `DocumentPanel`.\n    <PortalProvider __unstable_elements={portalElements}>\n      <DialogProvider position={DIALOG_PROVIDER_POSITION} zOffset={zOffsets.portal}>\n        <PaneFooter ref={setFooterElement} padding={1}>\n          <TooltipDelayGroupProvider>\n            <DocumentStatusBar\n              actionsBoxRef={setActionsBoxElement}\n              createLinkMetadata={createLinkMetadata}\n            />\n          </TooltipDelayGroupProvider>\n        </PaneFooter>\n      </DialogProvider>\n    </PortalProvider>\n  )\n}\n","import {DialogProvider, type DialogProviderProps, Flex, useElementRect} from '@sanity/ui'\nimport {isHotkey} from 'is-hotkey-esm'\nimport {useCallback, useMemo, useState} from 'react'\nimport {\n  ChangeConnectorRoot,\n  type DocumentFieldActionNode,\n  type DocumentInspectorMenuItem,\n  FieldActionsProvider,\n  FieldActionsResolver,\n  GetFormValueProvider,\n  type Path,\n  useDocumentIdStack,\n  useGlobalCopyPasteElementHandler,\n  useTranslation,\n  useZIndex,\n} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Pane, usePaneLayout, usePaneRouter} from '../../../components'\nimport {structureLocaleNamespace} from '../../../i18n'\nimport {useStructureTool} from '../../../useStructureTool'\nimport {\n  DOCUMENT_INSPECTOR_MIN_WIDTH,\n  DOCUMENT_PANEL_INITIAL_MIN_WIDTH,\n  DOCUMENT_PANEL_MIN_WIDTH,\n} from '../constants'\nimport {DocumentInspectorMenuItemsResolver} from '../DocumentInspectorMenuItemsResolver'\nimport {DocumentOperationResults} from '../DocumentOperationResults'\nimport {DocumentPanel} from '../documentPanel'\nimport {DocumentPanelHeader} from '../documentPanel/header'\nimport {DocumentActionShortcuts} from '../keyboardShortcuts'\nimport {getMenuItems} from '../menuItems'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {DocumentLayoutError} from './DocumentLayoutError'\nimport {DocumentLayoutFooter} from './DocumentLayoutFooter'\n\nconst EMPTY_ARRAY: [] = []\n\nconst DIALOG_PROVIDER_POSITION: DialogProviderProps['position'] = [\n  // We use the `position: fixed` for dialogs on narrower screens (first two media breakpoints).\n  'fixed',\n  'fixed',\n  // And we use the `position: absolute` strategy (within panes) on wide screens.\n  'absolute',\n]\n\nconst StyledChangeConnectorRoot = styled(ChangeConnectorRoot)`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  min-height: 0;\n  min-width: 0;\n`\n\nexport function DocumentLayout() {\n  const {\n    changesOpen,\n    displayed,\n    documentId,\n    documentType,\n    editState,\n    fieldActions,\n    focusPath,\n    inspectOpen,\n    inspector,\n    inspectors,\n    onFocus,\n    onHistoryOpen,\n    onMenuAction,\n    onPathOpen,\n    paneKey,\n    schemaType,\n    value,\n    isInitialValueLoading,\n    ready,\n    previewUrl,\n  } = useDocumentPane()\n  const {params: paneParams} = usePaneRouter()\n  const {features} = useStructureTool()\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {collapsed: layoutCollapsed} = usePaneLayout()\n\n  const zOffsets = useZIndex()\n\n  const [rootElement, setRootElement] = useState<HTMLDivElement | null>(null)\n  const [footerElement, setFooterElement] = useState<HTMLDivElement | null>(null)\n  const [headerElement, setHeaderElement] = useState<HTMLDivElement | null>(null)\n\n  const [actionsBoxElement, setActionsBoxElement] = useState<HTMLDivElement | null>(null)\n  const [documentPanelPortalElement, setDocumentPanelPortalElement] = useState<HTMLElement | null>(\n    null,\n  )\n\n  useGlobalCopyPasteElementHandler({\n    element: rootElement,\n    focusPath,\n    value,\n  })\n\n  const [inspectorMenuItems, setInspectorMenuItems] = useState<DocumentInspectorMenuItem[]>([])\n  const [rootFieldActionNodes, setRootFieldActionNodes] = useState<DocumentFieldActionNode[]>([])\n\n  const footerRect = useElementRect(footerElement)\n  const headerRect = useElementRect(headerElement)\n  const footerHeight = footerRect?.height\n  const headerHeight = headerRect?.height\n  const currentMinWidth =\n    DOCUMENT_PANEL_INITIAL_MIN_WIDTH + (inspector ? DOCUMENT_INSPECTOR_MIN_WIDTH : 0)\n  const minWidth = DOCUMENT_PANEL_MIN_WIDTH + (inspector ? DOCUMENT_INSPECTOR_MIN_WIDTH : 0)\n\n  const currentInspector = useMemo(\n    () => inspectors?.find((i) => i.name === inspector?.name),\n    [inspectors, inspector?.name],\n  )\n\n  const documentIdStack = useDocumentIdStack({displayed, documentId, editState})\n\n  const hasValue = Boolean(value)\n\n  const menuItems = useMemo(\n    () =>\n      getMenuItems({\n        currentInspector,\n        features,\n        hasValue,\n        inspectorMenuItems,\n        inspectors,\n        previewUrl,\n        documentIdStack,\n        t,\n      }),\n    [\n      currentInspector,\n      documentIdStack,\n      features,\n      hasValue,\n      inspectorMenuItems,\n      inspectors,\n      previewUrl,\n      t,\n    ],\n  )\n\n  const handleKeyUp = useCallback(\n    (event: React.KeyboardEvent<HTMLDivElement>) => {\n      for (const item of menuItems) {\n        if (item.shortcut) {\n          if (isHotkey(item.shortcut, event)) {\n            event.preventDefault()\n            event.stopPropagation()\n            onMenuAction(item)\n            return\n          }\n        }\n      }\n    },\n    [onMenuAction, menuItems],\n  )\n\n  const onConnectorSetFocus = useCallback(\n    (path: Path) => {\n      onPathOpen(path)\n      onFocus(path)\n    },\n    [onPathOpen, onFocus],\n  )\n\n  if (!schemaType) {\n    return (\n      <DocumentLayoutError\n        currentMinWidth={currentMinWidth}\n        documentType={documentType}\n        minWidth={minWidth}\n        paneKey={paneKey}\n        value={value}\n      />\n    )\n  }\n\n  return (\n    <GetFormValueProvider value={value}>\n      {inspectors.length > 0 && (\n        <DocumentInspectorMenuItemsResolver\n          documentId={documentId}\n          documentType={documentType}\n          inspectors={inspectors}\n          onMenuItems={setInspectorMenuItems}\n        />\n      )}\n\n      {fieldActions.length > 0 && schemaType && (\n        <FieldActionsResolver\n          actions={fieldActions}\n          documentId={documentId}\n          documentType={documentType}\n          onActions={setRootFieldActionNodes}\n          path={EMPTY_ARRAY}\n          schemaType={schemaType}\n        />\n      )}\n\n      <FieldActionsProvider actions={rootFieldActionNodes} path={EMPTY_ARRAY}>\n        <DocumentActionShortcuts\n          actionsBoxElement={actionsBoxElement}\n          as={Pane}\n          currentMinWidth={currentMinWidth}\n          data-testid=\"document-pane\"\n          flex={2.5}\n          id={paneKey}\n          minWidth={minWidth}\n          onKeyUp={handleKeyUp}\n          rootRef={setRootElement}\n        >\n          <DocumentPanelHeader ref={setHeaderElement} menuItems={menuItems} />\n          <DialogProvider position={DIALOG_PROVIDER_POSITION} zOffset={zOffsets.paneDialog}>\n            <Flex direction=\"column\" flex={1} height={layoutCollapsed ? undefined : 'fill'}>\n              <StyledChangeConnectorRoot\n                data-testid=\"change-connector-root\"\n                isReviewChangesOpen={changesOpen && paneParams?.changesInspectorTab === 'review'}\n                onOpenReviewChanges={onHistoryOpen}\n                onSetFocus={onConnectorSetFocus}\n              >\n                <DocumentPanel\n                  footerHeight={footerHeight || null}\n                  headerHeight={headerHeight || null}\n                  isInspectOpen={inspectOpen}\n                  rootElement={rootElement}\n                  setDocumentPanelPortalElement={setDocumentPanelPortalElement}\n                  footer={\n                    <DocumentLayoutFooter\n                      documentPanelPortalElement={documentPanelPortalElement}\n                      setFooterElement={setFooterElement}\n                      setActionsBoxElement={setActionsBoxElement}\n                    />\n                  }\n                />\n              </StyledChangeConnectorRoot>\n            </Flex>\n          </DialogProvider>\n          <DocumentOperationResults />\n        </DocumentActionShortcuts>\n      </FieldActionsProvider>\n    </GetFormValueProvider>\n  )\n}\n","import {type ComponentType} from 'react'\nimport {type DocumentLayoutProps, useMiddlewareComponents} from 'sanity'\n\nimport {DocumentLayout} from './DocumentLayout'\nimport {pickDocumentLayoutComponent} from './pickDocumentLayoutComponent'\n\n/**\n * A hook that returns the document layout composed\n * by the Components API (`document.components.layout`).\n */\nexport function useDocumentLayoutComponent(): ComponentType<\n  Omit<DocumentLayoutProps, 'renderDefault'>\n> {\n  return useMiddlewareComponents({\n    pick: pickDocumentLayoutComponent,\n    defaultComponent: DocumentLayout,\n  })\n}\n","import {type SanityDocument} from '@sanity/types'\nimport {useEffect, useState} from 'react'\nimport {useHistoryStore, useTimelineSelector, useTimelineStore} from 'sanity'\n\nexport const useDocumentLastRev = (documentId: string, documentType: string) => {\n  const historyStore = useHistoryStore()\n  const [lastRevisionDocument, setLastRevisionDocument] = useState<SanityDocument | null>(null)\n  const [loading, setLoading] = useState(false)\n\n  // Get the timeline store to access lastNonDeletedRevId\n  // needs to be done this way because otherwise the revision id will not be the most updated\n  // in case if you edit the document in between deletes, for example\n  const timelineStore = useTimelineStore({\n    documentId,\n    documentType,\n  })\n\n  // Get the lastNonDeletedRevId from the timeline store\n  const lastNonDeletedRevId = useTimelineSelector(\n    timelineStore,\n    (state) => state.lastNonDeletedRevId,\n  )\n\n  useEffect(() => {\n    if (lastNonDeletedRevId && documentId) {\n      setLoading(true)\n      historyStore\n        .getDocumentAtRevision(documentId, lastNonDeletedRevId)\n        .then((document) => {\n          setLastRevisionDocument(document || null)\n          setLoading(false)\n        })\n        .catch(() => {\n          setLastRevisionDocument(null)\n          setLoading(false)\n        })\n    } else {\n      setLastRevisionDocument(null)\n      setLoading(false)\n    }\n  }, [documentId, lastNonDeletedRevId, historyStore])\n\n  return {lastRevisionDocument, loading}\n}\n","import {defineEvent} from '@sanity/telemetry'\n\n/**\n * @internal\n */\nexport const DocumentURLCopied = defineEvent({\n  name: 'DocumentURLCopied',\n  version: 1,\n  description: 'User copied document URL to clipboard',\n})\n","import {type Template} from 'sanity'\n\ninterface InitialValueOptions {\n  documentType: string\n  panePayload?: unknown\n  templateName?: string\n  templateParams?: Record<string, unknown>\n  urlTemplate?: string\n}\n\n/**\n * @internal\n */\nexport function getInitialValueTemplateOpts(\n  templates: Template[],\n  opts: InitialValueOptions,\n): {templateName: string; templateParams: Record<string, unknown>} {\n  const payload = opts.panePayload || {}\n  const structureNodeTemplate = opts.templateName\n\n  if (opts.urlTemplate && structureNodeTemplate && structureNodeTemplate !== opts.urlTemplate) {\n    console.warn(\n      `Conflicting templates: URL says \"${opts.urlTemplate}\", structure node says \"${structureNodeTemplate}\". Using \"${structureNodeTemplate}\".`,\n    )\n  }\n\n  const template = structureNodeTemplate || opts.urlTemplate\n  const typeTemplates = templates.filter((t) => t.schemaType === opts.documentType)\n\n  const templateParams = {\n    ...opts.templateParams,\n    ...(typeof payload === 'object' ? payload || {} : {}),\n  }\n\n  let templateName = template\n\n  // If we have not specified a specific template, and we only have a single\n  // template available for a schema type, use it\n  if (!template && typeTemplates.length === 1) {\n    templateName = typeTemplates[0].id\n  }\n\n  return {templateName: templateName!, templateParams}\n}\n","import {useMemo} from 'react'\nimport {useInitialValue, useTemplates, useUnique} from 'sanity'\n\nimport {type PaneRouterContextValue, usePaneRouter} from '../../components'\nimport {type DocumentPaneNode} from '../../types'\nimport {getInitialValueTemplateOpts} from './getInitialValueTemplateOpts'\n\nexport const useDocumentPaneInitialValue = ({\n  paneOptions,\n  documentType,\n  documentId,\n  params,\n}: {\n  paneOptions: DocumentPaneNode['options']\n  documentType: string\n  documentId: string\n  params: NonNullable<PaneRouterContextValue['params']>\n}) => {\n  const templates = useTemplates()\n  const paneRouter = usePaneRouter()\n  const panePayload = useUnique(paneRouter.payload)\n\n  const {templateName, templateParams} = useMemo(\n    () =>\n      getInitialValueTemplateOpts(templates, {\n        documentType,\n        templateName: paneOptions.template,\n        templateParams: paneOptions.templateParameters,\n        panePayload,\n        urlTemplate: params.template,\n      }),\n    [documentType, paneOptions, params.template, panePayload, templates],\n  )\n\n  const initialValueRaw = useInitialValue({\n    documentId,\n    documentType,\n    templateName,\n    templateParams,\n    version: params.version,\n  })\n\n  const initialValue = useUnique(initialValueRaw)\n  return initialValue\n}\n","import {useCallback, useEffect, useMemo, useRef, useState} from 'react'\nimport {type DocumentInspector, useSource} from 'sanity'\n\nimport {type PaneRouterContextValue} from '../../components'\nimport {type PaneMenuItem} from '../../types'\nimport {useStructureTool} from '../../useStructureTool'\nimport {HISTORY_INSPECTOR_NAME, INSPECT_ACTION_PREFIX} from './constants'\n\nexport function useDocumentPaneInspector({\n  documentId,\n  documentType,\n  params,\n  setParams,\n}: {\n  params: NonNullable<PaneRouterContextValue['params']>\n  documentId: string\n  documentType: string\n  setParams: (params: Record<string, string | undefined>) => void\n}) {\n  const {features} = useStructureTool()\n  const source = useSource()\n  const inspectorsResolver = source.document.inspectors\n\n  const inspectors: DocumentInspector[] = useMemo(\n    () => inspectorsResolver({documentId, documentType}),\n    [documentId, documentType, inspectorsResolver],\n  )\n\n  const [inspectorName, setInspectorName] = useState<string | null>(() => params.inspect || null)\n\n  // Handle inspector name changes from URL\n  const inspectParamRef = useRef<string | undefined>(params.inspect)\n  useEffect(() => {\n    if (inspectParamRef.current !== params.inspect) {\n      inspectParamRef.current = params.inspect\n      setInspectorName(params.inspect || null)\n    }\n  }, [params.inspect])\n\n  const currentInspector = useMemo(\n    () => inspectors?.find((i) => i.name === inspectorName),\n    [inspectors, inspectorName],\n  )\n  const historyInspector = useMemo(\n    () => inspectors.find((i) => i.name === HISTORY_INSPECTOR_NAME),\n    [inspectors],\n  )\n\n  const changesOpen = currentInspector?.name === HISTORY_INSPECTOR_NAME\n\n  const closeInspector = useCallback(\n    (closeInspectorName?: string) => {\n      const inspector = closeInspectorName && inspectors.find((i) => i.name === closeInspectorName)\n\n      if (closeInspectorName && !inspector) {\n        console.warn(`No inspector named \"${closeInspectorName}\"`)\n        return\n      }\n\n      if (!currentInspector) {\n        return\n      }\n\n      if (inspector) {\n        const result = inspector.onClose?.({params}) ?? {params}\n\n        setInspectorName(null)\n        inspectParamRef.current = undefined\n\n        setParams({...result.params, inspect: undefined})\n\n        return\n      }\n\n      if (currentInspector) {\n        const result = currentInspector.onClose?.({params}) ?? {params}\n\n        setInspectorName(null)\n        inspectParamRef.current = undefined\n\n        setParams({...result.params, inspect: undefined})\n      }\n    },\n    [currentInspector, inspectors, params, setParams],\n  )\n\n  const openInspector = useCallback(\n    (nextInspectorName: string, paneParams?: Record<string, string>) => {\n      const nextInspector = inspectors.find((i) => i.name === nextInspectorName)\n\n      if (!nextInspector) {\n        console.warn(`No inspector named \"${nextInspectorName}\"`)\n        return\n      }\n\n      // if the inspector is already open, only update params\n      if (currentInspector?.name === nextInspector.name) {\n        setParams({...params, ...paneParams, inspect: nextInspector.name})\n        return\n      }\n\n      let currentParams = params\n\n      if (currentInspector) {\n        const closeResult = nextInspector.onClose?.({params: currentParams}) ?? {\n          params: currentParams,\n        }\n\n        currentParams = closeResult.params\n      }\n\n      const result = nextInspector.onOpen?.({params: currentParams}) ?? {params: currentParams}\n\n      setInspectorName(nextInspector.name)\n      inspectParamRef.current = nextInspector.name\n\n      setParams({...result.params, ...paneParams, inspect: nextInspector.name})\n    },\n    [currentInspector, inspectors, params, setParams],\n  )\n  const handleHistoryClose = useCallback(() => {\n    if (historyInspector) {\n      closeInspector(historyInspector.name)\n    }\n  }, [closeInspector, historyInspector])\n\n  const handleHistoryOpen = useCallback(() => {\n    if (!features.reviewChanges) {\n      return\n    }\n\n    if (historyInspector) {\n      openInspector(historyInspector.name, {changesInspectorTab: 'review'})\n    }\n  }, [features.reviewChanges, openInspector, historyInspector])\n\n  const inspectOpen = params.inspect === 'on'\n\n  const toggleLegacyInspect = useCallback(\n    (toggle = !inspectOpen) => {\n      if (toggle) {\n        setParams({...params, inspect: 'on'})\n      } else {\n        setParams({...params, inspect: undefined})\n      }\n    },\n    [inspectOpen, params, setParams],\n  )\n\n  const handleLegacyInspectClose = useCallback(\n    () => toggleLegacyInspect(false),\n    [toggleLegacyInspect],\n  )\n\n  const handleInspectorAction = useCallback(\n    (item: PaneMenuItem) => {\n      if (item.action === 'inspect') {\n        toggleLegacyInspect(true)\n        return true\n      }\n\n      if (typeof item.action !== 'string') return false\n      const nextInspectorName = item.action.slice(INSPECT_ACTION_PREFIX.length)\n      const nextInspector = inspectors.find((i) => i.name === nextInspectorName)\n\n      if (nextInspector) {\n        if (nextInspector.name === inspectorName) {\n          closeInspector(nextInspector.name)\n        } else {\n          openInspector(nextInspector.name)\n        }\n        return true\n      }\n      return false\n    },\n    [closeInspector, inspectorName, inspectors, openInspector, toggleLegacyInspect],\n  )\n\n  return {\n    changesOpen,\n    currentInspector,\n    inspectors,\n    closeInspector,\n    openInspector,\n    handleHistoryClose,\n    handleHistoryOpen,\n    handleInspectorAction,\n    // TODO: Deprecate this legacy inspect toggle it's used to render the <InspectDialog /> component\n    handleLegacyInspectClose,\n    inspectOpen,\n  }\n}\n","import {type SanityDocument} from '@sanity/types'\nimport {useEffect, useMemo} from 'react'\nimport {useObservable} from 'react-rx'\nimport {BehaviorSubject, from, of} from 'rxjs'\nimport {catchError, debounceTime, distinctUntilChanged, switchMap} from 'rxjs/operators'\nimport {isRecord, useSource} from 'sanity'\n\nconst isSanityDocument = (value: unknown): value is SanityDocument =>\n  isRecord(value) && typeof value._id === 'string' && typeof value._type === 'string'\n\nexport function usePreviewUrl(value: Partial<SanityDocument> | undefined): string | undefined {\n  const {resolveProductionUrl} = useSource().document\n  const subject = useMemo(\n    () => new BehaviorSubject<Partial<SanityDocument> | undefined>(undefined),\n    [],\n  )\n\n  useEffect(() => {\n    subject.next(value)\n  }, [subject, value])\n\n  const resolvedUrlObservable = useMemo(() => {\n    return subject.asObservable().pipe(\n      // this so that the preview URL isn't fetched on every keystroke\n      distinctUntilChanged(),\n      debounceTime(500),\n      switchMap((document) =>\n        isSanityDocument(document) ? from(resolveProductionUrl({document})) : of(undefined),\n      ),\n      distinctUntilChanged(),\n      catchError((err) => {\n        const message =\n          isRecord(err) && typeof err.message === 'string' ? err.message : 'Unknown error'\n        throw new Error(`An error was thrown while trying to get your preview url: ${message}`)\n      }),\n    )\n  }, [resolveProductionUrl, subject])\n\n  return useObservable(resolvedUrlObservable)\n}\n","import {useTelemetry} from '@sanity/telemetry/react'\nimport {type ObjectSchemaType, type SanityDocument, type SanityDocumentLike} from '@sanity/types'\nimport {useToast} from '@sanity/ui'\nimport {fromString as pathFromString, resolveKeyedPath} from '@sanity/util/paths'\nimport {memo, useCallback, useEffect, useMemo, useRef, useState} from 'react'\nimport {\n  type DocumentActionsContext,\n  type DocumentActionsVersionType,\n  type DocumentFieldAction,\n  type EditStateFor,\n  EMPTY_ARRAY,\n  getPublishedId,\n  getReleaseIdFromReleaseDocumentId,\n  isCardinalityOneRelease,\n  isGoingToUnpublish,\n  isPerspectiveWriteable,\n  isVersionId,\n  type PartialContext,\n  useActiveReleases,\n  useCopyPaste,\n  useDocumentForm,\n  useDocumentIdStack,\n  usePerspective,\n  useSchema,\n  useSource,\n  useStudioUrl,\n  useTranslation,\n  useUnique,\n  useWorkspace,\n} from 'sanity'\nimport {DocumentPaneContext} from 'sanity/_singletons'\n\nimport {usePaneRouter} from '../../components'\nimport {useDiffViewRouter} from '../../diffView/hooks/useDiffViewRouter'\nimport {useDocumentLastRev} from '../../hooks/useDocumentLastRev'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {type PaneMenuItem} from '../../types'\nimport {DocumentURLCopied} from './__telemetry__'\nimport {DEFAULT_MENU_ITEM_GROUPS, EMPTY_PARAMS, INSPECT_ACTION_PREFIX} from './constants'\nimport {type DocumentPaneContextValue} from './DocumentPaneContext'\nimport {\n  type DocumentPaneProviderProps as DocumentPaneProviderWrapperProps,\n  type HistoryStoreProps,\n} from './types'\nimport {useDocumentPaneInitialValue} from './useDocumentPaneInitialValue'\nimport {useDocumentPaneInspector} from './useDocumentPaneInspector'\nimport {usePreviewUrl} from './usePreviewUrl'\n\ninterface DocumentPaneProviderProps extends DocumentPaneProviderWrapperProps {\n  historyStore: HistoryStoreProps\n}\n\n/**\n * @internal\n */\n// eslint-disable-next-line max-statements\nexport const DocumentPaneProvider = memo((props: DocumentPaneProviderProps) => {\n  const {children, index, pane, paneKey, onFocusPath, forcedVersion, historyStore} = props\n  const {\n    store: timelineStore,\n    error: timelineError,\n    ready: timelineReady,\n    revisionDocument,\n    onOlderRevision,\n    sinceDocument,\n    isPristine,\n    revisionId,\n    lastNonDeletedRevId,\n  } = historyStore\n\n  const schema = useSchema()\n  const {setDocumentMeta} = useCopyPaste()\n  const {\n    document: {\n      actions: documentActions,\n      badges: documentBadges,\n      unstable_fieldActions: fieldActionsResolver,\n      unstable_languageFilter: languageFilterResolver,\n      drafts: {enabled: draftsEnabled},\n    },\n  } = useSource()\n  const telemetry = useTelemetry()\n  const paneRouter = usePaneRouter()\n  const setPaneParams = paneRouter.setParams\n  const {push: pushToast} = useToast()\n  const {\n    options,\n    menuItemGroups = DEFAULT_MENU_ITEM_GROUPS,\n    title = null,\n    views: viewsProp = [],\n  } = pane\n  const paneOptions = useUnique(options)\n  const documentIdRaw = paneOptions.id\n  const documentId = getPublishedId(documentIdRaw)\n  const documentType = options.type\n  const params = useUnique(paneRouter.params) || EMPTY_PARAMS\n  const {buildStudioUrl} = useStudioUrl()\n\n  const perspective = usePerspective()\n\n  const {\n    document: {\n      drafts: {enabled: isDraftModelEnabled},\n    },\n  } = useWorkspace()\n\n  const {selectedReleaseId, selectedPerspectiveName} = useMemo(() => {\n    // TODO: COREL - Remove this after updating sanity-assist to use <PerspectiveProvider>\n    if (forcedVersion) {\n      return forcedVersion\n    }\n\n    return {\n      selectedPerspectiveName: perspective.selectedPerspectiveName,\n      selectedReleaseId: perspective.selectedReleaseId,\n    }\n  }, [forcedVersion, perspective.selectedPerspectiveName, perspective.selectedReleaseId])\n\n  const diffViewRouter = useDiffViewRouter()\n\n  const initialValue = useDocumentPaneInitialValue({\n    paneOptions,\n    documentId,\n    documentType,\n    params,\n  })\n\n  const isInitialValueLoading = initialValue.loading\n  const {\n    changesOpen,\n    currentInspector,\n    inspectors,\n    closeInspector,\n    openInspector,\n    handleHistoryClose,\n    handleHistoryOpen,\n    handleInspectorAction,\n    inspectOpen,\n    handleLegacyInspectClose,\n  } = useDocumentPaneInspector({documentId, documentType, params, setParams: setPaneParams})\n\n  const [isDeleting, setIsDeleting] = useState(false)\n  const {lastRevisionDocument} = useDocumentLastRev(documentId, documentType)\n\n  /**\n   * Determine if the current document is deleted.\n   *\n   * When the timeline is available – we check for the absence of an editable document pair\n   * (both draft + published versions) as well as a non 'pristine' timeline (i.e. a timeline that consists\n   * of at least one chunk).\n   *\n   * In the _very rare_ case where the timeline cannot be loaded – we skip this check and always assume\n   * the document is NOT deleted. Since we can't accurately determine document deleted status without history,\n   * skipping this check means that in these cases, users will at least be able to create new documents\n   * without them being incorrectly marked as deleted.\n   */\n  const getIsDeleted = useCallback(\n    (editState: EditStateFor) => {\n      if (!timelineReady) return false\n      return (\n        Boolean(!editState?.draft && !editState?.published && !editState?.version) && !isPristine\n      )\n    },\n    [timelineReady, isPristine],\n  )\n\n  const getComparisonValue = useCallback(\n    (upstreamEditState: EditStateFor) => {\n      const upstream = upstreamEditState.version ?? upstreamEditState.published\n      if (changesOpen) {\n        return sinceDocument || upstream\n      }\n      return upstream || null\n    },\n    [changesOpen, sinceDocument],\n  )\n\n  const schemaType = schema.get(documentType) as ObjectSchemaType | undefined\n\n  const getIsReadOnly = useCallback(\n    (editState: EditStateFor): boolean => {\n      const isDeleted = getIsDeleted(editState)\n      const seeingHistoryDocument = Boolean(params.rev)\n      return (\n        seeingHistoryDocument ||\n        isDeleting ||\n        isDeleted ||\n        !isPerspectiveWriteable({\n          selectedPerspective: perspective.selectedPerspective,\n          isDraftModelEnabled,\n          schemaType,\n        }).result\n      )\n    },\n    [\n      getIsDeleted,\n      isDeleting,\n      isDraftModelEnabled,\n      params.rev,\n      perspective.selectedPerspective,\n      schemaType,\n    ],\n  )\n\n  const getDisplayed = useCallback(\n    (value: SanityDocumentLike) => {\n      if (onOlderRevision) {\n        return revisionDocument || {_id: value._id, _type: value._type}\n      }\n\n      // If the document is deleted (no draft, published, or version), return the last revision\n      const isDeleted = !value._createdAt && !value._updatedAt\n      if (isDeleted && lastNonDeletedRevId) {\n        // Return the fetched last revision document if available\n        if (lastRevisionDocument) {\n          return lastRevisionDocument\n        }\n      }\n\n      return value\n    },\n    [onOlderRevision, revisionDocument, lastNonDeletedRevId, lastRevisionDocument],\n  )\n\n  const {\n    editState,\n    upstreamEditState,\n    connectionState,\n    focusPath,\n    onChange,\n    validation,\n    ready: formReady,\n    value,\n    formState,\n    permissions,\n    onPathOpen,\n    isPermissionsLoading,\n    formStateRef,\n    onProgrammaticFocus,\n\n    collapsedFieldSets,\n    collapsedPaths,\n    onBlur,\n    onFocus,\n    onSetActiveFieldGroup,\n    onSetCollapsedPath,\n    onSetCollapsedFieldSet,\n    openPath,\n  } = useDocumentForm({\n    changesOpen,\n    documentType,\n    documentId,\n    initialValue: initialValue,\n    comparisonValue: getComparisonValue,\n    releaseId: selectedReleaseId,\n    selectedPerspectiveName,\n    initialFocusPath: params.path ? pathFromString(params.path) : EMPTY_ARRAY,\n    readOnly: getIsReadOnly,\n    onFocusPath,\n    getFormDocumentValue: getDisplayed,\n  })\n\n  const {data: releases = []} = useActiveReleases()\n\n  const getDocumentVersionType = useCallback(() => {\n    let version: DocumentActionsVersionType\n    switch (true) {\n      case Boolean(params.rev):\n        version = 'revision'\n        break\n      case selectedReleaseId && isVersionId(value._id): {\n        // Check if this is a scheduled draft (cardinality one release)\n        const releaseDocument = releases.find(\n          (r) => getReleaseIdFromReleaseDocumentId(r._id) === selectedReleaseId,\n        )\n\n        if (releaseDocument && isCardinalityOneRelease(releaseDocument)) {\n          version = 'scheduled-draft'\n        } else {\n          version = 'version'\n        }\n        break\n      }\n      case selectedPerspectiveName === 'published':\n        version = 'published'\n        break\n      case draftsEnabled:\n        version = 'draft'\n        break\n      default:\n        version = 'published'\n    }\n\n    return version\n  }, [params.rev, selectedReleaseId, value._id, selectedPerspectiveName, draftsEnabled, releases])\n\n  const actionsPerspective = useMemo(() => getDocumentVersionType(), [getDocumentVersionType])\n\n  const documentActionsProps: PartialContext<DocumentActionsContext> = useMemo(\n    () => ({\n      schemaType: documentType,\n      documentId,\n      versionType: actionsPerspective,\n      releaseId: selectedReleaseId,\n    }),\n    [documentType, documentId, actionsPerspective, selectedReleaseId],\n  )\n\n  // Resolve document actions\n  const actions = useMemo(\n    () => documentActions(documentActionsProps),\n    [documentActions, documentActionsProps],\n  )\n\n  // Resolve document badges\n  const badges = useMemo(\n    () => documentBadges({schemaType: documentType, documentId}),\n    [documentBadges, documentId, documentType],\n  )\n\n  // Resolve document language filter\n  const languageFilter = useMemo(\n    () => languageFilterResolver({schemaType: documentType, documentId}),\n    [documentId, documentType, languageFilterResolver],\n  )\n\n  const views = useUnique(viewsProp)\n\n  const activeViewId = params.view || (views[0] && views[0].id) || null\n\n  // TODO: this may cause a lot of churn. May be a good idea to prevent these\n  // requests unless the menu is open somehow\n  const previewUrl = usePreviewUrl(value)\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const fieldActions: DocumentFieldAction[] = useMemo(\n    () => (schemaType ? fieldActionsResolver({documentId, documentType, schemaType}) : []),\n    [documentId, documentType, fieldActionsResolver, schemaType],\n  )\n\n  /**\n   * Note that in addition to connection and edit state, we also wait for a valid document timeline\n   * range to be loaded. This means if we're loading an older revision, the full transaction range must\n   * be loaded in full prior to the document being displayed.\n   *\n   * Previously, visiting studio URLs with timeline params would display the 'current' document and then\n   * 'snap' in the older revision, which was disorienting and could happen mid-edit.\n   *\n   * In the event that the timeline cannot be loaded due to TimelineController errors or blocked requests,\n   * we skip this readiness check to ensure that users aren't locked out of editing. Trying to select\n   * a timeline revision in this instance will display an error localized to the popover itself.\n   */\n  const ready = formReady && (!params.rev || timelineReady || !!timelineError)\n\n  const displayed: Partial<SanityDocument> | undefined = useMemo(\n    () => getDisplayed(value),\n    [getDisplayed, value],\n  )\n\n  const {previousId} = useDocumentIdStack({\n    strict: true,\n    displayed,\n    documentId,\n    editState,\n  })\n\n  const setTimelineRange = useCallback(\n    (newSince: string, newRev: string | null) => {\n      setPaneParams({\n        ...params,\n        since: newSince,\n        rev: newRev || undefined,\n      })\n    },\n    [params, setPaneParams],\n  )\n\n  const handlePaneClose = useCallback(() => paneRouter.closeCurrent(), [paneRouter])\n\n  const handlePaneSplit = useCallback(() => paneRouter.duplicateCurrent(), [paneRouter])\n\n  const handleMenuAction = useCallback(\n    async (item: PaneMenuItem) => {\n      if (item.action === 'production-preview' && previewUrl) {\n        window.open(previewUrl)\n        return true\n      }\n\n      if (item.action === 'copy-document-url' && navigator) {\n        telemetry.log(DocumentURLCopied)\n        // Chose to copy the user's current URL instead of\n        // the document's edit intent link because\n        // of bugs when resolving a document that has\n        // multiple access paths within Structure\n        const copyUrl = buildStudioUrl({\n          coreUi: (url) => `${url}/intent/edit/id=${documentId};type=${documentType}`,\n        })\n        await navigator.clipboard.writeText(copyUrl)\n        pushToast({\n          id: 'copy-document-url',\n          status: 'info',\n          title: t('panes.document-operation-results.operation-success_copy-url'),\n        })\n        return true\n      }\n\n      if (item.action === 'reviewChanges') {\n        handleHistoryOpen()\n        return true\n      }\n\n      if (\n        item.action === 'inspect' ||\n        (typeof item.action === 'string' && item.action.startsWith(INSPECT_ACTION_PREFIX))\n      ) {\n        handleInspectorAction(item)\n      }\n\n      if (item.action === 'compareVersions' && typeof previousId !== 'undefined') {\n        diffViewRouter.navigateDiffView({\n          mode: 'version',\n          previousDocument: {\n            type: documentType,\n            id: previousId,\n          },\n          nextDocument: {\n            type: documentType,\n            id: value._id,\n          },\n        })\n        return true\n      }\n\n      return false\n    },\n    [\n      previewUrl,\n      previousId,\n      telemetry,\n      buildStudioUrl,\n      pushToast,\n      t,\n      documentId,\n      documentType,\n      handleHistoryOpen,\n      handleInspectorAction,\n      diffViewRouter,\n      value._id,\n    ],\n  )\n\n  useEffect(() => {\n    setDocumentMeta({\n      documentId,\n      documentType,\n      schemaType: schemaType!,\n      onChange,\n    })\n  }, [documentId, documentType, schemaType, onChange, setDocumentMeta])\n\n  const compareValue = useMemo(\n    () => getComparisonValue(upstreamEditState),\n    [upstreamEditState, getComparisonValue],\n  )\n\n  const isDeleted = useMemo(() => getIsDeleted(editState), [editState, getIsDeleted])\n  const revisionNotFound = onOlderRevision && !revisionDocument\n\n  const currentDisplayed = useMemo(() => {\n    if (editState.version && isGoingToUnpublish(editState.version)) {\n      return editState.published\n    }\n    return displayed\n  }, [editState.version, editState.published, displayed])\n\n  const documentPane: DocumentPaneContextValue = useMemo(\n    () =>\n      ({\n        actions,\n        activeViewId,\n        badges,\n        changesOpen,\n        closeInspector,\n        collapsedFieldSets,\n        collapsedPaths,\n        compareValue,\n        connectionState,\n        displayed: currentDisplayed,\n        documentId,\n        documentIdRaw,\n        documentType,\n        editState,\n        fieldActions,\n        focusPath,\n        inspector: currentInspector || null,\n        inspectors,\n        onBlur,\n        onChange,\n        onFocus,\n        onPathOpen,\n        onHistoryClose: handleHistoryClose,\n        onHistoryOpen: handleHistoryOpen,\n        onInspectClose: handleLegacyInspectClose,\n        onMenuAction: handleMenuAction,\n        onPaneClose: handlePaneClose,\n        onPaneSplit: handlePaneSplit,\n        onSetActiveFieldGroup,\n        onSetCollapsedPath,\n        onSetCollapsedFieldSet,\n        openInspector,\n        openPath,\n        index,\n        inspectOpen,\n        validation,\n        menuItemGroups: menuItemGroups || [],\n        paneKey,\n        previewUrl,\n        ready,\n        schemaType: schemaType!,\n        isPermissionsLoading,\n        isInitialValueLoading,\n        permissions,\n        setTimelineRange,\n        setIsDeleting,\n        isDeleting,\n        isDeleted,\n        timelineError,\n        timelineStore,\n        title,\n        value,\n        selectedReleaseId,\n        views,\n        formState,\n        unstable_languageFilter: languageFilter,\n        revisionId,\n        revisionNotFound,\n        lastNonDeletedRevId,\n        lastRevisionDocument,\n      }) satisfies DocumentPaneContextValue,\n    [\n      actions,\n      activeViewId,\n      badges,\n      changesOpen,\n      closeInspector,\n      collapsedFieldSets,\n      collapsedPaths,\n      compareValue,\n      connectionState,\n      currentDisplayed,\n      documentId,\n      documentIdRaw,\n      documentType,\n      editState,\n      fieldActions,\n      focusPath,\n      currentInspector,\n      inspectors,\n      onBlur,\n      onChange,\n      onFocus,\n      onPathOpen,\n      handleHistoryClose,\n      handleHistoryOpen,\n      handleLegacyInspectClose,\n      handleMenuAction,\n      handlePaneClose,\n      handlePaneSplit,\n      onSetActiveFieldGroup,\n      onSetCollapsedPath,\n      onSetCollapsedFieldSet,\n      openInspector,\n      openPath,\n      index,\n      inspectOpen,\n      validation,\n      menuItemGroups,\n      paneKey,\n      previewUrl,\n      ready,\n      schemaType,\n      isPermissionsLoading,\n      isInitialValueLoading,\n      permissions,\n      setTimelineRange,\n      isDeleting,\n      isDeleted,\n      timelineError,\n      timelineStore,\n      title,\n      value,\n      selectedReleaseId,\n      views,\n      formState,\n      languageFilter,\n      revisionId,\n      revisionNotFound,\n      lastNonDeletedRevId,\n      lastRevisionDocument,\n    ],\n  )\n\n  const pathRef = useRef<string | undefined>(undefined)\n  useEffect(() => {\n    if (ready && params.path) {\n      const {path, ...restParams} = params\n\n      // trigger a focus when `params.path` changes\n      if (path !== pathRef.current) {\n        const pathFromUrl = resolveKeyedPath(formStateRef.current?.value, pathFromString(path))\n        onProgrammaticFocus(pathFromUrl)\n      }\n\n      // remove the `path`-param from url after we have consumed it as the initial focus path\n      paneRouter.setParams(restParams)\n    }\n    pathRef.current = params.path\n\n    return undefined\n  }, [formStateRef, onProgrammaticFocus, paneRouter, params, ready])\n\n  return (\n    <DocumentPaneContext.Provider value={documentPane}>{children}</DocumentPaneContext.Provider>\n  )\n})\n\nDocumentPaneProvider.displayName = 'Memo(DocumentPaneProvider)'\n","import {type ObjectSchemaType} from '@sanity/types'\nimport {useMemo} from 'react'\nimport {\n  EMPTY_ARRAY,\n  EventsProvider,\n  getDraftId,\n  getPublishedId,\n  getReleaseIdFromReleaseDocumentId,\n  getVersionId,\n  isDeleteDocumentGroupEvent,\n  isDeleteDocumentVersionEvent,\n  PerspectiveProvider,\n  useArchivedReleases,\n  useEditState,\n  useEventsStore,\n  usePerspective,\n  useSchema,\n} from 'sanity'\n\nimport {usePaneRouter} from '../../components'\nimport {EMPTY_PARAMS} from './constants'\nimport {usePaneOptions} from './DocumentPane'\nimport {DocumentPaneProvider} from './DocumentPaneProvider'\nimport {type DocumentPaneProviderProps} from './types'\n\nexport const DocumentEventsPane = (props: DocumentPaneProviderProps) => {\n  const {params = EMPTY_PARAMS} = usePaneRouter()\n  const options = usePaneOptions(props.pane.options, params)\n  const schema = useSchema()\n  const documentType = options.type\n  const schemaType = schema.get(options.type) as ObjectSchemaType | undefined\n  const liveEdit = Boolean(schemaType?.liveEdit)\n\n  const {selectedPerspectiveName, selectedReleaseId, selectedPerspective} = usePerspective()\n  const {data: archivedReleases} = useArchivedReleases()\n  const editState = useEditState(\n    getPublishedId(options.id),\n    documentType,\n    'default',\n    selectedReleaseId,\n  )\n\n  const showingPublishedOnDraft = liveEdit && selectedPerspective === 'drafts' && !editState?.draft\n  const {rev, since} = params\n  const historyVersion = params.historyVersion\n\n  const documentId = useMemo(() => {\n    if (showingPublishedOnDraft) {\n      return getPublishedId(options.id)\n    }\n    if (\n      historyVersion &&\n      archivedReleases.some(\n        (release) => getReleaseIdFromReleaseDocumentId(release._id) === historyVersion,\n      )\n    ) {\n      // Check if we have a release that matches with this historyVersion\n      return getVersionId(options.id, historyVersion)\n    }\n    if (typeof selectedPerspectiveName === 'undefined') {\n      return getDraftId(options.id)\n    }\n    if (selectedPerspectiveName === 'published') {\n      return getPublishedId(options.id)\n    }\n    if (selectedReleaseId) {\n      return getVersionId(options.id, selectedPerspectiveName)\n    }\n    return options.id\n  }, [\n    archivedReleases,\n    historyVersion,\n    selectedPerspectiveName,\n    options.id,\n    showingPublishedOnDraft,\n    selectedReleaseId,\n  ])\n\n  const eventsStore = useEventsStore({documentId, documentType: options.type, rev, since})\n\n  const historyStoreProps = useMemo(\n    () => ({\n      error: eventsStore.error,\n      revisionId: eventsStore.revision?.revisionId || null,\n      onOlderRevision: Boolean(rev && !eventsStore.revision?.loading),\n      revisionDocument: eventsStore.revision?.document || null,\n      sinceDocument: eventsStore.sinceRevision?.document || null,\n      ready: !eventsStore.loading,\n      isPristine: Boolean(eventsStore.events.length === 0),\n      lastNonDeletedRevId:\n        eventsStore.events.find(\n          (e) => !isDeleteDocumentGroupEvent(e) && !isDeleteDocumentVersionEvent(e),\n        )?.id || null,\n    }),\n    [eventsStore, rev],\n  )\n\n  const value = useMemo(() => eventsStore, [eventsStore])\n\n  return (\n    <EventsProvider value={value}>\n      {historyVersion ? (\n        <PerspectiveProvider\n          selectedPerspectiveName={historyVersion}\n          excludedPerspectives={EMPTY_ARRAY}\n        >\n          <DocumentPaneProvider {...props} historyStore={historyStoreProps} />\n        </PerspectiveProvider>\n      ) : (\n        <DocumentPaneProvider {...props} historyStore={historyStoreProps} />\n      )}\n    </EventsProvider>\n  )\n}\n","import {type SanityDocument} from '@sanity/types'\nimport {useMemo, useState} from 'react'\nimport {getPublishedId, useTimelineSelector, useTimelineStore} from 'sanity'\n\nimport {usePaneRouter} from '../../components'\nimport {EMPTY_PARAMS} from './constants'\nimport {usePaneOptions} from './DocumentPane'\nimport {DocumentPaneProvider} from './DocumentPaneProvider'\nimport {type DocumentPaneProviderProps} from './types'\n\nexport const DocumentPaneWithLegacyTimelineStore = (props: DocumentPaneProviderProps) => {\n  const {pane} = props\n  const paneRouter = usePaneRouter()\n  const options = usePaneOptions(pane.options, paneRouter.params)\n\n  const params = paneRouter.params || EMPTY_PARAMS\n\n  const [timelineError, setTimelineError] = useState<Error | null>(null)\n\n  const store = useTimelineStore({\n    documentId: getPublishedId(options.id),\n    documentType: options.type,\n    onError: setTimelineError,\n    rev: params.rev,\n    since: params.since,\n  })\n\n  const onOlderRevision = useTimelineSelector(store, (state) => state.onOlderRevision)\n  const revTime = useTimelineSelector(store, (state) => state.revTime)\n  const sinceAttributes = useTimelineSelector(store, (state) => state.sinceAttributes)\n  const timelineDisplayed = useTimelineSelector(store, (state) => state.timelineDisplayed)\n  const timelineReady = useTimelineSelector(store, (state) => state.timelineReady)\n  const isPristine = useTimelineSelector(store, (state) => state.isPristine)\n  const lastNonDeletedRevId = useTimelineSelector(store, (state) => state.lastNonDeletedRevId)\n\n  const historyStoreProps = useMemo(\n    () => ({\n      store,\n      error: timelineError,\n      revisionId: revTime?.id || null,\n      onOlderRevision: onOlderRevision,\n      revisionDocument: timelineDisplayed as SanityDocument | null,\n      sinceDocument: sinceAttributes as SanityDocument | null,\n      ready: timelineReady,\n      isPristine: Boolean(isPristine),\n      lastNonDeletedRevId,\n    }),\n    [\n      store,\n      timelineError,\n      revTime?.id,\n      onOlderRevision,\n      timelineDisplayed,\n      sinceAttributes,\n      timelineReady,\n      isPristine,\n      lastNonDeletedRevId,\n    ],\n  )\n  return <DocumentPaneProvider {...props} historyStore={historyStoreProps} />\n}\n","import {type ReactNode, useContext, useEffect, useMemo} from 'react'\nimport {\n  getVersionFromId,\n  isCardinalityOnePerspective,\n  LATEST,\n  type PerspectiveContextValue,\n  PUBLISHED,\n  useDocumentVersions,\n  useSetPerspective,\n  useWorkspace,\n} from 'sanity'\nimport {PerspectiveContext, RawPerspectiveContext} from 'sanity/_singletons'\n\n// Clears URL for cardinality one releases when document doesn't exist in selected release\nconst DocumentPerspectiveResetHandler = ({documentId}: {documentId: string}) => {\n  const rawContext = useContext(RawPerspectiveContext)\n  const {data: documentVersions, loading: documentVersionsLoading} = useDocumentVersions({\n    documentId,\n  })\n  const setPerspective = useSetPerspective()\n\n  useEffect(() => {\n    if (documentVersionsLoading || !rawContext) {\n      return\n    }\n\n    if (!isCardinalityOnePerspective(rawContext.selectedPerspective)) {\n      return\n    }\n\n    if (!documentVersions?.length) {\n      setPerspective(undefined)\n      return\n    }\n\n    const releasesIds = documentVersions.map((id) => getVersionFromId(id))\n    const documentExistsInRelease = releasesIds.includes(rawContext.selectedReleaseId!)\n\n    if (!documentExistsInRelease) {\n      setPerspective(undefined)\n    }\n  }, [documentId, rawContext, documentVersions, documentVersionsLoading, setPerspective])\n\n  return null\n}\n\n/**\n * @internal\n * Exposes cardinality one releases as selectedPerspective through PerspectiveContext\n */\nexport function DocumentPerspectiveProvider({\n  children,\n  documentId,\n}: {\n  children: ReactNode\n  documentId: string\n}) {\n  const rawContext = useContext(RawPerspectiveContext)\n  const mappedContext = useContext(PerspectiveContext)\n  const {data: documentVersions, loading: documentVersionsLoading} = useDocumentVersions({\n    documentId,\n  })\n\n  const {\n    document: {\n      drafts: {enabled: isDraftModelEnabled},\n    },\n  } = useWorkspace()\n  const defaultPerspective = isDraftModelEnabled ? LATEST : PUBLISHED\n\n  const value = useMemo<PerspectiveContextValue | null>(() => {\n    if (!rawContext || !mappedContext) return mappedContext\n\n    if (!isCardinalityOnePerspective(rawContext.selectedPerspective)) {\n      return mappedContext\n    }\n\n    // Default to drafts while loading or if no versions exist\n    if (documentVersionsLoading || !documentVersions?.length) {\n      return {\n        ...mappedContext,\n        selectedPerspective: defaultPerspective,\n        selectedPerspectiveName: undefined,\n        selectedReleaseId: undefined,\n      }\n    }\n\n    const releasesIds = documentVersions.map((id) => getVersionFromId(id))\n    const documentExistsInRelease = releasesIds.includes(rawContext.selectedReleaseId!)\n\n    // use drafts if document doesn't exist in the selected cardinality one release\n    if (!documentExistsInRelease) {\n      return {\n        ...mappedContext,\n        selectedPerspective: defaultPerspective,\n        selectedPerspectiveName: undefined,\n        selectedReleaseId: undefined,\n      }\n    }\n\n    // Use raw unmapped values when document exists in cardinality one release\n    return {\n      ...mappedContext,\n      selectedPerspective: rawContext.selectedPerspective,\n      selectedPerspectiveName: rawContext.selectedPerspectiveName,\n      selectedReleaseId: rawContext.selectedReleaseId,\n    }\n  }, [rawContext, mappedContext, documentVersionsLoading, documentVersions, defaultPerspective])\n\n  if (!value) {\n    return <>{children}</>\n  }\n\n  return (\n    <PerspectiveContext.Provider value={value}>\n      {children}\n      <DocumentPerspectiveResetHandler documentId={documentId} />\n    </PerspectiveContext.Provider>\n  )\n}\n","import {memo} from 'react'\nimport {getPublishedId, useSource} from 'sanity'\n\nimport {DocumentEventsPane} from './DocumentEventsPane'\nimport {DocumentPaneWithLegacyTimelineStore} from './DocumentPaneLegacyTimeline'\nimport {DocumentPerspectiveProvider} from './DocumentPerspectiveProvider'\nimport {type DocumentPaneProviderProps} from './types'\n\n/**\n * @internal\n */\nexport const DocumentPaneProviderWrapper = memo((props: DocumentPaneProviderProps) => {\n  const source = useSource()\n  const documentId = getPublishedId(props.itemId)\n\n  return (\n    <DocumentPerspectiveProvider documentId={documentId}>\n      {source.beta?.eventsAPI?.documents ? (\n        <DocumentEventsPane {...props} />\n      ) : (\n        <DocumentPaneWithLegacyTimelineStore {...props} />\n      )}\n    </DocumentPerspectiveProvider>\n  )\n})\nDocumentPaneProviderWrapper.displayName = 'Memo(DocumentPaneProviderWrapper)'\n","import {useEffect, useRef} from 'react'\nimport {usePerspective} from 'sanity'\nimport {useEffectEvent} from 'use-effect-event'\n\nimport {usePaneRouter} from '../../components'\nimport {EMPTY_PARAMS} from './constants'\n\n/**\n * This hooks takes care of resetting the history related params when the perspective changes.\n * It needs to be placed in a stable component, like the `DocumentPane`, which won't be unmounted when the perspective changes.\n */\nexport function useResetHistoryParams() {\n  const {params = EMPTY_PARAMS, setParams} = usePaneRouter()\n\n  const {selectedPerspectiveName} = usePerspective()\n  const isMounted = useRef(false)\n\n  const updateHistoryParams = useEffectEvent((_perspective?: string) => {\n    // Check if any of the history related params are set, and reset them, don't unnecessarily update the params\n    const PARAMS_TO_UPDATE = ['since', 'historyVersion', 'rev', 'preserveRev']\n    const shouldUpdateParams = PARAMS_TO_UPDATE.some((param) => params[param])\n    if (!shouldUpdateParams) return\n\n    setParams({\n      ...params,\n      // Reset the history related params when the perspective changes, as they don't make sense\n      // in the context of the new perspective - preserveRev is used when setting draft revision.\n      rev: params.preserveRev === 'true' ? params.rev : undefined,\n      preserveRev: undefined,\n      since: undefined,\n      historyVersion: undefined,\n    })\n  })\n  useEffect(() => {\n    // Skip the first run to avoid resetting the params on initial load\n    if (isMounted.current) {\n      updateHistoryParams(selectedPerspectiveName)\n    }\n  }, [selectedPerspectiveName])\n\n  useEffect(() => {\n    isMounted.current = true\n    return () => {\n      isMounted.current = false\n    }\n  }, [])\n}\n","import {type Path} from '@sanity/types'\nimport {Stack, Text} from '@sanity/ui'\nimport {fromString as pathFromString} from '@sanity/util/paths'\nimport {memo, useMemo} from 'react'\nimport {\n  CopyPasteProvider,\n  ReferenceInputOptionsProvider,\n  SourceProvider,\n  Translate,\n  useDocumentType,\n  usePerspective,\n  useSource,\n  useTemplatePermissions,\n  useTemplates,\n  useTranslation,\n} from 'sanity'\n\nimport {usePaneRouter} from '../../components'\nimport {DiffViewDocumentLayout} from '../../diffView/plugin/DiffViewDocumentLayout'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {type DocumentPaneNode} from '../../types'\nimport {ErrorPane} from '../error'\nimport {LoadingPane} from '../loading'\nimport {CommentsWrapper} from './comments'\nimport {useDocumentLayoutComponent} from './document-layout'\nimport {DocumentPaneProviderWrapper} from './DocumentPaneProviderWrapper'\nimport {type DocumentPaneProviderProps} from './types'\nimport {useResetHistoryParams} from './useResetHistoryParams'\n\ntype DocumentPaneOptions = DocumentPaneNode['options']\n\n/**\n * @internal\n */\nexport const DocumentPane = memo(function DocumentPane(props: DocumentPaneProviderProps) {\n  const {name: parentSourceName} = useSource()\n\n  return (\n    <SourceProvider name={props.pane.source || parentSourceName}>\n      <CopyPasteProvider>\n        <DocumentPaneInner {...props} />\n      </CopyPasteProvider>\n    </SourceProvider>\n  )\n})\n\nfunction DocumentPaneInner(props: DocumentPaneProviderProps) {\n  const {pane, paneKey} = props\n  const {resolveNewDocumentOptions} = useSource().document\n  const {selectedPerspectiveName} = usePerspective()\n  const paneRouter = usePaneRouter()\n  const options = usePaneOptions(pane.options, paneRouter.params)\n  const {documentType, isLoaded: isDocumentLoaded} = useDocumentType(options.id, options.type)\n  useResetHistoryParams()\n  const DocumentLayout = useDocumentLayoutComponent()\n\n  // The templates that should be creatable from inside this document pane.\n  // For example, from the \"Create new\" menu in reference inputs.\n  const templateItems = useMemo(() => {\n    return resolveNewDocumentOptions({\n      type: 'document',\n      documentId: options.id,\n      schemaType: options.type,\n    })\n  }, [options.id, options.type, resolveNewDocumentOptions])\n\n  const [templatePermissions, isTemplatePermissionsLoading] = useTemplatePermissions({\n    templateItems,\n  })\n  const isLoaded = isDocumentLoaded && !isTemplatePermissionsLoading\n\n  const providerProps = useMemo(() => {\n    return isLoaded && documentType && options.type !== documentType\n      ? mergeDocumentType(props, options, documentType)\n      : props\n  }, [props, documentType, isLoaded, options])\n\n  const {ReferenceChildLink, handleEditReference, groupIndex, routerPanesState} = paneRouter\n  const childParams = routerPanesState[groupIndex + 1]?.[0].params || {}\n  const routerPanesStateLength = routerPanesState.length\n  const {parentRefPath} = childParams\n\n  const activePath: {path: Path; state: 'selected' | 'pressed' | 'none'} = useMemo(() => {\n    return parentRefPath\n      ? {\n          path: pathFromString(parentRefPath),\n          state:\n            groupIndex >= routerPanesStateLength - 1\n              ? 'none'\n              : groupIndex >= routerPanesStateLength - 2\n                ? 'selected'\n                : 'pressed',\n        }\n      : {path: [], state: 'none'}\n  }, [parentRefPath, groupIndex, routerPanesStateLength])\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (options.type === '*' && !isLoaded) {\n    return (\n      <LoadingPane\n        flex={2.5}\n        minWidth={320}\n        paneKey={paneKey}\n        title={t('panes.document-pane.document-not-found.loading')}\n      />\n    )\n  }\n\n  if (!documentType) {\n    return (\n      <ErrorPane\n        flex={2.5}\n        minWidth={320}\n        paneKey={paneKey}\n        title={t('panes.document-pane.document-not-found.title')}\n      >\n        <Stack space={4}>\n          <Text as=\"p\">\n            <Translate\n              t={t}\n              i18nKey=\"panes.document-pane.document-not-found.text\"\n              values={{id: options.id}}\n              components={{Code: ({children}) => <code>{children}</code>}}\n            />\n          </Text>\n        </Stack>\n      </ErrorPane>\n    )\n  }\n\n  return (\n    <DocumentPaneProviderWrapper\n      // this needs to be here to avoid formState from being re-used across (incompatible) document types\n      // see https://github.com/sanity-io/sanity/discussions/3794 for a description of the problem\n      key={`${documentType}-${options.id}-${selectedPerspectiveName || ''}`}\n      {...providerProps}\n    >\n      {/* NOTE: this is a temporary location for this provider until we */}\n      {/* stabilize the reference input options formally in the form builder */}\n      <ReferenceInputOptionsProvider\n        EditReferenceLinkComponent={ReferenceChildLink}\n        onEditReference={handleEditReference}\n        initialValueTemplateItems={templatePermissions}\n        activePath={activePath}\n      >\n        <DiffViewDocumentLayout documentId={options.id} documentType={options.type}>\n          <CommentsWrapper documentId={options.id} documentType={options.type}>\n            <DocumentLayout documentId={options.id} documentType={options.type} />\n          </CommentsWrapper>\n        </DiffViewDocumentLayout>\n      </ReferenceInputOptionsProvider>\n    </DocumentPaneProviderWrapper>\n  )\n}\n\n/**\n * @internal\n */\nexport function usePaneOptions(\n  options: DocumentPaneOptions,\n  params: Record<string, string | undefined> = {},\n): DocumentPaneOptions {\n  const templates = useTemplates()\n\n  return useMemo(() => {\n    // The document type is provided, so return\n    if (options.type && options.type !== '*') {\n      return options\n    }\n\n    // Attempt to derive document type from the template configuration\n    const templateName = options.template || params.template\n    const template = templateName ? templates.find((t) => t.id === templateName) : undefined\n    const documentType = template?.schemaType\n\n    // No document type was found in a template\n    if (!documentType) {\n      return options\n    }\n\n    // The template provided the document type, so modify the pane’s `options` property\n    return {...options, type: documentType}\n  }, [options, params.template, templates])\n}\n\nfunction mergeDocumentType(\n  props: DocumentPaneProviderProps,\n  options: DocumentPaneOptions,\n  documentType: string,\n): DocumentPaneProviderProps {\n  return {\n    ...props,\n    pane: {\n      ...props.pane,\n      options: {...options, type: documentType},\n    },\n  }\n}\n","import {type ComponentType, type ForwardedRef, forwardRef, useContext, useMemo} from 'react'\nimport {PaneRouterContext} from 'sanity/_singletons'\nimport {StateLink} from 'sanity/router'\n\nimport {type BackLinkProps} from './types'\n\n/**\n * @internal\n */\nexport const BackLink = forwardRef(function BackLink(\n  props: BackLinkProps,\n  ref: ForwardedRef<HTMLAnchorElement>,\n) {\n  const {routerPanesState, groupIndex} = useContext(PaneRouterContext)\n  const panes = useMemo(() => routerPanesState.slice(0, groupIndex), [groupIndex, routerPanesState])\n  const state = useMemo(() => ({panes}), [panes])\n\n  return <StateLink {...props} ref={ref} state={state} />\n}) as ComponentType<BackLinkProps>\n","import {type ForwardedRef, forwardRef, useContext} from 'react'\nimport {PaneRouterContext} from 'sanity/_singletons'\nimport {StateLink} from 'sanity/router'\n\nimport {type ChildLinkProps} from './types'\n\n/**\n * @internal\n */\nexport const ChildLink = forwardRef(function ChildLink(\n  props: ChildLinkProps,\n  ref: ForwardedRef<HTMLAnchorElement>,\n) {\n  const {childId, childPayload, childParameters, ...rest} = props\n  const {routerPanesState, groupIndex} = useContext(PaneRouterContext)\n\n  return (\n    <StateLink\n      {...rest}\n      ref={ref}\n      state={{\n        panes: [\n          ...routerPanesState.slice(0, groupIndex + 1),\n          [{id: childId, params: childParameters, payload: childPayload}],\n        ],\n      }}\n    />\n  )\n})\n","import {type ForwardedRef, forwardRef, type ReactNode, useContext, useMemo} from 'react'\nimport {useUnique} from 'sanity'\nimport {PaneRouterContext} from 'sanity/_singletons'\nimport {StateLink} from 'sanity/router'\n\ninterface ParameterizedLinkProps {\n  params?: Record<string, string>\n  payload?: unknown\n  children?: ReactNode\n}\n\n/**\n * @internal\n */\nexport const ParameterizedLink = forwardRef(function ParameterizedLink(\n  props: ParameterizedLinkProps,\n  ref: ForwardedRef<HTMLAnchorElement>,\n) {\n  const {routerPanesState: currentPanes, groupIndex, siblingIndex} = useContext(PaneRouterContext)\n  const {params, payload, ...rest} = props\n  const nextParams = useUnique(params)\n  const nextPayload = useUnique(payload)\n\n  const nextState = useMemo(() => {\n    const currentGroup = currentPanes[groupIndex]\n    const currentSibling = currentGroup[siblingIndex]\n\n    const nextSibling = {\n      ...currentSibling,\n      params: nextParams ?? currentSibling.params,\n      payload: nextPayload ?? currentSibling.payload,\n    }\n\n    const nextGroup = [\n      ...currentGroup.slice(0, siblingIndex),\n      nextSibling,\n      ...currentGroup.slice(siblingIndex + 1),\n    ]\n\n    const nextPanes = [\n      ...currentPanes.slice(0, groupIndex),\n      nextGroup,\n      ...currentPanes.slice(groupIndex + 1),\n    ]\n\n    return {panes: nextPanes}\n  }, [currentPanes, groupIndex, nextParams, nextPayload, siblingIndex])\n\n  return <StateLink ref={ref} {...rest} state={nextState} />\n})\n","import {toString as pathToString} from '@sanity/util/paths'\nimport {type ForwardedRef, forwardRef} from 'react'\n\nimport {ChildLink} from './ChildLink'\nimport {type ReferenceChildLinkProps} from './types'\n\nexport const ReferenceChildLink = forwardRef(function ReferenceChildLink(\n  {documentId, documentType, parentRefPath, children, template, ...rest}: ReferenceChildLinkProps,\n  ref: ForwardedRef<HTMLAnchorElement>,\n) {\n  return (\n    <ChildLink\n      {...rest}\n      ref={ref}\n      childId={documentId}\n      childPayload={template?.params}\n      childParameters={{\n        type: documentType,\n        parentRefPath: pathToString(parentRefPath),\n        ...(template && {template: template?.id}),\n      }}\n    >\n      {children}\n    </ChildLink>\n  )\n})\n","import {toString as pathToString} from '@sanity/util/paths'\nimport {omit} from 'lodash'\nimport {type ReactNode, useCallback, useMemo} from 'react'\nimport {PaneRouterContext} from 'sanity/_singletons'\nimport {useRouter, useRouterState} from 'sanity/router'\n\nimport {type RouterPaneGroup, type RouterPanes, type RouterPaneSibling} from '../../types'\nimport {usePaneLayout} from '../pane/usePaneLayout'\nimport {BackLink} from './BackLink'\nimport {ChildLink} from './ChildLink'\nimport {ParameterizedLink} from './ParameterizedLink'\nimport {ReferenceChildLink} from './ReferenceChildLink'\nimport {type PaneRouterContextValue} from './types'\n\nconst emptyArray: never[] = []\n\n/**\n * @internal\n */\nexport function PaneRouterProvider(props: {\n  children: ReactNode\n  flatIndex: number\n  index: number\n  params: Record<string, string | undefined>\n  payload: unknown\n  siblingIndex: number\n}) {\n  const {children, flatIndex, index, params, payload, siblingIndex} = props\n  const {navigate, navigateIntent, resolvePathFromState} = useRouter()\n  const routerState = useRouterState()\n  const {panes, expand} = usePaneLayout()\n  const routerPaneGroups: RouterPaneGroup[] = useMemo(\n    () => (routerState?.panes || emptyArray) as RouterPanes,\n    [routerState?.panes],\n  )\n  const lastPane = useMemo(() => panes?.[panes.length - 2], [panes])\n\n  const groupIndex = index - 1\n\n  const createNextRouterState = useCallback(\n    (modifier: (siblings: RouterPaneGroup, item: RouterPaneSibling) => RouterPaneGroup) => {\n      const currentGroup = routerPaneGroups[groupIndex] || []\n      const currentItem = currentGroup[siblingIndex]\n      const nextGroup = modifier(currentGroup, currentItem)\n      const nextPanes = [\n        ...routerPaneGroups.slice(0, groupIndex),\n        nextGroup,\n        ...routerPaneGroups.slice(groupIndex + 1),\n      ]\n      const nextRouterState = {...routerState, panes: nextPanes}\n\n      return nextRouterState\n    },\n    [groupIndex, routerPaneGroups, routerState, siblingIndex],\n  )\n\n  const modifyCurrentGroup = useCallback(\n    (modifier: (siblings: RouterPaneGroup, item: RouterPaneSibling) => RouterPaneGroup) => {\n      const nextRouterState = createNextRouterState(modifier)\n      setTimeout(() => navigate(nextRouterState), 0)\n      return nextRouterState\n    },\n    [createNextRouterState, navigate],\n  )\n\n  const createPathWithParams: PaneRouterContextValue['createPathWithParams'] = useCallback(\n    (nextParams) => {\n      const nextRouterState = createNextRouterState((siblings, item) => [\n        ...siblings.slice(0, siblingIndex),\n        {...item, params: nextParams},\n        ...siblings.slice(siblingIndex + 1),\n      ])\n\n      return resolvePathFromState(nextRouterState)\n    },\n    [createNextRouterState, resolvePathFromState, siblingIndex],\n  )\n\n  const setPayload: PaneRouterContextValue['setPayload'] = useCallback(\n    (nextPayload) => {\n      modifyCurrentGroup((siblings, item) => [\n        ...siblings.slice(0, siblingIndex),\n        {...item, payload: nextPayload},\n        ...siblings.slice(siblingIndex + 1),\n      ])\n    },\n    [modifyCurrentGroup, siblingIndex],\n  )\n\n  const setParams: PaneRouterContextValue['setParams'] = useCallback(\n    (nextParams) => {\n      modifyCurrentGroup((siblings, item) => [\n        ...siblings.slice(0, siblingIndex),\n        {...item, params: nextParams},\n        ...siblings.slice(siblingIndex + 1),\n      ])\n    },\n    [modifyCurrentGroup, siblingIndex],\n  )\n\n  const handleEditReference: PaneRouterContextValue['handleEditReference'] = useCallback(\n    ({id, parentRefPath, type, template, version}) => {\n      navigate({\n        panes: [\n          ...routerPaneGroups.slice(0, groupIndex + 1),\n          [\n            {\n              id,\n              params: {\n                template: template.id,\n                parentRefPath: pathToString(parentRefPath),\n                type,\n                version,\n              },\n              payload: template.params,\n            },\n          ],\n        ],\n      })\n    },\n    [groupIndex, navigate, routerPaneGroups],\n  )\n\n  const ctx: PaneRouterContextValue = useMemo(\n    () => ({\n      // Zero-based index (position) of pane, visually\n      index: flatIndex,\n\n      // Zero-based index of pane group (within URL structure)\n      groupIndex,\n\n      // Zero-based index of pane within sibling group\n      siblingIndex,\n\n      // Payload of the current pane\n      payload,\n\n      // Params of the current pane\n      params,\n\n      // Whether or not the pane has any siblings (within the same group)\n      hasGroupSiblings: routerPaneGroups[groupIndex]\n        ? routerPaneGroups[groupIndex].length > 1\n        : false,\n\n      // The length of the current group\n      groupLength: routerPaneGroups[groupIndex] ? routerPaneGroups[groupIndex].length : 0,\n\n      // Current router state for the \"panes\" property\n      routerPanesState: routerPaneGroups,\n\n      // Curried StateLink that passes the correct state automatically\n      ChildLink,\n\n      // Curried StateLink that pops off the last pane group\n      // Only pass if this is not the first pane\n      BackLink: flatIndex ? BackLink : undefined,\n\n      // A specialized `ChildLink` that takes in the needed props to open a\n      // referenced document to the right\n      ReferenceChildLink,\n\n      // Similar to `ReferenceChildLink` expect without the wrapping component\n      handleEditReference,\n\n      // Curried StateLink that passed the correct state, but merges params/payload\n      ParameterizedLink,\n\n      // Replaces the current pane with a new one\n      replaceCurrent: (opts = {}): void => {\n        modifyCurrentGroup(() => [\n          {id: opts.id || '', payload: opts.payload, params: opts.params || {}},\n        ])\n      },\n\n      // Removes the current pane from the group\n      closeCurrent: (): void => {\n        modifyCurrentGroup((siblings, item) =>\n          siblings.length > 1 ? siblings.filter((sibling) => sibling !== item) : siblings,\n        )\n      },\n\n      // Removes all panes to the right including current\n      closeCurrentAndAfter: (expandLast = true): void => {\n        if (expandLast && lastPane) {\n          expand(lastPane.element)\n        }\n        navigate({\n          panes: routerPaneGroups.slice(0, groupIndex),\n        })\n      },\n\n      // Duplicate the current pane, with optional overrides for payload, parameters\n      duplicateCurrent: (options): void => {\n        modifyCurrentGroup((siblings, item) => {\n          const duplicatedItem = {\n            ...item,\n            payload: options?.payload || item.payload,\n            params: options?.params || item.params,\n          }\n\n          return [\n            ...siblings.slice(0, siblingIndex),\n            duplicatedItem,\n            ...siblings.slice(siblingIndex),\n          ]\n        })\n      },\n\n      // Set the view for the current pane\n      setView: (viewId) => {\n        const restParams = omit(params, 'view')\n        return setParams(viewId ? {...restParams, view: viewId} : restParams)\n      },\n\n      // Set the parameters for the current pane\n      setParams,\n\n      // Set the payload for the current pane\n      setPayload,\n\n      // A function that returns a path with the given parameters\n      createPathWithParams,\n\n      // Proxied navigation to a given intent. Consider just exposing `router` instead?\n      navigateIntent,\n    }),\n    [\n      flatIndex,\n      groupIndex,\n      siblingIndex,\n      payload,\n      params,\n      routerPaneGroups,\n      handleEditReference,\n      setParams,\n      setPayload,\n      createPathWithParams,\n      navigateIntent,\n      modifyCurrentGroup,\n      lastPane,\n      navigate,\n      expand,\n    ],\n  )\n\n  return <PaneRouterContext.Provider value={ctx}>{children}</PaneRouterContext.Provider>\n}\n","import {Box, Text} from '@sanity/ui'\nimport {isRecord, Translate, useTranslation} from 'sanity'\n\nimport {Pane, PaneContent, PaneHeader} from '../../components/pane'\nimport {structureLocaleNamespace} from '../../i18n'\n\ninterface UnknownPaneProps {\n  isSelected: boolean\n  pane: unknown\n  paneKey: string\n}\n\n/**\n * @internal\n */\nexport function UnknownPane(props: UnknownPaneProps) {\n  const {isSelected, pane, paneKey} = props\n  const type = (isRecord(pane) && pane.type) || null\n  const {t} = useTranslation(structureLocaleNamespace)\n  return (\n    <Pane id={paneKey} selected={isSelected}>\n      <PaneHeader title={t('panes.unknown-pane-type.title')} />\n      <PaneContent>\n        <Box padding={4}>\n          {typeof type === 'string' ? (\n            <Text as=\"p\" muted>\n              <Translate\n                t={t}\n                i18nKey=\"panes.unknown-pane-type.unknown-type.text\"\n                values={{type}}\n              />\n            </Text>\n          ) : (\n            <Text as=\"p\" muted>\n              <Translate t={t} i18nKey=\"panes.unknown-pane-type.missing-type.text\" />\n            </Text>\n          )}\n        </Box>\n      </PaneContent>\n    </Pane>\n  )\n}\n","import {isEqual} from 'lodash'\nimport {lazy, memo, Suspense} from 'react'\n\nimport {PaneRouterProvider} from '../components/paneRouter'\nimport {type PaneNode} from '../types'\nimport {LoadingPane} from './loading'\nimport {UnknownPane} from './unknown'\n\ninterface StructureToolPaneProps {\n  active: boolean\n  childItemId: string | null\n  groupIndex: number\n  index: number\n  itemId: string\n  pane: PaneNode\n  paneKey: string\n  params: Record<string, string | undefined> & {perspective?: string}\n  payload: unknown\n  path: string\n  selected: boolean\n  siblingIndex: number\n}\n\n// TODO: audit this creates separate chunks\nconst paneMap = {\n  component: lazy(() => import('./userComponent')),\n  document: lazy(() => import('./document/pane')),\n  documentList: lazy(() => import('./documentList/pane')),\n  list: lazy(() => import('./list')),\n}\n\n/**\n * NOTE: The same pane might appear multiple times (split pane), so use index as tiebreaker\n *\n * @internal\n */\nexport const StructureToolPane = memo(\n  function StructureToolPane(props: StructureToolPaneProps) {\n    const {\n      active,\n      childItemId,\n      groupIndex,\n      index,\n      itemId,\n      pane,\n      paneKey,\n      params,\n      payload,\n      path,\n      selected,\n      siblingIndex,\n    } = props\n\n    const PaneComponent = paneMap[pane.type] || UnknownPane\n\n    return (\n      <PaneRouterProvider\n        flatIndex={index}\n        index={groupIndex}\n        params={params}\n        payload={payload}\n        siblingIndex={siblingIndex}\n      >\n        <Suspense fallback={<LoadingPane paneKey={paneKey} path={path} selected={selected} />}>\n          <PaneComponent\n            childItemId={childItemId || ''}\n            index={index}\n            itemId={itemId}\n            isActive={active}\n            isSelected={selected}\n            paneKey={paneKey}\n            // @ts-expect-error TS doesn't know how to handle this intersection\n            pane={pane}\n          />\n        </Suspense>\n      </PaneRouterProvider>\n    )\n  },\n  (\n    {params: prevParams = {}, payload: prevPayload = null, ...prev},\n    {params: nextParams = {}, payload: nextPayload = null, ...next},\n  ) => {\n    // deeply compare these objects (it's okay, they're small)\n    if (!isEqual(prevParams, nextParams)) return false\n    if (!isEqual(prevPayload, nextPayload)) return false\n\n    const keys = new Set([...Object.keys(prev), ...Object.keys(next)]) as Set<\n      keyof typeof next | keyof typeof prev\n    >\n\n    // then shallow equal the rest\n    for (const key of keys) {\n      if (prev[key] !== next[key]) return false\n    }\n\n    return true\n  },\n)\n","import {type SanityDocumentLike} from '@sanity/types'\nimport {useSchema, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../i18n'\nimport {useDocumentTitle} from '../panes'\n\nexport interface DocTitleProps {\n  document: SanityDocumentLike\n}\n\nexport function DocTitle(props: DocTitleProps) {\n  const {document: documentValue} = props\n  const schema = useSchema()\n  const schemaType = schema.get(documentValue._type)\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {title} = useDocumentTitle()\n\n  if (!schemaType) {\n    return <code>{t('doc-title.unknown-schema-type.text', {schemaType: documentValue._type})}</code>\n  }\n\n  return (\n    <>\n      {title || (\n        <span style={{color: 'var(--card-muted-fg-color)'}}>{t('doc-title.fallback.text')}</span>\n      )}\n    </>\n  )\n}\n","import {InfoOutlineIcon} from '@sanity/icons'\nimport {Box, Flex, Inline, rem, Text} from '@sanity/ui'\nimport {useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Tooltip} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\n\nexport const ChevronWrapper = styled(Box)`\n  margin-left: auto;\n`\n\nexport const CrossDatasetReferencesDetails = styled.details`\n  flex: none;\n\n  &[open] ${ChevronWrapper} {\n    transform: rotate(180deg);\n  }\n`\n\nexport const CrossDatasetReferencesSummary = styled.summary`\n  list-style: none;\n\n  &::-webkit-details-marker {\n    display: none;\n  }\n`\n\nexport const Table = styled.table`\n  width: 100%;\n  text-align: left;\n  padding: 0 ${({theme}) => rem(theme.sanity.space[2])};\n  border-collapse: collapse;\n\n  th {\n    padding: ${({theme}) => rem(theme.sanity.space[1])};\n  }\n\n  td {\n    padding: 0 ${({theme}) => rem(theme.sanity.space[1])};\n  }\n\n  tr > *:last-child {\n    text-align: right;\n  }\n`\n\nexport const DocumentIdFlex = styled(Flex)`\n  min-height: 33px;\n`\n\nexport const OtherReferenceCount = (props: {totalCount: number; references: unknown[]}) => {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const difference = props.totalCount - props.references.length\n\n  if (!difference) return null\n\n  return (\n    <Box padding={2}>\n      <Inline space={2}>\n        <Text size={1} muted>\n          {t('confirm-delete-dialog.other-reference-count.title', {count: difference})}\n        </Text>\n\n        <Tooltip\n          portal\n          placement=\"top\"\n          content={t('confirm-delete-dialog.other-reference-count.tooltip')}\n        >\n          <Text size={1} muted>\n            <InfoOutlineIcon />\n          </Text>\n        </Tooltip>\n      </Inline>\n    </Box>\n  )\n}\n","import {type SanityDocument, type SchemaType} from '@sanity/types'\nimport {Flex} from '@sanity/ui'\nimport {type ComponentType, useMemo} from 'react'\nimport {useObservable} from 'react-rx'\nimport {\n  type DocumentPresence,\n  DocumentPreviewPresence,\n  type DocumentPreviewStore,\n  DocumentStatus,\n  DocumentStatusIndicator,\n  type GeneralPreviewLayoutKey,\n  getPreviewStateObservable,\n  getPreviewValueWithFallback,\n  SanityDefaultPreview,\n  useDocumentVersionInfo,\n  usePerspective,\n} from 'sanity'\n\nimport {TooltipDelayGroupProvider} from '../../../ui-components'\n\nexport interface PaneItemPreviewProps {\n  documentPreviewStore: DocumentPreviewStore\n  icon: ComponentType | false\n  layout: GeneralPreviewLayoutKey\n  presence?: DocumentPresence[]\n  schemaType: SchemaType\n  value: SanityDocument\n}\n\n/**\n * Preview component for _documents_ rendered in structure panes.\n *\n * Note that non-document previews are not handled by this component,\n * despite being pane items! Non-document previews bypass this entirely\n * and are rendered by `<SanityDefaultPreview>`.\n */\nexport function PaneItemPreview(props: PaneItemPreviewProps) {\n  const {icon, layout, presence, schemaType, value} = props\n\n  const versionsInfo = useDocumentVersionInfo(value._id)\n\n  const {perspectiveStack} = usePerspective()\n  const previewStateObservable = useMemo(() => {\n    return getPreviewStateObservable(\n      props.documentPreviewStore,\n      schemaType,\n      value._id,\n      perspectiveStack,\n    )\n  }, [props.documentPreviewStore, schemaType, value._id, perspectiveStack])\n\n  const {\n    snapshot,\n    original,\n    isLoading: previewIsLoading,\n  } = useObservable(previewStateObservable, {\n    snapshot: null,\n    isLoading: true,\n    original: null,\n  })\n\n  const isLoading = previewIsLoading\n\n  const status = isLoading ? null : (\n    <TooltipDelayGroupProvider>\n      <Flex align=\"center\" gap={3}>\n        {presence && presence.length > 0 && <DocumentPreviewPresence presence={presence} />}\n        <DocumentStatusIndicator\n          draft={versionsInfo.draft}\n          published={versionsInfo.published}\n          versions={versionsInfo.versions}\n        />\n      </Flex>\n    </TooltipDelayGroupProvider>\n  )\n\n  const tooltip = (\n    <DocumentStatus\n      draft={versionsInfo.draft}\n      published={versionsInfo.published}\n      versions={versionsInfo.versions}\n    />\n  )\n\n  return (\n    <SanityDefaultPreview\n      {...getPreviewValueWithFallback({snapshot, original, fallback: value})}\n      isPlaceholder={isLoading}\n      icon={icon}\n      layout={layout}\n      status={status}\n      tooltip={tooltip}\n    />\n  )\n}\n","import {type SanityDocument, type SchemaType} from '@sanity/types'\nimport {type ReactNode, useCallback} from 'react'\nimport {\n  type FIXME,\n  getPublishedId,\n  PreviewCard,\n  useDocumentPresence,\n  useDocumentPreviewStore,\n} from 'sanity'\n\nimport {PaneItemPreview} from '../paneItem/PaneItemPreview'\nimport {usePaneRouter} from '../paneRouter'\n\nconst EMPTY_ARRAY: [] = []\n\ninterface ReferencePreviewLinkProps {\n  onClick?: () => void\n  type: SchemaType & {icon?: any}\n  value: SanityDocument\n}\n\nexport function ReferencePreviewLink(props: ReferencePreviewLinkProps) {\n  const {onClick, type, value} = props\n  const publishedId = getPublishedId(value?._id)\n  const documentPresence = useDocumentPresence(publishedId)\n  const documentPreviewStore = useDocumentPreviewStore()\n  const {ReferenceChildLink} = usePaneRouter()\n\n  const Link = useCallback(\n    function LinkComponent(linkProps: {children: ReactNode}) {\n      return (\n        <ReferenceChildLink\n          documentId={value?._id}\n          documentType={type?.name}\n          parentRefPath={EMPTY_ARRAY}\n          {...linkProps}\n        />\n      )\n    },\n    [ReferenceChildLink, type?.name, value?._id],\n  )\n\n  return (\n    <PreviewCard __unstable_focusRing as={Link as FIXME} data-as=\"a\" onClick={onClick} radius={2}>\n      <PaneItemPreview\n        documentPreviewStore={documentPreviewStore}\n        icon={type?.icon}\n        layout=\"compact\"\n        presence={documentPresence?.length > 0 ? documentPresence : EMPTY_ARRAY}\n        schemaType={type}\n        value={value}\n      />\n    </PreviewCard>\n  )\n}\n","import {\n  ChevronDownIcon,\n  CopyIcon,\n  DocumentsIcon,\n  UnknownIcon,\n  WarningOutlineIcon,\n} from '@sanity/icons'\nimport {Box, Card, Flex, Stack, Text, useToast} from '@sanity/ui'\nimport {useCallback} from 'react'\nimport {SanityDefaultPreview, Translate, useSchema, useTranslation} from 'sanity'\n\nimport {Button} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {\n  ChevronWrapper,\n  CrossDatasetReferencesDetails,\n  CrossDatasetReferencesSummary,\n  DocumentIdFlex,\n  OtherReferenceCount,\n  Table,\n} from './ConfirmDeleteDialogBody.styles'\nimport {ReferencePreviewLink} from './ReferencePreviewLink'\nimport {type ReferringDocuments} from './useReferringDocuments'\n\ntype DeletionConfirmationDialogBodyProps = Required<ReferringDocuments> & {\n  documentTitle: React.ReactNode\n  action: 'unpublish' | 'delete'\n  onReferenceLinkClick?: () => void\n}\n\n/**\n * The inner part of the `ConfirmDeleteDialog`. This is ran when both the\n * `crossDatasetReferences` and `internalReferences` are loaded.\n */\nexport function ConfirmDeleteDialogBody({\n  crossDatasetReferences,\n  internalReferences,\n  documentTitle,\n  totalCount,\n  action,\n  datasetNames,\n  hasUnknownDatasetNames,\n  onReferenceLinkClick,\n}: DeletionConfirmationDialogBodyProps) {\n  const schema = useSchema()\n  const toast = useToast()\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const renderPreviewItem = useCallback(\n    (item: any) => {\n      const type = schema.get(item._type)\n      if (type) {\n        return <ReferencePreviewLink type={type} value={item} onClick={onReferenceLinkClick} />\n      }\n\n      return (\n        // Padding added to match the ReferencePreviewLink styling\n        <Box padding={2}>\n          <SanityDefaultPreview\n            icon={UnknownIcon}\n            title={t('confirm-delete-dialog.preview-item.preview-unavailable.title')}\n            subtitle={t('confirm-delete-dialog.preview-item.preview-unavailable.subtitle', {\n              documentId: item._id,\n            })}\n            layout=\"default\"\n          />\n        </Box>\n      )\n    },\n    [schema, t, onReferenceLinkClick],\n  )\n\n  if (internalReferences?.totalCount === 0 && crossDatasetReferences?.totalCount === 0) {\n    return (\n      <Text as=\"p\" size={1}>\n        <Translate\n          t={t}\n          i18nKey=\"confirm-delete-dialog.confirmation.text\"\n          context={action}\n          components={{DocumentTitle: () => <strong>{documentTitle}</strong>}}\n        />\n      </Text>\n    )\n  }\n\n  // We do some extra checks to handle cases where you have unavailable dataset\n  // name(s) due to permissions, both alone and in combination with known datasets\n\n  // This normalizes one or more undefined dataset names to the catch-all `unavailable`\n  const normalizedDatasetNames = [\n    ...datasetNames,\n    ...(hasUnknownDatasetNames ? ['unavailable'] : []),\n  ]\n\n  const datasetSubtitle = t('confirm-delete-dialog.cdr-summary.subtitle', {\n    count: normalizedDatasetNames.length,\n    datasets: normalizedDatasetNames.join(', '),\n    context: hasUnknownDatasetNames && normalizedDatasetNames.length ? 'unavailable' : '',\n  })\n\n  return (\n    <Flex direction=\"column\" gap={4}>\n      <Card padding={3} radius={2} tone=\"caution\" flex=\"none\">\n        <Flex>\n          <Text aria-hidden=\"true\" size={1}>\n            <WarningOutlineIcon />\n          </Text>\n          <Box flex={1} marginLeft={3}>\n            <Text size={1}>\n              <Translate\n                i18nKey=\"confirm-delete-dialog.referring-document-count.text\"\n                components={{DocumentTitle: () => documentTitle}}\n                t={t}\n                values={{count: totalCount}}\n              />\n            </Text>\n          </Box>\n        </Flex>\n      </Card>\n      <Box flex=\"none\">\n        <Text size={1}>\n          <Translate\n            i18nKey=\"confirm-delete-dialog.referring-documents-descriptor.text\"\n            t={t}\n            context={action}\n            components={{DocumentTitle: () => documentTitle}}\n          />\n        </Text>\n      </Box>\n      <Card radius={2} shadow={1} flex=\"auto\" padding={2}>\n        <Flex direction=\"column\">\n          {internalReferences.totalCount > 0 && (\n            <Stack as=\"ul\" marginBottom={2} space={2} data-testid=\"internal-references\">\n              {internalReferences?.references.map((item) => (\n                <Box key={item._id} as=\"li\">\n                  {renderPreviewItem(item)}\n                </Box>\n              ))}\n\n              {internalReferences.totalCount > internalReferences.references.length && (\n                <Box as=\"li\" padding={3}>\n                  <OtherReferenceCount {...internalReferences} />\n                </Box>\n              )}\n            </Stack>\n          )}\n\n          {crossDatasetReferences.totalCount > 0 && (\n            <CrossDatasetReferencesDetails\n              data-testid=\"cross-dataset-references\"\n              style={{\n                // only add the border if needed\n                borderTop:\n                  internalReferences.totalCount > 0\n                    ? '1px solid var(--card-shadow-outline-color)'\n                    : undefined,\n              }}\n            >\n              <CrossDatasetReferencesSummary>\n                <Card\n                  as=\"a\"\n                  marginTop={internalReferences.totalCount > 0 ? 2 : 0}\n                  radius={2}\n                  shadow={1}\n                  paddingY={1}\n                >\n                  <Flex align=\"center\" gap={3} paddingX={3} paddingY={1}>\n                    <Text size={1}>\n                      <DocumentsIcon />\n                    </Text>\n                    <Stack space={2}>\n                      <Text textOverflow=\"ellipsis\" size={1}>\n                        {t('confirm-delete-dialog.cdr-summary.title', {\n                          count: normalizedDatasetNames.length,\n                          documentCount: t('confirm-delete-dialog.cdr-summary.document-count', {\n                            count: crossDatasetReferences.totalCount,\n                          }),\n                        })}\n                      </Text>\n                      <Text title={datasetSubtitle} textOverflow=\"ellipsis\" size={1} muted>\n                        {datasetSubtitle}\n                      </Text>\n                    </Stack>\n                    <ChevronWrapper>\n                      <Text muted size={1}>\n                        <ChevronDownIcon />\n                      </Text>\n                    </ChevronWrapper>\n                  </Flex>\n                </Card>\n              </CrossDatasetReferencesSummary>\n\n              <Box overflow=\"auto\" paddingTop={2}>\n                <Table>\n                  <thead>\n                    <tr>\n                      <th>\n                        <Text muted size={1} style={{minWidth: '5rem'}} weight=\"medium\">\n                          {t('confirm-delete-dialog.cdr-table.project-id.label')}\n                        </Text>\n                      </th>\n                      <th>\n                        <Text muted size={1} weight=\"medium\">\n                          {t('confirm-delete-dialog.cdr-table.dataset.label')}\n                        </Text>\n                      </th>\n                      <th>\n                        <Text muted size={1} weight=\"medium\">\n                          {t('confirm-delete-dialog.cdr-table.document-id.label')}\n                        </Text>\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {crossDatasetReferences.references\n                      .filter((reference): reference is Required<typeof reference> => {\n                        return 'projectId' in reference\n                      })\n                      .map(({projectId, datasetName, documentId}, index) => (\n                        <tr key={`${documentId}-${index}`}>\n                          <td>\n                            <Text size={1}>{projectId}</Text>\n                          </td>\n                          <td>\n                            <Text size={1}>{datasetName || 'unavailable'}</Text>\n                          </td>\n                          <td>\n                            <DocumentIdFlex align=\"center\" gap={2} justify=\"flex-end\">\n                              <Text textOverflow=\"ellipsis\" size={1}>\n                                {documentId || 'unavailable'}\n                              </Text>\n                              {documentId && (\n                                <Button\n                                  mode=\"bleed\"\n                                  icon={CopyIcon}\n                                  tooltipProps={{\n                                    content: t(\n                                      'confirm-delete-dialog.cdr-table.copy-id-button.tooltip',\n                                    ),\n                                  }}\n                                  onClick={() => {\n                                    navigator.clipboard.writeText(documentId).catch(() => {\n                                      toast.push({\n                                        status: 'error',\n                                        title: t(\n                                          'confirm-delete-dialog.cdr-table.id-copied-toast.title-failed',\n                                        ),\n                                      })\n                                    })\n                                  }}\n                                />\n                              )}\n                            </DocumentIdFlex>\n                          </td>\n                        </tr>\n                      ))}\n                  </tbody>\n                </Table>\n\n                <OtherReferenceCount {...crossDatasetReferences} />\n              </Box>\n            </CrossDatasetReferencesDetails>\n          )}\n        </Flex>\n      </Card>\n      <Box flex=\"none\">\n        <Text size={1}>\n          <Translate\n            i18nKey=\"confirm-delete-dialog.referential-integrity-disclaimer.text\"\n            t={t}\n            context={action}\n            components={{DocumentTitle: () => documentTitle}}\n          />\n        </Text>\n      </Box>\n    </Flex>\n  )\n}\n","import {type ClientError, type SanityClient} from '@sanity/client'\nimport {useMemo} from 'react'\nimport {EMPTY, fromEvent, type Observable, of, timer} from 'rxjs'\nimport {\n  catchError,\n  distinctUntilChanged,\n  map,\n  shareReplay,\n  startWith,\n  switchMap,\n} from 'rxjs/operators'\nimport {\n  type AvailabilityResponse,\n  createHookFromObservableFactory,\n  DEFAULT_STUDIO_CLIENT_OPTIONS,\n  type DocumentStore,\n  getDraftId,\n  getPublishedId,\n  useClient,\n  useDocumentStore,\n} from 'sanity'\n\n// this is used in place of `instanceof` so the matching can be more robust and\n// won't have any issues with dual packages etc\n// https://nodejs.org/api/packages.html#dual-package-hazard\nfunction isClientError(e: unknown): e is ClientError {\n  if (typeof e !== 'object') return false\n  if (!e) return false\n  return 'statusCode' in e && 'response' in e\n}\n\nconst POLL_INTERVAL = 5000\n\n// only fetches when the document is visible\nlet visiblePoll$: Observable<number>\nconst getVisiblePoll$ = () => {\n  if (!visiblePoll$) {\n    visiblePoll$ = fromEvent(document, 'visibilitychange').pipe(\n      // add empty emission to have this fire on creation\n      startWith(null),\n      map(() => document.visibilityState === 'visible'),\n      distinctUntilChanged(),\n      switchMap((visible) =>\n        visible\n          ? // using timer instead of interval since timer will emit on creation\n            timer(0, POLL_INTERVAL)\n          : EMPTY,\n      ),\n      shareReplay({refCount: true, bufferSize: 1}),\n    )\n  }\n  return visiblePoll$\n}\n\nexport type ReferringDocuments = {\n  isLoading: boolean\n  totalCount: number\n  projectIds: string[]\n  datasetNames: string[]\n  hasUnknownDatasetNames: boolean\n  internalReferences?: {\n    totalCount: number\n    references: Array<{_id: string; _type: string}>\n  }\n  crossDatasetReferences?: {\n    totalCount: number\n    references: Array<{\n      /**\n       * The project ID of the document that is currently referencing the subject\n       * document. Unlike `documentId` and `datasetName`, this should always be\n       * defined.\n       */\n      projectId: string\n      /**\n       * The ID of the document that is currently referencing the subject\n       * document. This will be omitted if there is no access to the current\n       * project and dataset pair (e.g. if no `sanity-project-token` were\n       * configured)\n       */\n      documentId?: string\n      /**\n       * The dataset name that is currently referencing the subject document.\n       * This will be omitted if there is no access to the current project and\n       * dataset pair (e.g. if no `sanity-project-token` were configured)\n       */\n      datasetName?: string\n    }>\n  }\n}\n\nfunction getDocumentExistence(\n  documentId: string,\n  {versionedClient}: {versionedClient: SanityClient},\n): Observable<string | undefined> {\n  const draftId = getDraftId(documentId)\n  const publishedId = getPublishedId(documentId)\n  const requestOptions = {\n    uri: versionedClient.getDataUrl('doc', `${draftId},${publishedId}`),\n    json: true,\n    query: {excludeContent: 'true'},\n    tag: 'use-referring-documents.document-existence',\n  }\n  return versionedClient.observable.request<AvailabilityResponse>(requestOptions).pipe(\n    map(({omitted}) => {\n      const nonExistant = omitted.filter((doc) => doc.reason === 'existence')\n      if (nonExistant.length === 2) {\n        // None of the documents exist\n        return undefined\n      }\n\n      if (nonExistant.length === 0) {\n        // Both exist, so use the published one\n        return publishedId\n      }\n\n      // If the draft does not exist, use the published ID, and vice versa\n      return nonExistant.some((doc) => doc.id === draftId) ? publishedId : draftId\n    }),\n  )\n}\n\n/**\n * fetches the cross-dataset references using the client observable.request\n * method (for that requests can be automatically cancelled)\n */\nfunction fetchCrossDatasetReferences(\n  documentId: string,\n  context: {versionedClient: SanityClient},\n): Observable<ReferringDocuments['crossDatasetReferences']> {\n  const {versionedClient} = context\n\n  return getVisiblePoll$().pipe(\n    switchMap(() => getDocumentExistence(documentId, context)),\n    switchMap((checkDocumentId) => {\n      if (!checkDocumentId) {\n        return of({totalCount: 0, references: []})\n      }\n\n      const currentDataset = versionedClient.config().dataset\n\n      return versionedClient.observable\n        .request({\n          url: `/data/references/${currentDataset}/documents/${checkDocumentId}/to?excludeInternalReferences=true&excludePaths=true`,\n          tag: 'use-referring-documents.external',\n        })\n        .pipe(\n          catchError((e) => {\n            // it's possible that referencing document doesn't exist yet so the\n            // API will return a 404. In those cases, we want to catch and return\n            // a response with no references\n            if (isClientError(e) && e.statusCode === 404) {\n              return of({totalCount: 0, references: []})\n            }\n\n            throw e\n          }),\n        )\n    }),\n  )\n}\n\nconst useInternalReferences = createHookFromObservableFactory(\n  ([documentId, documentStore]: [string, DocumentStore]) => {\n    const referencesClause = '*[references($documentId)][0...100]{_id,_type}'\n    const totalClause = 'count(*[references($documentId)])'\n    const fetchQuery = `{\"references\":${referencesClause},\"totalCount\":${totalClause}}`\n    const listenQuery = '*[references($documentId)]'\n\n    return documentStore.listenQuery(\n      {fetch: fetchQuery, listen: listenQuery},\n      {documentId},\n      {tag: 'use-referring-documents', transitions: ['appear', 'disappear'], throttleTime: 5000},\n    ) as Observable<ReferringDocuments['internalReferences']>\n  },\n)\n\nconst useCrossDatasetReferences = createHookFromObservableFactory(\n  ([documentId, versionedClient]: [string, SanityClient]) => {\n    // (documentId: string, versionedClient: SanityClient) => {\n    return getVisiblePoll$().pipe(\n      switchMap(() =>\n        fetchCrossDatasetReferences(documentId, {\n          versionedClient,\n        }),\n      ),\n    )\n  },\n)\n\nexport function useReferringDocuments(documentId: string): ReferringDocuments {\n  const versionedClient = useClient(DEFAULT_STUDIO_CLIENT_OPTIONS)\n\n  const documentStore = useDocumentStore()\n  const publishedId = getPublishedId(documentId)\n\n  const [internalReferences, isInternalReferencesLoading] = useInternalReferences(\n    useMemo(() => [publishedId, documentStore], [documentStore, publishedId]),\n  )\n\n  const [crossDatasetReferences, isCrossDatasetReferencesLoading] = useCrossDatasetReferences(\n    useMemo(() => [publishedId, versionedClient], [publishedId, versionedClient]),\n  )\n\n  const projectIds = useMemo(() => {\n    return Array.from(\n      new Set(\n        crossDatasetReferences?.references\n          .map((crossDatasetReference) => crossDatasetReference.projectId)\n          .filter(Boolean),\n      ),\n    ).sort()\n  }, [crossDatasetReferences?.references])\n\n  const datasetNames = useMemo(() => {\n    return Array.from(\n      new Set<string>(\n        crossDatasetReferences?.references\n          // .filter((name) => typeof name === 'string')\n          .map((crossDatasetReference) => crossDatasetReference?.datasetName || '')\n          .filter((datasetName) => Boolean(datasetName) && datasetName !== ''),\n      ),\n    ).sort()\n  }, [crossDatasetReferences?.references])\n\n  const hasUnknownDatasetNames = useMemo(() => {\n    return Boolean(\n      crossDatasetReferences?.references.some(\n        (crossDatasetReference) => typeof crossDatasetReference.datasetName !== 'string',\n      ),\n    )\n  }, [crossDatasetReferences?.references])\n\n  return {\n    totalCount: (internalReferences?.totalCount || 0) + (crossDatasetReferences?.totalCount || 0),\n    projectIds,\n    datasetNames,\n    hasUnknownDatasetNames,\n    internalReferences,\n    crossDatasetReferences,\n    isLoading: isInternalReferencesLoading || isCrossDatasetReferencesLoading,\n  }\n}\n","import {Box, Flex} from '@sanity/ui'\nimport {useId, useMemo} from 'react'\nimport {LoadingBlock, useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Dialog} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {DocTitle} from '../DocTitle'\nimport {ConfirmDeleteDialogBody} from './ConfirmDeleteDialogBody'\nimport {useReferringDocuments} from './useReferringDocuments'\n\n/** @internal */\nexport const DialogBody = styled(Box)`\n  box-sizing: border-box;\n`\n\n/** @internal */\nexport const LoadingContainer = styled(Flex).attrs({\n  align: 'center',\n  direction: 'column',\n  justify: 'center',\n})`\n  height: 110px;\n`\n\n/** @internal */\nexport interface ConfirmDeleteDialogProps {\n  /**\n   * Incoming document ID used to find other referencing documents. This\n   * field respects draft IDs (e.g. if you pass in a published ID when one\n   * doesn't exist the document title may not show up).\n   */\n  id: string\n  /**\n   * The schema typename of the incoming document\n   */\n  type: string\n  /**\n   * The name of the action being done. (e.g. the `'unpublish'` action requires\n   * the same document deletion confirmation).\n   */\n  action?: 'delete' | 'unpublish'\n  onCancel: () => void\n  onConfirm: () => void\n}\n\n/**\n * A confirmation dialog used to prevent unwanted document deletes. Loads all\n * the referencing internal and cross-data references prior to showing the\n * delete button.\n *\n * @internal\n */\nexport function ConfirmDeleteDialog({\n  id,\n  type,\n  action = 'delete',\n  onCancel,\n  onConfirm,\n}: ConfirmDeleteDialogProps) {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const dialogId = `deletion-confirmation-${useId()}`\n  const {\n    internalReferences,\n    crossDatasetReferences,\n    isLoading,\n    totalCount,\n    projectIds,\n    datasetNames,\n    hasUnknownDatasetNames,\n  } = useReferringDocuments(id)\n  const documentTitle = <DocTitle document={useMemo(() => ({_id: id, _type: type}), [id, type])} />\n  const showConfirmButton = !isLoading\n\n  return (\n    <Dialog\n      width={1}\n      id={dialogId}\n      header={t('confirm-delete-dialog.header.text', {context: action})}\n      footer={{\n        cancelButton: {\n          onClick: onCancel,\n          text: t('confirm-delete-dialog.cancel-button.text'),\n        },\n        confirmButton: showConfirmButton\n          ? {\n              text:\n                totalCount > 0\n                  ? t('confirm-delete-dialog.confirm-anyway-button.text', {context: action})\n                  : t('confirm-delete-dialog.confirm-button.text', {context: action}),\n              onClick: onConfirm,\n            }\n          : undefined,\n      }}\n      onClose={onCancel}\n      onClickOutside={onCancel}\n    >\n      <DialogBody>\n        {crossDatasetReferences && internalReferences && !isLoading ? (\n          <ConfirmDeleteDialogBody\n            crossDatasetReferences={crossDatasetReferences}\n            internalReferences={internalReferences}\n            documentTitle={documentTitle}\n            isLoading={isLoading}\n            totalCount={totalCount}\n            action={action}\n            projectIds={projectIds}\n            datasetNames={datasetNames}\n            hasUnknownDatasetNames={hasUnknownDatasetNames}\n            onReferenceLinkClick={onCancel}\n          />\n        ) : (\n          <LoadingContainer data-testid=\"loading-container\">\n            <LoadingBlock showText title={t('confirm-delete-dialog.loading.text')} />\n          </LoadingContainer>\n        )}\n      </DialogBody>\n    </Dialog>\n  )\n}\n","import {Box, Text} from '@sanity/ui'\nimport {type ComponentProps, useCallback, useId, useState} from 'react'\nimport {useTranslation} from 'sanity'\n\nimport {Dialog, ErrorBoundary} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {ConfirmDeleteDialog, type ConfirmDeleteDialogProps} from './ConfirmDeleteDialog'\n\nexport type {ConfirmDeleteDialogProps}\n\ntype ArgType<T> = T extends (arg: infer U) => unknown ? U : never\ntype ErrorInfo = ArgType<ComponentProps<typeof ErrorBoundary>['onCatch']>\n\n/** @internal */\nfunction ConfirmDeleteDialogContainer(props: ConfirmDeleteDialogProps) {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const id = useId()\n  const [error, setError] = useState<ErrorInfo | null>(null)\n  const handleRetry = useCallback(() => setError(null), [])\n\n  return error ? (\n    <Dialog\n      id={`dialog-error-${id}`}\n      data-testid=\"confirm-delete-error-dialog\"\n      header={t('confirm-delete-dialog.error.title.text')}\n      footer={{\n        confirmButton: {\n          text: t('confirm-delete-dialog.error.retry-button.text'),\n          onClick: handleRetry,\n          tone: 'default',\n        },\n      }}\n      onClose={props.onCancel}\n    >\n      <Box padding={4}>\n        <Text size={1}>{t('confirm-delete-dialog.error.message.text')}</Text>\n      </Box>\n    </Dialog>\n  ) : (\n    <ErrorBoundary onCatch={setError}>\n      <ConfirmDeleteDialog {...props} />\n    </ErrorBoundary>\n  )\n}\n\nexport {ConfirmDeleteDialogContainer as ConfirmDeleteDialog}\n","import {type ComponentProps, type ForwardedRef, forwardRef, type ReactNode, useMemo} from 'react'\nimport {IntentLink} from 'sanity/router'\n\nimport {Button, type ButtonProps} from '../../ui-components'\nimport {type PaneMenuItem} from '../types'\n\ntype RouterIntent = NonNullable<PaneMenuItem['intent']>\n\nexport const IntentButton = forwardRef(function IntentButton(\n  props: {\n    intent: RouterIntent\n  } & ButtonProps &\n    Omit<ComponentProps<typeof Button>, 'as' | 'href' | 'type'>,\n  ref: ForwardedRef<HTMLAnchorElement>,\n) {\n  const {intent, ...restProps} = props\n\n  const Link = useMemo(\n    () =>\n      // eslint-disable-next-line @typescript-eslint/no-shadow\n      forwardRef(function Link(\n        linkProps: {children: ReactNode},\n        linkRef: ForwardedRef<HTMLAnchorElement>,\n      ) {\n        return (\n          <IntentLink\n            {...linkProps}\n            intent={intent.type}\n            params={intent.params}\n            ref={linkRef}\n            searchParams={intent.searchParams}\n          />\n        )\n      }),\n    [intent],\n  )\n\n  return props.disabled ? (\n    <Button {...restProps} as=\"a\" role=\"link\" aria-disabled=\"true\" />\n  ) : (\n    <Button {...restProps} as={Link} data-as=\"a\" ref={ref as ForwardedRef<HTMLButtonElement>} />\n  )\n})\n","import {type ComponentProps, type ReactNode} from 'react'\nimport {InsufficientPermissionsMessage, useCurrentUser, useTranslation} from 'sanity'\n\nimport {Tooltip} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\n\ninterface InsufficientPermissionsMessageTooltipProps {\n  reveal: boolean\n  /**\n   * delegates to `InsufficientPermissionsMessage`'s `context` prop\n   * @see InsufficientPermissionsMessage\n   */\n  context: ComponentProps<typeof InsufficientPermissionsMessage>['context']\n  loading: boolean\n  children: ReactNode\n}\n\nexport function InsufficientPermissionsMessageTooltip({\n  reveal,\n  context,\n  loading,\n  children,\n}: InsufficientPermissionsMessageTooltipProps) {\n  const currentUser = useCurrentUser()\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (!reveal) {\n    return <>{children}</>\n  }\n\n  return (\n    <Tooltip\n      content={\n        loading ? (\n          t('insufficient-permissions-message-tooltip.loading-text')\n        ) : (\n          <InsufficientPermissionsMessage context={context} currentUser={currentUser} />\n        )\n      }\n      portal\n    >\n      {/* this wrapping div is to allow mouse events */}\n      {/* while the child element is disabled */}\n      <div>{children}</div>\n    </Tooltip>\n  )\n}\n","import {AddIcon} from '@sanity/icons'\nimport {Menu} from '@sanity/ui'\nimport {type ComponentProps, type ForwardedRef, forwardRef, useMemo} from 'react'\nimport {\n  type InitialValueTemplateItem,\n  type ReleaseId,\n  type Template,\n  type TemplatePermissionsResult,\n  useGetI18nText,\n  usePerspective,\n  useTemplatePermissions,\n  useTemplates,\n  useTranslation,\n} from 'sanity'\nimport {IntentLink} from 'sanity/router'\n\nimport {Button, MenuButton, MenuItem, type PopoverProps} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {IntentButton} from '../IntentButton'\nimport {InsufficientPermissionsMessageTooltip} from './InsufficientPermissionsMessageTooltip'\n\nexport type PaneHeaderIntentProps = ComponentProps<typeof IntentButton>['intent']\n\nconst POPOVER_PROPS: PopoverProps = {\n  constrainSize: true,\n  placement: 'bottom',\n  portal: true,\n}\n\nconst getIntent = (\n  templates: Template[],\n  item: InitialValueTemplateItem,\n  version?: ReleaseId,\n): PaneHeaderIntentProps | null => {\n  const typeName = templates.find((t) => t.id === item.templateId)?.schemaType\n  if (!typeName) return null\n\n  const baseParams = {\n    template: item.templateId,\n    type: typeName,\n    version,\n    id: item.initialDocumentId,\n  }\n\n  return {\n    type: 'create',\n    params: item.parameters ? [baseParams, item.parameters] : baseParams,\n    searchParams: version ? [['perspective', version]] : undefined,\n  }\n}\n\ninterface PaneHeaderCreateButtonProps {\n  templateItems: InitialValueTemplateItem[]\n}\n\nexport function PaneHeaderCreateButton({templateItems}: PaneHeaderCreateButtonProps) {\n  const templates = useTemplates()\n  const {selectedReleaseId} = usePerspective()\n\n  const {t} = useTranslation(structureLocaleNamespace)\n  const getI18nText = useGetI18nText([...templateItems, ...templates])\n\n  const [templatePermissions, isTemplatePermissionsLoading] = useTemplatePermissions({\n    templateItems,\n  })\n\n  const nothingGranted = useMemo(() => {\n    return (\n      !isTemplatePermissionsLoading &&\n      templatePermissions?.length !== 0 &&\n      templatePermissions?.every((permission) => !permission.granted)\n    )\n  }, [isTemplatePermissionsLoading, templatePermissions])\n\n  const permissionsById = useMemo(() => {\n    if (!templatePermissions) return {}\n    return templatePermissions.reduce<Record<string, TemplatePermissionsResult | undefined>>(\n      (acc, permission) => {\n        acc[permission.id] = permission\n        return acc\n      },\n      {},\n    )\n  }, [templatePermissions])\n\n  if (templateItems.length === 0) return null\n\n  if (nothingGranted) {\n    return (\n      <InsufficientPermissionsMessageTooltip\n        context=\"create-document-type\"\n        reveal\n        loading={isTemplatePermissionsLoading}\n      >\n        <Button\n          aria-label={t('pane-header.disabled-created-button.aria-label')}\n          icon={AddIcon}\n          data-testid=\"action-intent-button\"\n          disabled\n          mode=\"bleed\"\n          // This button handles the tooltip in a special way, won't reuse the forced tooltip.\n          tooltipProps={null}\n        />\n      </InsufficientPermissionsMessageTooltip>\n    )\n  }\n\n  if (templateItems.length === 1) {\n    const firstItem = templateItems[0]\n    const permissions = permissionsById[firstItem.id]\n    const disabled = !permissions?.granted\n    const intent = getIntent(templates, firstItem, selectedReleaseId)\n    if (!intent) return null\n\n    return (\n      <InsufficientPermissionsMessageTooltip\n        reveal={disabled}\n        loading={isTemplatePermissionsLoading}\n        context=\"create-document-type\"\n      >\n        <IntentButton\n          aria-label={getI18nText(firstItem).title}\n          icon={firstItem.icon || AddIcon}\n          intent={intent}\n          mode=\"bleed\"\n          disabled={disabled}\n          data-testid=\"action-intent-button\"\n          tooltipProps={{content: t('pane-header.create-new-button.tooltip')}}\n        />\n      </InsufficientPermissionsMessageTooltip>\n    )\n  }\n\n  return (\n    <MenuButton\n      button={\n        <Button\n          icon={AddIcon}\n          mode=\"bleed\"\n          data-testid=\"multi-action-intent-button\"\n          tooltipProps={{content: t('pane-header.create-new-button.tooltip')}}\n        />\n      }\n      id=\"create-menu\"\n      menu={\n        <Menu>\n          {templateItems.map((item, itemIndex) => {\n            const permissions = permissionsById[item.id]\n            const disabled = !permissions?.granted\n            const intent = getIntent(templates, item, selectedReleaseId)\n            const template = templates.find((i) => i.id === item.templateId)\n            if (!template || !intent) return null\n\n            const Link = forwardRef((linkProps, linkRef: ForwardedRef<never>) =>\n              disabled ? (\n                <button type=\"button\" disabled {...linkProps} ref={linkRef} />\n              ) : (\n                <IntentLink\n                  {...linkProps}\n                  intent={intent.type}\n                  params={intent.params}\n                  searchParams={intent.searchParams}\n                  ref={linkRef}\n                />\n              ),\n            )\n\n            Link.displayName = 'Link'\n\n            const {title} = getI18nText({\n              ...item,\n              // replace the title with the template title\n              title: item.title || getI18nText(template).title,\n            })\n\n            return (\n              <InsufficientPermissionsMessageTooltip\n                key={item.id}\n                context=\"create-document-type\"\n                reveal={disabled}\n                loading={isTemplatePermissionsLoading}\n              >\n                <MenuItem\n                  as={Link}\n                  data-as={disabled ? 'button' : 'a'}\n                  text={title}\n                  aria-label={\n                    disabled ? t('pane-header.disabled-created-button.aria-label') : title\n                  }\n                  disabled={disabled}\n                  data-testid={`action-intent-button-${itemIndex}`}\n                />\n              </InsufficientPermissionsMessageTooltip>\n            )\n          })}\n        </Menu>\n      }\n      popover={POPOVER_PROPS}\n    />\n  )\n}\n","import {Flex} from '@sanity/ui'\nimport {uniqBy} from 'lodash'\nimport {memo, useCallback, useMemo} from 'react'\nimport {EMPTY_ARRAY, EMPTY_OBJECT, type InitialValueTemplateItem, useTemplates} from 'sanity'\n\nimport {isMenuNodeButton, isNotMenuNodeButton, resolveMenuNodes} from '../../menuNodes'\nimport {\n  type PaneMenuItem,\n  type PaneMenuItemGroup,\n  type StructureToolPaneActionHandler,\n} from '../../types'\nimport {PaneContextMenuButton} from '../pane/PaneContextMenuButton'\nimport {PaneHeaderActionButton} from '../pane/PaneHeaderActionButton'\nimport {PaneHeaderCreateButton} from './PaneHeaderCreateButton'\n\nfunction isNonNullable<T>(value: T): value is NonNullable<T> {\n  return value !== null && value !== undefined\n}\n\n/**\n * hashes an object to a string where the order of the keys don't matter\n */\nconst hashObject = (value: unknown) => {\n  const sortObject = (v: unknown): unknown => {\n    if (typeof v !== 'object' || !v) return v\n    if (Array.isArray(v)) return v.map(sortObject)\n    return Object.entries(v).sort(([keyA], [keyB]) => keyA.localeCompare(keyB, 'en'))\n  }\n\n  const normalize = (v: unknown) => JSON.parse(JSON.stringify(v))\n\n  return JSON.stringify(sortObject(normalize(value)))\n}\n\ninterface PaneHeaderActionsProps {\n  initialValueTemplateItems?: InitialValueTemplateItem[]\n  menuItems?: PaneMenuItem[]\n  menuItemGroups?: PaneMenuItemGroup[]\n  actionHandlers?: Record<string, StructureToolPaneActionHandler>\n}\n\nexport const PaneHeaderActions = memo(function PaneHeaderActions(props: PaneHeaderActionsProps) {\n  const {\n    initialValueTemplateItems: initialValueTemplateItemsFromStructure = EMPTY_ARRAY,\n    menuItems = EMPTY_ARRAY,\n    menuItemGroups = EMPTY_ARRAY,\n    actionHandlers = EMPTY_OBJECT as Record<string, StructureToolPaneActionHandler>,\n  } = props\n\n  const templates = useTemplates()\n\n  const handleAction = useCallback(\n    (item: PaneMenuItem) => {\n      if (typeof item.action === 'string' && !(item.action in actionHandlers)) {\n        console.warn('No handler for action:', item.action)\n        return false\n      }\n\n      const handler =\n        typeof item.action === 'function'\n          ? item.action\n          : typeof item.action === 'string'\n            ? actionHandlers[item.action]\n            : null\n\n      if (handler) {\n        handler(item.params as Record<string, string>)\n        return true\n      }\n\n      return false\n    },\n    [actionHandlers],\n  )\n\n  const menuNodes = useMemo(\n    () =>\n      resolveMenuNodes({\n        actionHandler: handleAction,\n        menuItemGroups,\n        menuItems: menuItems\n          // remove items with `create` intents because those will get combined\n          // into one action button (see `initialValueTemplateItemFromMenuItems`)\n          .filter((item) => item.intent?.type !== 'create'),\n      }),\n    [handleAction, menuItemGroups, menuItems],\n  )\n\n  const actionNodes = useMemo(() => menuNodes.filter(isMenuNodeButton), [menuNodes])\n  const contextMenuNodes = useMemo(() => menuNodes.filter(isNotMenuNodeButton), [menuNodes])\n\n  const initialValueTemplateItemFromMenuItems = useMemo(() => {\n    return menuItems\n      .map((item, menuItemIndex) => {\n        if (item.intent?.type !== 'create') return null\n\n        const {params} = item.intent\n        if (!params) return null\n\n        const intentParams = Array.isArray(params) ? params[0] : params\n        const templateParams = Array.isArray(params) ? params[1] : undefined\n\n        // fallback to the schema type name as the template ID.\n        // by default, the initial template values are populated from every\n        // document type in the schema\n        const templateId = intentParams.template || intentParams.type\n        if (!templateId) return null\n\n        // eslint-disable-next-line max-nested-callbacks\n        const template = templates.find((t) => t.id === templateId)\n        // the template doesn't exist then the action might be disabled\n        if (!template) return null\n\n        const initialDocumentId = intentParams.id\n\n        return {\n          item,\n          template,\n          templateParams,\n          menuItemIndex,\n          initialDocumentId,\n        }\n      })\n      .filter(isNonNullable)\n      .map(({initialDocumentId, item, template, menuItemIndex, templateParams}) => {\n        const initialValueTemplateItem: InitialValueTemplateItem = {\n          id: `menuItem${menuItemIndex}`,\n          initialDocumentId,\n          templateId: template.id,\n          type: 'initialValueTemplateItem',\n          title: item.title || template.title,\n          i18n: item.i18n || template.i18n,\n          icon: item.icon as InitialValueTemplateItem['icon'],\n          description: template.description,\n          parameters: templateParams,\n          schemaType: template.schemaType,\n        }\n\n        return initialValueTemplateItem\n      })\n  }, [menuItems, templates])\n\n  const combinedInitialValueTemplates = useMemo(() => {\n    // this de-dupes create actions\n    return uniqBy(\n      [...initialValueTemplateItemFromMenuItems, ...initialValueTemplateItemsFromStructure],\n      (item) => hashObject([item.initialDocumentId, item.templateId, item.parameters]),\n    )\n  }, [initialValueTemplateItemFromMenuItems, initialValueTemplateItemsFromStructure])\n\n  return (\n    <Flex gap={1}>\n      <PaneHeaderCreateButton templateItems={combinedInitialValueTemplates} />\n\n      {actionNodes.map((node) => (\n        <PaneHeaderActionButton key={node.key} node={node} />\n      ))}\n\n      {contextMenuNodes.length > 0 && <PaneContextMenuButton nodes={contextMenuNodes} />}\n    </Flex>\n  )\n})\n","import {WarningOutlineIcon} from '@sanity/icons'\nimport {type SanityDocument} from '@sanity/types'\nimport {type GeneralPreviewLayoutKey, SanityDefaultPreview, Translate, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../i18n'\n\nexport interface MissingSchemaTypeProps {\n  layout?: GeneralPreviewLayoutKey\n  value: SanityDocument\n}\n\nexport function MissingSchemaType(props: MissingSchemaTypeProps) {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {layout, value} = props\n\n  return (\n    <SanityDefaultPreview\n      title={\n        <em>\n          <Translate\n            t={t}\n            i18nKey=\"pane-item.missing-schema-type.title\"\n            components={{Code: 'code'}}\n            values={{documentType: value._type}}\n          />\n        </em>\n      }\n      subtitle={\n        <Translate\n          t={t}\n          i18nKey=\"pane-item.missing-schema-type.subtitle\"\n          components={{Code: 'code'}}\n          values={{documentId: value._id}}\n        />\n      }\n      media={() => <WarningOutlineIcon />}\n      layout={layout}\n    />\n  )\n}\n","import {ChevronRightIcon, DocumentIcon, FolderIcon} from '@sanity/icons'\nimport {\n  isSanityDocument,\n  type PreviewValue,\n  type SanityDocument,\n  type SchemaType,\n} from '@sanity/types'\nimport {Box, type CardProps, Text} from '@sanity/ui'\nimport {\n  type ComponentType,\n  type MouseEvent,\n  startTransition,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport {\n  type FIXME,\n  type GeneralPreviewLayoutKey,\n  getPublishedId,\n  PreviewCard,\n  SanityDefaultPreview,\n  useDocumentPresence,\n  useDocumentPreviewStore,\n  useEditState,\n  useSchema,\n} from 'sanity'\n\nimport {MissingSchemaType} from '../MissingSchemaType'\nimport {usePaneRouter} from '../paneRouter'\nimport {PaneItemPreview} from './PaneItemPreview'\n\ninterface PaneItemProps {\n  id: string\n  layout?: GeneralPreviewLayoutKey\n  icon?: ComponentType<any> | false\n  pressed?: boolean\n  selected?: boolean\n  title?: string\n  value?: PreviewValue | SanityDocument\n  schemaType?: SchemaType\n  margin?: CardProps['margin']\n  marginBottom?: CardProps['marginBottom']\n  marginTop?: CardProps['marginTop']\n}\n\n/**\n * Return `false` if we explicitly disable the icon.\n * Otherwise return the passed icon or the schema type icon as a backup.\n */\nexport function getIconWithFallback(\n  icon: ComponentType<any> | false | undefined,\n  schemaType: SchemaType | undefined,\n  defaultIcon: ComponentType<any>,\n): ComponentType<any> | false {\n  if (icon === false) {\n    return false\n  }\n\n  return icon || (schemaType && schemaType.icon) || defaultIcon || false\n}\n\nexport function PaneItem(props: PaneItemProps) {\n  const {\n    icon,\n    id,\n    layout = 'default',\n    pressed,\n    schemaType,\n    selected,\n    title,\n    value,\n    margin,\n    marginBottom,\n    marginTop,\n  } = props\n  const schema = useSchema()\n  const documentPreviewStore = useDocumentPreviewStore()\n  const {ChildLink} = usePaneRouter()\n  const documentPresence = useDocumentPresence(id)\n  const hasSchemaType = Boolean(schemaType && schemaType.name && schema.get(schemaType.name))\n  const [clicked, setClicked] = useState<boolean>(false)\n\n  const preview = useMemo(() => {\n    if (value && isSanityDocument(value)) {\n      if (!schemaType || !hasSchemaType) {\n        return <MissingSchemaType value={value} />\n      }\n\n      return (\n        <PaneItemPreview\n          documentPreviewStore={documentPreviewStore}\n          icon={getIconWithFallback(icon, schemaType, DocumentIcon)}\n          layout={layout}\n          schemaType={schemaType}\n          value={value}\n          presence={documentPresence}\n        />\n      )\n    }\n\n    // Always render non-document values as compact previews\n    return (\n      <SanityDefaultPreview\n        status={\n          <Box style={{opacity: 0.5}}>\n            <Text muted size={1}>\n              <ChevronRightIcon />\n            </Text>\n          </Box>\n        }\n        icon={getIconWithFallback(icon, schemaType, FolderIcon)}\n        layout=\"compact\"\n        title={title}\n      />\n    )\n  }, [\n    documentPreviewStore,\n    hasSchemaType,\n    icon,\n    layout,\n    schemaType,\n    title,\n    value,\n    documentPresence,\n  ])\n\n  const handleClick = useCallback((e: MouseEvent<HTMLElement>) => {\n    if (e.metaKey) {\n      setClicked(false)\n      return\n    }\n\n    setClicked(true)\n  }, [])\n\n  // Reset `clicked` state when `selected` prop changes\n  useEffect(() => setClicked(false), [selected])\n\n  // Preloads the edit state on hover, using concurrent rendering with `startTransition` so preloads can be interrupted and not block rendering\n  const [preloading, setPreload] = useState(false)\n  const timeoutRef = useRef<ReturnType<typeof setTimeout> | null>(null)\n  const handleMouseEnter = useCallback(() => {\n    timeoutRef.current = setTimeout(() => startTransition(() => setPreload(true)), 400)\n  }, [])\n  const handleMouseLeave = useCallback(() => {\n    if (timeoutRef.current) clearTimeout(timeoutRef.current)\n    startTransition(() => setPreload(false))\n  }, [])\n\n  return (\n    <PreviewCard\n      data-testid={`pane-item-${title}`}\n      __unstable_focusRing\n      as={ChildLink as FIXME}\n      // @ts-expect-error - `childId` is a valid prop on `ChildLink`\n      childId={id}\n      data-as=\"a\"\n      margin={margin}\n      marginBottom={marginBottom}\n      marginTop={marginTop}\n      onClick={handleClick}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n      pressed={pressed}\n      radius={2}\n      selected={selected || clicked}\n      sizing=\"border\"\n      tabIndex={-1}\n      tone=\"inherit\"\n    >\n      {preview}\n      {preloading && schemaType?.name && value && isSanityDocument(value) && (\n        <PreloadDocumentPane documentId={id} documentType={schemaType.name} />\n      )}\n    </PreviewCard>\n  )\n}\n\nfunction PreloadDocumentPane(props: {documentId: string; documentType: string}) {\n  const {documentId, documentType} = props\n  // Preload the edit state for the document, and keep it alive until mouse leave\n  useEditState(getPublishedId(documentId), documentType)\n\n  return null\n}\nPreloadDocumentPane.displayName = 'PreloadDocumentPane'\n","import {memo, type ReactNode, useMemo} from 'react'\nimport {\n  type DocumentActionComponent,\n  type DocumentActionDescription,\n  type DocumentActionGroup,\n  type DocumentActionProps,\n  getDraftId,\n  GetHookCollectionState,\n  getPublishedId,\n  useCanvasCompanionDoc,\n  useTranslation,\n} from 'sanity'\n\nimport {structureLocaleNamespace} from '../i18n'\n\n/** @internal */\nexport interface Action<Args, Description> {\n  (args: Args): Description | null\n}\nexport interface ResolvedAction extends DocumentActionDescription {\n  action?: DocumentActionComponent['action']\n}\n\n/** @internal */\nexport interface RenderActionCollectionProps {\n  actions: Action<DocumentActionProps, DocumentActionDescription>[]\n  actionProps: Omit<DocumentActionProps, 'onComplete'>\n  children: (props: {states: ResolvedAction[]}) => ReactNode\n  onActionComplete?: () => void\n  group?: DocumentActionGroup\n}\n\n/** @internal */\nexport const RenderActionCollectionState = memo((props: RenderActionCollectionProps) => {\n  const {actions, children, actionProps, onActionComplete, group} = props\n\n  return (\n    <GetHookCollectionState<Omit<DocumentActionProps, 'onComplete'>, ResolvedAction>\n      onReset={onActionComplete}\n      hooks={actions}\n      args={actionProps}\n      group={group}\n    >\n      {({states}) => (\n        <ActionsGuardWrapper\n          states={states}\n          documentId={\n            actionProps.liveEditSchemaType\n              ? getPublishedId(actionProps.id)\n              : getDraftId(actionProps.id)\n          }\n        >\n          {children}\n        </ActionsGuardWrapper>\n      )}\n    </GetHookCollectionState>\n  )\n})\nRenderActionCollectionState.displayName = 'Memo(RenderActionCollectionState)'\n\n/**\n * This is a list of the actions that are supported when a document is linked to Canvas.\n * Custom actions and actions that are not supported by Canvas will be disabled and will include a tooltip explaining that the action is not supported.\n */\nconst SUPPORTED_LINKED_TO_CANVAS_ACTIONS: DocumentActionComponent['action'][] = [\n  'delete',\n  'duplicate',\n  'publish',\n  'unpublish',\n  'unlinkFromCanvas',\n  'editInCanvas',\n  'linkToCanvas',\n  'schedule',\n]\n\ninterface ActionsGuardWrapperProps {\n  states: ResolvedAction[]\n  documentId: string\n  children: (props: {states: ResolvedAction[]}) => ReactNode\n}\n\nconst ActionsGuardWrapper = (props: ActionsGuardWrapperProps) => {\n  const {states, children, documentId} = props\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {isLinked} = useCanvasCompanionDoc(documentId)\n\n  const result = useMemo(() => {\n    if (isLinked) {\n      return children({\n        states: states.map((s) => {\n          if (!s.action || !SUPPORTED_LINKED_TO_CANVAS_ACTIONS.includes(s.action)) {\n            return {\n              ...s,\n              disabled: true,\n              title: t('action.disabled-by-canvas.tooltip'),\n            }\n          }\n          return s\n        }),\n      })\n    }\n    return children({states})\n  }, [children, states, t, isLinked])\n\n  return result\n}\n","import {memo, type ReactNode} from 'react'\nimport {\n  type DocumentBadgeDescription,\n  type DocumentBadgeProps,\n  type EditStateFor,\n  GetHookCollectionState,\n} from 'sanity'\n\n/** @internal */\nexport interface Badge<Args, Description> {\n  (args: Args): Description | null\n}\n\n/** @internal */\nexport interface RenderBadgeCollectionProps {\n  badges: Badge<DocumentBadgeProps, DocumentBadgeDescription>[]\n  badgeProps: EditStateFor\n  children: (props: {states: DocumentBadgeDescription[]}) => ReactNode\n}\n\n/** @internal */\nexport const RenderBadgeCollectionState = memo((props: RenderBadgeCollectionProps) => {\n  const {badges, children, badgeProps} = props\n\n  return (\n    <GetHookCollectionState<EditStateFor, DocumentBadgeDescription>\n      hooks={badges}\n      args={badgeProps}\n    >\n      {children}\n    </GetHookCollectionState>\n  )\n})\nRenderBadgeCollectionState.displayName = 'Memo(RenderBadgeCollectionState)'\n","import {type SortOrder} from './types'\n\nexport const PARTIAL_PAGE_LIMIT = 100\nexport const FULL_LIST_LIMIT = 2000\nexport const DEFAULT_ORDERING: SortOrder = {by: [{field: '_updatedAt', direction: 'desc'}]}\nexport const EMPTY_RECORD: Record<string, unknown> = {}\n\nexport const ENABLE_LRU_MEMO = true\n","import {type SanityDocument} from '@sanity/types'\nimport {Box, Container, Flex, Heading, Stack, Text} from '@sanity/ui'\nimport {useCallback, useEffect, useMemo, useState} from 'react'\nimport {\n  CommandList,\n  type CommandListRenderItemCallback,\n  ErrorActions,\n  type GeneralPreviewLayoutKey,\n  getPublishedId,\n  isDev,\n  LoadingBlock,\n  SanityDefaultPreview,\n  Translate,\n  useSchema,\n  useTranslation,\n} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Delay, PaneContent, PaneItem, usePane, usePaneLayout} from '../../components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {FULL_LIST_LIMIT} from './constants'\nimport {type DocumentListPaneItem, type LoadingVariant} from './types'\n\nconst RootBox = styled(Box)<{$opacity?: number}>`\n  position: relative;\n  opacity: ${(props) => props.$opacity || 1};\n  transition: opacity 0.4s;\n`\n\nconst CommandListBox = styled(Box)`\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n`\n\ninterface DocumentListPaneContentProps {\n  childItemId?: string\n  error: {message: string} | null\n  filterIsSimpleTypeConstraint: boolean\n  hasMaxItems?: boolean\n  muted?: boolean\n  hasSearchQuery: boolean\n  isActive?: boolean\n  isLazyLoading: boolean\n  isLoading: boolean\n  isConnected?: boolean\n  autoRetry?: boolean\n  canRetry: boolean\n  retryCount?: number\n  isRetrying?: boolean\n  items: DocumentListPaneItem[]\n  layout?: GeneralPreviewLayoutKey\n  loadingVariant?: LoadingVariant\n  onEndReached: () => void\n  onRetry?: () => void\n  paneTitle: string\n  searchInputElement: HTMLInputElement | null\n  showIcons: boolean\n}\n\nconst SKELETON_ITEMS = [...Array(30).keys()]\n\nfunction LoadingView(props: {layout?: GeneralPreviewLayoutKey}) {\n  const {layout} = props\n\n  return (\n    <Stack paddingX={3} paddingY={2} paddingTop={0} space={1}>\n      {SKELETON_ITEMS.map((num) => (\n        <SanityDefaultPreview key={num} isPlaceholder layout={layout} />\n      ))}\n    </Stack>\n  )\n}\n\nexport function DocumentListPaneContent(props: DocumentListPaneContentProps) {\n  const {\n    childItemId,\n    error,\n    isRetrying,\n    autoRetry,\n    filterIsSimpleTypeConstraint,\n    hasMaxItems,\n    hasSearchQuery,\n    isActive,\n    isLazyLoading,\n    muted,\n    isLoading,\n    isConnected,\n    retryCount,\n    canRetry,\n    items,\n    layout,\n    loadingVariant,\n    onEndReached,\n    onRetry,\n    paneTitle,\n    searchInputElement,\n    showIcons,\n  } = props\n\n  const schema = useSchema()\n\n  const {collapsed: layoutCollapsed} = usePaneLayout()\n  const {collapsed, index} = usePane()\n  const [shouldRender, setShouldRender] = useState(!collapsed)\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const handleEndReached = useCallback(() => {\n    if (shouldRender) {\n      onEndReached()\n    }\n  }, [onEndReached, shouldRender])\n\n  useEffect(() => {\n    if (collapsed) return undefined\n\n    const timer = setTimeout(() => {\n      setShouldRender(true)\n    }, 0)\n\n    return () => {\n      clearTimeout(timer)\n    }\n  }, [collapsed, items])\n\n  const renderItem = useCallback<CommandListRenderItemCallback<SanityDocument>>(\n    (item, {activeIndex}) => {\n      const publishedId = getPublishedId(item._id)\n      const isSelected = childItemId === publishedId\n      const pressed = !isActive && isSelected\n      const selected = isActive && isSelected\n      const isLastItem = activeIndex === items.length - 1\n      const showSpinner = isLastItem && isLazyLoading\n      const showMaxItemsMessage = isLastItem && hasMaxItems\n\n      return (\n        <>\n          <PaneItem\n            icon={showIcons === false ? false : undefined}\n            id={publishedId}\n            layout={layout}\n            marginBottom={1}\n            pressed={pressed}\n            schemaType={schema.get(item._type)}\n            selected={selected}\n            value={item}\n          />\n\n          {showSpinner && <LoadingBlock />}\n\n          {showMaxItemsMessage && (\n            <Box marginY={1} paddingX={3} paddingY={4}>\n              <Text align=\"center\" muted size={1}>\n                {t('panes.document-list-pane.max-items.text', {limit: FULL_LIST_LIMIT})}\n              </Text>\n            </Box>\n          )}\n        </>\n      )\n    },\n    [childItemId, isActive, items.length, layout, schema, showIcons, hasMaxItems, isLazyLoading, t],\n  )\n\n  const noDocumentsContent = useMemo(() => {\n    if (hasSearchQuery) {\n      return (\n        <Flex align=\"center\" direction=\"column\" height=\"fill\" justify=\"center\">\n          <Container width={1}>\n            <Box paddingX={4} paddingY={5}>\n              <Text align=\"center\" muted>\n                {t('panes.document-list-pane.no-documents.text')}\n              </Text>\n            </Box>\n          </Container>\n        </Flex>\n      )\n    }\n\n    return (\n      <Flex align=\"center\" direction=\"column\" height=\"fill\" justify=\"center\">\n        <Container width={1}>\n          <Box paddingX={4} paddingY={5}>\n            <Text align=\"center\" muted>\n              {filterIsSimpleTypeConstraint\n                ? t('panes.document-list-pane.no-documents-of-type.text')\n                : t('panes.document-list-pane.no-matching-documents.text')}\n            </Text>\n          </Box>\n        </Container>\n      </Flex>\n    )\n  }, [filterIsSimpleTypeConstraint, hasSearchQuery, t])\n\n  const mainContent = useMemo(() => {\n    if (!shouldRender) {\n      return null\n    }\n\n    const isOnline = window.navigator.onLine\n    if (error) {\n      return (\n        <Flex align=\"center\" direction=\"column\" height=\"fill\" justify=\"center\">\n          <Container width={1}>\n            <Stack paddingX={4} paddingY={5} space={4}>\n              <Heading as=\"h3\">{t('panes.document-list-pane.error.title')}</Heading>\n              <Text as=\"p\">\n                {isDev ? (\n                  <Translate\n                    t={t}\n                    i18nKey=\"panes.document-list-pane.error.text.dev\"\n                    values={{error: error.message}}\n                    components={{Code: ({children}) => <code>{children}</code>}}\n                  />\n                ) : isOnline ? (\n                  t('panes.document-list-pane.error.text')\n                ) : (\n                  t('panes.document-list-pane.error.text.offline')\n                )}\n              </Text>\n              <ErrorActions\n                error={error}\n                eventId={null}\n                onRetry={isOnline && canRetry ? onRetry : undefined}\n                isRetrying={isRetrying}\n              />\n              {canRetry ? (\n                <Text as=\"p\" muted size={1}>\n                  {isRetrying\n                    ? t('panes.document-list-pane.error.retrying', {count: retryCount})\n                    : autoRetry\n                      ? t('panes.document-list-pane.error.will-retry-automatically', {\n                          count: retryCount,\n                        })\n                      : t('panes.document-list-pane.error.max-retries-attempted', {\n                          count: retryCount,\n                        })}\n                </Text>\n              ) : null}\n            </Stack>\n          </Container>\n        </Flex>\n      )\n    }\n\n    if (isConnected && !isLoading && items.length === 0) {\n      return noDocumentsContent\n    }\n\n    if (loadingVariant === 'initial' && isLoading) {\n      return (\n        <Delay ms={300}>\n          <LoadingView layout={layout} />\n        </Delay>\n      )\n    }\n\n    if (loadingVariant === 'spinner' && isLoading) {\n      return null\n    }\n\n    // prevents bug when panes won't render if first rendered while collapsed\n    const key = `${index}-${collapsed}`\n\n    return (\n      <RootBox overflow=\"hidden\" height=\"fill\" $opacity={muted ? 0.8 : 1}>\n        <CommandListBox>\n          <CommandList\n            key={key}\n            activeItemDataAttr=\"data-hovered\"\n            ariaLabel={paneTitle}\n            canReceiveFocus\n            inputElement={searchInputElement}\n            itemHeight={51}\n            items={items}\n            onEndReached={handleEndReached}\n            onlyShowSelectionWhenActive\n            overscan={10}\n            paddingBottom={1}\n            paddingX={3}\n            renderItem={renderItem}\n            wrapAround={false}\n          />\n        </CommandListBox>\n      </RootBox>\n    )\n  }, [\n    autoRetry,\n    canRetry,\n    collapsed,\n    error,\n    handleEndReached,\n    index,\n    isConnected,\n    isLoading,\n    isRetrying,\n    items,\n    layout,\n    loadingVariant,\n    muted,\n    noDocumentsContent,\n    onRetry,\n    paneTitle,\n    renderItem,\n    retryCount,\n    searchInputElement,\n    shouldRender,\n    t,\n  ])\n\n  return (\n    <PaneContent\n      data-testid=\"document-list-pane\"\n      overflow={layoutCollapsed || loadingVariant === 'initial' ? 'hidden' : 'auto'}\n    >\n      {mainContent}\n    </PaneContent>\n  )\n}\n","import {\n  isIndexSegment,\n  isKeySegment,\n  isReferenceSchemaType,\n  type ObjectField,\n  type ObjectFieldType,\n  type ObjectSchemaType,\n  type SanityDocumentLike,\n  type SchemaType,\n} from '@sanity/types'\nimport * as PathUtils from '@sanity/util/paths'\nimport {type ExprNode, parse} from 'groq-js'\nimport {collate, getPublishedId} from 'sanity'\n\nimport {type DocumentListPaneItem, type SortOrder} from './types'\n\nexport function getDocumentKey(value: DocumentListPaneItem, index: number): string {\n  return value._id ? getPublishedId(value._id) : `item-${index}`\n}\n\nexport function removePublishedWithDrafts(documents: SanityDocumentLike[]): DocumentListPaneItem[] {\n  return collate(documents).map((entry) => {\n    const doc = entry.draft || entry.published || entry.versions[0]\n    const hasDraft = Boolean(entry.draft)\n\n    return {\n      ...doc,\n      hasPublished: !!entry.published,\n      hasDraft,\n    }\n  }) as any\n}\n\nexport function applyOrderingFunctions(order: SortOrder, schemaType: ObjectSchemaType): SortOrder {\n  const orderBy = order.by.map((by) => {\n    // Skip those that already have a mapper\n    if (by.mapWith) {\n      return by\n    }\n\n    const fieldType = tryResolveSchemaTypeForPath(schemaType, by.field)\n    if (!fieldType) {\n      return by\n    }\n\n    // Note: order matters here, since the jsonType of a date field is `string`,\n    // but we want to apply `datetime()`, not `lower()`\n    if (fieldExtendsType(fieldType, 'datetime')) {\n      return {...by, mapWith: 'dateTime'}\n    }\n\n    if (fieldType.jsonType === 'string') {\n      return {...by, mapWith: 'lower'}\n    }\n\n    return by\n  })\n\n  return orderBy.every((item, index) => item === order.by[index]) ? order : {...order, by: orderBy}\n}\n\nfunction tryResolveSchemaTypeForPath(baseType: SchemaType, path: string): SchemaType | undefined {\n  const pathSegments = PathUtils.fromString(path)\n\n  let current: SchemaType | undefined = baseType\n  for (const segment of pathSegments) {\n    if (!current) {\n      return undefined\n    }\n\n    if (typeof segment === 'string') {\n      current = getFieldTypeByName(current, segment)\n      continue\n    }\n\n    const isArrayAccessor = isKeySegment(segment) || isIndexSegment(segment)\n    if (!isArrayAccessor || current.jsonType !== 'array') {\n      return undefined\n    }\n\n    const [memberType, otherType] = current.of || []\n    if (otherType || !memberType) {\n      // Can't figure out the type without knowing the value\n      return undefined\n    }\n\n    if (!isReferenceSchemaType(memberType)) {\n      current = memberType\n      continue\n    }\n\n    const [refType, otherRefType] = memberType.to || []\n    if (otherRefType || !refType) {\n      // Can't figure out the type without knowing the value\n      return undefined\n    }\n\n    current = refType\n  }\n\n  return current\n}\n\nfunction getFieldTypeByName(type: SchemaType, fieldName: string): SchemaType | undefined {\n  if (!('fields' in type)) {\n    return undefined\n  }\n\n  const fieldType = type.fields.find((field) => field.name === fieldName)\n  return fieldType ? fieldType.type : undefined\n}\n\nexport function fieldExtendsType(field: ObjectField | ObjectFieldType, ofType: string): boolean {\n  let current: SchemaType | undefined = field.type\n  while (current) {\n    if (current.name === ofType) {\n      return true\n    }\n\n    if (!current.type && current.jsonType === ofType) {\n      return true\n    }\n\n    current = current.type\n  }\n\n  return false\n}\n\n/**\n * Recursively extract static `_type`s from GROQ filter expressions. If the\n * types can't be statically determined then it will return `null`.\n */\n// eslint-disable-next-line complexity\nfunction findTypes(node: ExprNode): Set<string> | null {\n  switch (node.type) {\n    case 'OpCall': {\n      const {left, right} = node\n\n      switch (node.op) {\n        // e.g. `a == b`\n        case '==': {\n          // e.g. `_type == 'value'`\n          if (left.type === 'AccessAttribute' && left.name === '_type' && !left.base) {\n            if (right.type !== 'Value' || typeof right.value !== 'string') return null\n            return new Set([right.value])\n          }\n\n          // e.g. `'value' == _type`\n          if (right.type === 'AccessAttribute' && right.name === '_type' && !right.base) {\n            if (left.type !== 'Value' || typeof left.value !== 'string') return null\n            return new Set([left.value])\n          }\n\n          // otherwise, we can't determine the types statically\n          return null\n        }\n\n        // e.g. `a in b`\n        case 'in': {\n          // if `_type` is not on the left hand side of `in` then it can't be determined\n          if (left.type !== 'AccessAttribute' || left.name !== '_type' || left.base) return null\n          // if the right hand side is not an array then the types can't be determined\n          if (right.type !== 'Array') return null\n\n          const types = new Set<string>()\n          // iterate through all the types\n          for (const element of right.elements) {\n            // if we find a splat, then early return, we can't determine the types\n            if (element.isSplat) return null\n            // if the array element is not just a simple value, then early return\n            if (element.value.type !== 'Value') return null\n            // if the array element value is not a string, then early return\n            if (typeof element.value.value !== 'string') return null\n            // otherwise add the element value to the set of types\n            types.add(element.value.value)\n          }\n\n          // if there were any elements in the types set, return it\n          if (types.size) return types\n          // otherwise, the set of types cannot be determined\n          return null\n        }\n\n        default: {\n          return null\n        }\n      }\n    }\n\n    // groups can just be unwrapped, the AST preserves the order\n    case 'Group': {\n      return findTypes(node.base)\n    }\n\n    // e.g. `_type == 'a' || _type == 'b'`\n    // with Or nodes, if we can't determine the types for either the left or\n    // right hand side then we can't determine the types for any\n    // e.g. `_type == 'a' || isActive`\n    // — can't determine types because `isActive` could be true on another types\n    case 'Or': {\n      const left = findTypes(node.left)\n      if (!left) return null\n\n      const right = findTypes(node.right)\n      if (!right) return null\n\n      return new Set([...left, ...right])\n    }\n\n    // e.g. `_type == 'a' && isActive`\n    // with And nodes, we can determine the types as long as we can determine\n    // the types for one side. We can't determine the types if both are `null`.\n    case 'And': {\n      const left = findTypes(node.left)\n      const right = findTypes(node.right)\n\n      if (!left && !right) return null\n      return new Set([...(left || []), ...(right || [])])\n    }\n\n    default: {\n      return null\n    }\n  }\n}\n\nexport function findStaticTypesInFilter(\n  filter: string,\n  params: Record<string, unknown> = {},\n): string[] | null {\n  try {\n    const types = findTypes(parse(filter, {params}))\n    if (!types) return null\n\n    return Array.from(types).sort()\n  } catch {\n    // if we couldn't parse the filter, just return `null`\n    return null\n  }\n}\n","import {type ClientPerspective, type SanityClient} from '@sanity/client'\nimport {\n  asyncScheduler,\n  defer,\n  filter,\n  map,\n  merge,\n  mergeMap,\n  type Observable,\n  of,\n  partition,\n  share,\n  throttleTime,\n  throwError,\n  timer,\n} from 'rxjs'\nimport {scan} from 'rxjs/operators'\nimport {exhaustMapWithTrailing} from 'rxjs-exhaustmap-with-trailing'\nimport {\n  createSearch,\n  createSWR,\n  getSearchableTypes,\n  type SanityDocumentLike,\n  type Schema,\n  type SearchOptions,\n  type SearchStrategy,\n} from 'sanity'\n\nimport {getExtendedProjection} from '../../structureBuilder/util/getExtendedProjection'\nimport {type SortOrder} from './types'\n\ninterface ListenQueryOptions {\n  client: SanityClient\n  filter: string\n  limit: number\n  params: Record<string, unknown>\n  schema: Schema\n  searchQuery: string\n  sort: SortOrder\n  perspective?: ClientPerspective\n  staticTypeNames?: string[] | null\n  maxFieldDepth?: number\n  searchStrategy?: SearchStrategy\n}\n\nexport type SearchQueryEvent =\n  | {\n      type: 'reconnect'\n    }\n  | {type: 'result'; documents: SanityDocumentLike[]}\n\nexport interface SearchQueryState {\n  connected: boolean\n  fromCache: boolean\n  documents: SanityDocumentLike[]\n}\n\nconst swr = createSWR<{connected: boolean; documents: SanityDocumentLike[]}>({maxSize: 100})\n\nexport function listenSearchQuery(options: ListenQueryOptions): Observable<SearchQueryState> {\n  const {\n    client,\n    schema,\n    sort,\n    perspective,\n    limit,\n    params,\n    filter: groqFilter,\n    searchQuery,\n    staticTypeNames,\n    maxFieldDepth,\n    searchStrategy,\n  } = options\n  const sortBy = sort.by\n  const extendedProjection = sort?.extendedProjection\n\n  // Listen for changes with the given filter and params, and whenever a change occurs, we want to\n  // re-fetch the documents that match the search query (see below).\n  // We use a separate listener since the search query is too large to use in a listen query.\n  const events$ = defer(() => {\n    return client.listen(`*[${groqFilter}]`, params, {\n      events: ['welcome', 'mutation', 'reconnect'],\n      includeAllVersions: true,\n      includeResult: false,\n      visibility: 'query',\n      tag: 'listen-search-query',\n    })\n  }).pipe(\n    mergeMap((ev, i) => {\n      const isFirst = i === 0\n      // If we can't establish a connection to the /listen endpoint, the first event we receive will be 'reconnect'\n      // So if we get \"reconnect\" as the first event actually means \"Connection can't be established\"\n      if (isFirst && ev.type === 'reconnect') {\n        // if it's neither welcome nor reconnect, something unexpected has happened.\n        return throwError(() => new Error(`Failed to establish EventSource connection`))\n      }\n      // When a connection is successfully established, the first event will be 'welcome'\n      if (isFirst && ev.type !== 'welcome') {\n        // if it's neither welcome nor reconnect, something unexpected has happened.\n        return throwError(() => new Error(`Received unexpected type of first event \"${ev.type}\"`))\n      }\n      return of(ev)\n    }),\n    share(),\n  )\n\n  const [welcome$, mutationAndReconnect$] = partition(events$, (ev) => ev.type === 'welcome')\n\n  const swrKey = JSON.stringify({\n    fiilter: groqFilter,\n    limit,\n    params,\n    searchQuery,\n    perspective,\n    sort,\n    staticTypeNames,\n  })\n\n  return merge(\n    welcome$,\n    mutationAndReconnect$.pipe(throttleTime(1000, asyncScheduler, {leading: true, trailing: true})),\n  ).pipe(\n    exhaustMapWithTrailing((event): Observable<SearchQueryEvent> => {\n      // Get the types names to use for searching.\n      // If we have a static list of types, we can skip fetching the types and use the static list.\n      const typeNames$ = staticTypeNames\n        ? of(staticTypeNames)\n        : client.observable.fetch(`array::unique(*[${groqFilter}][]._type)`, params)\n\n      // Use the type names to create a search query and fetch the documents that match the query.\n      return typeNames$.pipe(\n        mergeMap((typeNames: string[]) => {\n          const types = getSearchableTypes(schema, staticTypeNames || []).filter((type) => {\n            if (typeNames.includes(type.name)) {\n              // make a call to getExtendedProjection in strict mode to verify that all fields are\n              // known. This method will throw an exception if there are any unknown fields specified\n              // in the sort by list\n              getExtendedProjection(type, sort.by, true)\n              return true\n            }\n            return false\n          })\n\n          const search = createSearch(types, client, {\n            filter: groqFilter,\n            params,\n            strategy: searchStrategy,\n            maxDepth: maxFieldDepth,\n          })\n\n          const doFetch = () => {\n            const searchTerms = {\n              query: searchQuery || '',\n              types,\n            }\n\n            const searchOptions: SearchOptions = {\n              __unstable_extendedProjection: extendedProjection,\n              comments: [`findability-source: ${searchQuery ? 'list-query' : 'list'}`],\n              limit,\n              skipSortByScore: true,\n              sort: sortBy,\n              perspective,\n            }\n\n            return search(searchTerms, searchOptions).pipe(\n              map((result) =>\n                // eslint-disable-next-line max-nested-callbacks\n                result.hits.map(({hit}) => hit),\n              ),\n              map((hits) => ({type: 'result' as const, documents: hits})),\n            )\n          }\n\n          if (event.type === 'mutation' && event.visibility !== 'query') {\n            // Even though the listener request specifies visibility=query, the events are not guaranteed to be delivered with visibility=query\n            // If the event we are responding to arrives with visibility != query, we add a little delay to allow for the updated document to be available for queries\n            // See https://www.sanity.io/docs/listening#visibility-c4786e55c3ff\n            return timer(1200).pipe(mergeMap(doFetch))\n          }\n          if (event.type === 'reconnect') {\n            return of(event)\n          }\n          return doFetch()\n        }),\n      )\n    }),\n    scan(\n      (\n        acc: null | {connected: boolean; documents: SanityDocumentLike[]},\n        event: SearchQueryEvent,\n      ) => ({\n        connected: event.type !== 'reconnect',\n        documents: event.type === 'result' ? event.documents : acc?.documents || [],\n      }),\n      null as null | {connected: boolean; documents: SanityDocumentLike[]},\n    ),\n    filter((v) => v !== null),\n    swr(swrKey),\n    map(({fromCache, value}): SearchQueryState => ({fromCache, ...value})),\n  )\n}\n","import {ChannelError, ClientError, type ClientPerspective, ServerError} from '@sanity/client'\nimport {observableCallback} from 'observable-callback'\nimport {useMemo, useState} from 'react'\nimport {useObservable} from 'react-rx'\nimport {concat, fromEvent, merge, NEVER, of, timer} from 'rxjs'\nimport {\n  filter,\n  map,\n  mergeMap,\n  scan,\n  share,\n  shareReplay,\n  switchMap,\n  take,\n  takeUntil,\n  withLatestFrom,\n} from 'rxjs/operators'\nimport {\n  catchWithCount,\n  DEFAULT_STUDIO_CLIENT_OPTIONS,\n  useClient,\n  useSchema,\n  useSearchMaxFieldDepth,\n  useWorkspace,\n} from 'sanity'\n\nimport {DEFAULT_ORDERING, FULL_LIST_LIMIT, PARTIAL_PAGE_LIMIT} from './constants'\nimport {findStaticTypesInFilter, removePublishedWithDrafts} from './helpers'\nimport {listenSearchQuery} from './listenSearchQuery'\nimport {type DocumentListPaneItem, type SortOrder} from './types'\n\ninterface UseDocumentListOpts {\n  apiVersion?: string\n  filter: string\n  perspective?: ClientPerspective\n  params: Record<string, unknown>\n  searchQuery: string | null\n  sortOrder?: SortOrder\n}\n\ninterface DocumentListState {\n  error: {message: string} | null\n  isLoadingFullList: boolean\n  isLoading: boolean\n  connected?: boolean\n  isRetrying: boolean\n  autoRetry: boolean\n  canRetry: boolean\n  retryCount: number\n  fromCache?: boolean\n  items: DocumentListPaneItem[]\n}\n\nconst INITIAL_QUERY_STATE: DocumentListState = {\n  error: null,\n  isRetrying: false,\n  retryCount: 0,\n  autoRetry: false,\n  canRetry: false,\n  isLoading: true,\n  isLoadingFullList: false,\n  fromCache: false,\n  items: [],\n}\n\ninterface UseDocumentListHookValue extends DocumentListState {\n  onRetry: () => void\n  onLoadFullList: () => void\n}\n\n/**\n * Determine whether an error should be possible to retry\n * @param error - Any caught error\n */\nfunction isRetriableError(error: unknown) {\n  if (error instanceof ChannelError) {\n    // Usually indicative of a bad or malformed request\n    return false\n  }\n  if (error instanceof ServerError) {\n    // >= 500\n    return true\n  }\n  if (error instanceof ClientError) {\n    // >= 400\n    // note: 403 Forbidden makes sense to retry, because it's a potentially passing condition\n    return error.statusCode === 403\n  }\n  return true\n}\n\n/**\n * @internal\n */\nexport function useDocumentList(opts: UseDocumentListOpts): UseDocumentListHookValue {\n  const {\n    filter: searchFilter,\n    params: paramsProp,\n    sortOrder,\n    searchQuery,\n    perspective,\n    apiVersion,\n  } = opts\n  const client = useClient({\n    ...DEFAULT_STUDIO_CLIENT_OPTIONS,\n    apiVersion: apiVersion || DEFAULT_STUDIO_CLIENT_OPTIONS.apiVersion,\n  })\n  const {strategy: searchStrategy} = useWorkspace().search\n  const schema = useSchema()\n  const maxFieldDepth = useSearchMaxFieldDepth()\n\n  // Get the type name from the filter, if it is a simple type filter.\n  const typeNameFromFilter = useMemo(\n    () => findStaticTypesInFilter(searchFilter, paramsProp),\n    [searchFilter, paramsProp],\n  )\n\n  const [[onRetry$, onRetry]] = useState(() => observableCallback())\n  const [[onFetchFullList$, onLoadFullList]] = useState(() => observableCallback())\n\n  const queryResults$ = useMemo(() => {\n    const listenSearchQueryArgs = {\n      client,\n      filter: searchFilter,\n      limit: PARTIAL_PAGE_LIMIT,\n      params: paramsProp,\n      schema,\n      perspective,\n      searchQuery: searchQuery || '',\n      sort: sortOrder || DEFAULT_ORDERING,\n      staticTypeNames: typeNameFromFilter,\n      maxFieldDepth,\n      searchStrategy,\n    }\n\n    const partialList$ = listenSearchQuery(listenSearchQueryArgs).pipe(\n      shareReplay({refCount: true, bufferSize: 1}),\n    )\n\n    // we want to fetch the full list if the last result of the partial list is at the limit\n    const fullList$ = onFetchFullList$.pipe(\n      withLatestFrom(partialList$),\n      filter(([, result]) => result?.documents.length === PARTIAL_PAGE_LIMIT),\n      // we want to set up the full list listener only once\n      take(1),\n      mergeMap(() =>\n        concat(\n          of({type: 'loadFullList' as const}),\n          listenSearchQuery({...listenSearchQueryArgs, limit: FULL_LIST_LIMIT}).pipe(\n            map((result) => ({type: 'result' as const, result})),\n          ),\n        ),\n      ),\n      share(),\n    )\n\n    // The combined search results from both partial page and full list\n    return merge(\n      partialList$.pipe(\n        map((result) => ({\n          type: 'result' as const,\n          result,\n        })),\n        // when the full list listener kicks off, we want to stop the partial list listener\n        takeUntil(fullList$),\n      ),\n      fullList$,\n    ).pipe(\n      catchWithCount((lastError, retryCount, caught$) => {\n        const error = safeError(lastError)\n        const isOnline = window.navigator.onLine\n        const canRetry = isOnline && isRetriableError(lastError)\n        const autoRetry = retryCount < 10\n        const retries = merge(\n          isOnline ? onRetry$ : fromEvent(window, 'online'),\n          isOnline && autoRetry ? timer(retryCount * 1_000) : NEVER,\n        ).pipe(\n          take(1),\n          switchMap(() =>\n            merge(\n              of({\n                type: 'error' as const,\n                error,\n                retrying: true,\n                autoRetry,\n                canRetry,\n                retryCount,\n              }),\n              caught$,\n            ),\n          ),\n        )\n        return concat(\n          of({\n            type: 'error' as const,\n            error,\n            retrying: false,\n            autoRetry,\n            canRetry,\n            retryCount,\n          }),\n          retries,\n        )\n      }),\n      scan((prev, event) => {\n        if (event.type === 'error') {\n          return {\n            ...prev,\n            error: event.error,\n            retryCount: event.retryCount,\n            isRetrying: event.retrying,\n            autoRetry: event.autoRetry,\n            canRetry: event.canRetry,\n          }\n        }\n        if (event.type === 'result') {\n          return {\n            ...prev,\n            error: null,\n            isRetrying: false,\n            fromCache: event.result.fromCache,\n            connected: event.result.connected,\n            isLoading: false,\n            items: removePublishedWithDrafts(event.result.documents),\n            isLoadingFullList: false,\n          }\n        }\n        if (event.type === 'loadFullList') {\n          return {\n            ...prev,\n            error: null,\n            isLoadingFullList: true,\n          }\n        }\n        // @ts-expect-error - all cases should be covered\n        throw new Error(`Unexpected event type: ${event.type}`)\n      }, INITIAL_QUERY_STATE),\n    )\n  }, [\n    client,\n    searchFilter,\n    paramsProp,\n    schema,\n    perspective,\n    searchQuery,\n    sortOrder,\n    typeNameFromFilter,\n    maxFieldDepth,\n    searchStrategy,\n    onFetchFullList$,\n    onRetry$,\n  ])\n\n  const {\n    error,\n    items,\n    isLoading,\n    fromCache,\n    connected,\n    canRetry,\n    isLoadingFullList,\n    isRetrying,\n    autoRetry,\n    retryCount,\n  } = useObservable(queryResults$, INITIAL_QUERY_STATE)\n\n  return {\n    error,\n    onRetry,\n    isLoading,\n    items,\n    isRetrying,\n    canRetry,\n    retryCount,\n    autoRetry,\n    connected,\n    fromCache,\n    onLoadFullList,\n    isLoadingFullList,\n  }\n}\n\n// todo: candidate for re-use\nconst nonErrorThrownWarning = `[WARNING: This was thrown as a non-error. Only Error instances should be thrown]`\nfunction safeError(thrown: unknown): Error {\n  if (thrown instanceof Error) {\n    return thrown\n  }\n  if (typeof thrown === 'object' && thrown !== null) {\n    if ('message' in thrown && typeof thrown.message === 'string') {\n      return new Error(`${thrown.message} ${nonErrorThrownWarning}`)\n    }\n    return new Error(`${String(thrown)} ${nonErrorThrownWarning}`)\n  }\n  return new Error(`${String(thrown)} ${nonErrorThrownWarning}`)\n}\n","import {SearchIcon, SpinnerIcon} from '@sanity/icons'\nimport {Box, TextInput} from '@sanity/ui'\nimport {memo, useCallback, useEffect, useMemo, useState} from 'react'\nimport {useObservableEvent} from 'react-rx'\nimport {debounce, map, type Observable, of, tap, timer} from 'rxjs'\nimport {\n  type GeneralPreviewLayoutKey,\n  useActiveReleases,\n  useI18nText,\n  usePerspective,\n  useReconnectingToast,\n  useSchema,\n  useTranslation,\n  useUnique,\n} from 'sanity'\nimport {keyframes, styled} from 'styled-components'\n\nimport {structureLocaleNamespace} from '../../i18n'\nimport {type BaseStructureToolPaneProps} from '../types'\nimport {EMPTY_RECORD, FULL_LIST_LIMIT} from './constants'\nimport {DocumentListPaneContent} from './DocumentListPaneContent'\nimport {applyOrderingFunctions, findStaticTypesInFilter} from './helpers'\nimport {useShallowUnique} from './PaneContainer'\nimport {type LoadingVariant, type SortOrder} from './types'\nimport {useDocumentList} from './useDocumentList'\n\n/**\n * @internal\n */\nexport type DocumentListPaneProps = BaseStructureToolPaneProps<'documentList'> & {\n  sortOrder?: SortOrder\n  layout?: Exclude<GeneralPreviewLayoutKey, 'sheetList'>\n}\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst fadeIn = keyframes`\n  0% {\n    opacity: 0;\n  }\n  50% {\n    opacity: 0.1;\n  }\n  100% {\n    opacity: 0.4;\n  }\n`\n\nconst AnimatedSpinnerIcon = styled(SpinnerIcon)`\n  animation: ${rotate} 500ms linear infinite;\n`\n\nconst SubtleSpinnerIcon = styled(SpinnerIcon)`\n  animation: ${rotate} 1500ms linear infinite;\n  opacity: 0.4;\n`\n\nconst DelayedSubtleSpinnerIcon = styled(SpinnerIcon)`\n  animation:\n    ${rotate} 1500ms linear infinite,\n    ${fadeIn} 1000ms linear;\n  opacity: 0.4;\n`\n\n/**\n * @internal\n */\n\nexport const DocumentListPane = memo(function DocumentListPane(props: DocumentListPaneProps) {\n  const {childItemId, isActive, pane, paneKey, sortOrder: sortOrderRaw, layout} = props\n  const schema = useSchema()\n  const releases = useActiveReleases()\n  const {perspectiveStack} = usePerspective()\n  const {displayOptions, options} = pane\n  const {apiVersion, filter} = options\n  const params = useShallowUnique(options.params || EMPTY_RECORD)\n  const typeName = useMemo(() => {\n    const staticTypes = findStaticTypesInFilter(filter, params)\n    if (staticTypes?.length === 1) return staticTypes[0]\n    return null\n  }, [filter, params])\n\n  const showIcons = displayOptions?.showIcons !== false\n\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {title} = useI18nText(pane)\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n  const [searchInputValue, setSearchInputValue] = useState<string>('')\n  const [searchInputElement, setSearchInputElement] = useState<HTMLInputElement | null>(null)\n\n  const sortWithOrderingFn =\n    typeName && sortOrderRaw\n      ? applyOrderingFunctions(sortOrderRaw, schema.get(typeName) as any)\n      : sortOrderRaw\n\n  const sortOrder = useUnique(sortWithOrderingFn)\n\n  const {\n    error,\n    isLoadingFullList,\n    isLoading: documentListIsLoading,\n    items,\n    fromCache,\n    isRetrying,\n    autoRetry,\n    canRetry,\n    retryCount,\n    connected,\n    onLoadFullList,\n    onRetry,\n  } = useDocumentList({\n    apiVersion,\n    filter,\n    perspective: perspectiveStack,\n    params,\n    searchQuery: searchQuery?.trim(),\n    sortOrder,\n  })\n\n  const isLoading = documentListIsLoading || releases.loading\n\n  const handleQueryChange = useObservableEvent(\n    (event$: Observable<React.ChangeEvent<HTMLInputElement>>) => {\n      return event$.pipe(\n        map((event) => event.target.value),\n        tap(setSearchInputValue),\n        debounce((value) => (value === '' ? of('') : timer(300))),\n        tap(setSearchQuery),\n      )\n    },\n  )\n\n  const handleClearSearch = useCallback(() => {\n    setSearchQuery('')\n    setSearchInputValue('')\n  }, [])\n\n  const handleSearchKeyDown = useCallback(\n    (event: React.KeyboardEvent<HTMLInputElement>) => {\n      if (event.key === 'Escape') {\n        handleClearSearch()\n      }\n    },\n    [handleClearSearch],\n  )\n\n  const [enableSearchSpinner, setEnableSearchSpinner] = useState<string | void>()\n\n  useEffect(() => {\n    if (!enableSearchSpinner && !isLoading) {\n      setEnableSearchSpinner(paneKey)\n    }\n  }, [enableSearchSpinner, isLoading, paneKey])\n\n  useEffect(() => {\n    // Clear search field and disable search spinner\n    // when switching between panes (i.e. when paneKey changes).\n    handleClearSearch()\n    setEnableSearchSpinner()\n  }, [paneKey, handleClearSearch])\n\n  const loadingVariant: LoadingVariant = useMemo(() => {\n    if (connected && isLoading && enableSearchSpinner === paneKey) {\n      return 'spinner'\n    }\n    if (connected && fromCache) {\n      return 'subtle'\n    }\n\n    return 'initial'\n  }, [connected, enableSearchSpinner, fromCache, isLoading, paneKey])\n\n  const textInputIcon = useMemo(() => {\n    if (loadingVariant === 'spinner') {\n      return AnimatedSpinnerIcon\n    }\n    if (searchInputValue && loadingVariant === 'subtle') {\n      return SubtleSpinnerIcon\n    }\n    return SearchIcon\n  }, [loadingVariant, searchInputValue])\n\n  useReconnectingToast(!connected)\n\n  return (\n    <>\n      <Box paddingX={3} paddingBottom={3}>\n        <TextInput\n          aria-label={t('panes.document-list-pane.search-input.aria-label')}\n          autoComplete=\"off\"\n          border={false}\n          clearButton={Boolean(searchQuery)}\n          fontSize={[2, 2, 1]}\n          icon={textInputIcon}\n          iconRight={\n            !connected || (loadingVariant === 'subtle' && !searchInputValue)\n              ? DelayedSubtleSpinnerIcon\n              : null\n          }\n          onChange={handleQueryChange}\n          onClear={handleClearSearch}\n          onKeyDown={handleSearchKeyDown}\n          padding={2}\n          placeholder={t('panes.document-list-pane.search-input.placeholder')}\n          radius={2}\n          ref={setSearchInputElement}\n          spellCheck={false}\n          value={searchInputValue}\n        />\n      </Box>\n      <DocumentListPaneContent\n        key={paneKey}\n        childItemId={childItemId}\n        error={error}\n        filterIsSimpleTypeConstraint={!!typeName}\n        hasMaxItems={items.length === FULL_LIST_LIMIT}\n        hasSearchQuery={Boolean(searchQuery)}\n        isActive={isActive}\n        isLazyLoading={isLoadingFullList}\n        isLoading={isLoading}\n        autoRetry={autoRetry}\n        canRetry={canRetry}\n        retryCount={retryCount}\n        isRetrying={isRetrying}\n        isConnected={connected}\n        items={items}\n        layout={layout}\n        muted={loadingVariant === 'subtle'}\n        loadingVariant={loadingVariant}\n        onEndReached={onLoadFullList}\n        onRetry={onRetry}\n        paneTitle={title}\n        searchInputElement={searchInputElement}\n        showIcons={showIcons}\n      />\n    </>\n  )\n})\n","import {ArrowLeftIcon} from '@sanity/icons'\nimport {memo, type ReactNode, useMemo} from 'react'\nimport {type GeneralPreviewLayoutKey, type InitialValueTemplateItem} from 'sanity'\n\nimport {Button, TooltipDelayGroupProvider} from '../../../ui-components'\nimport {\n  BackLink,\n  PaneHeader as StructurePaneHeader,\n  PaneHeaderActions,\n  usePane,\n} from '../../components'\nimport {\n  type PaneMenuItem,\n  type PaneMenuItemGroup,\n  type StructureToolPaneActionHandler,\n} from '../../types'\nimport {useStructureTool} from '../../useStructureTool'\nimport {type SortOrder} from './types'\n\ninterface PaneHeaderProps {\n  contentAfter?: ReactNode\n  index: number\n  initialValueTemplates?: InitialValueTemplateItem[]\n  menuItemGroups?: PaneMenuItemGroup[]\n  menuItems?: PaneMenuItem[]\n  setLayout: (layout: GeneralPreviewLayoutKey) => void\n  setSortOrder: (sortOrder: SortOrder) => void\n  title: string\n}\n\nexport const PaneHeader = memo(\n  ({\n    contentAfter,\n    index,\n    initialValueTemplates = [],\n    menuItemGroups = [],\n    menuItems = [],\n    setLayout,\n    setSortOrder,\n    title,\n  }: PaneHeaderProps) => {\n    const {features} = useStructureTool()\n    const {collapsed, isLast} = usePane()\n    // Prevent focus if this is the last (non-collapsed) pane.\n    const tabIndex = isLast && !collapsed ? -1 : 0\n\n    const actionHandlers = useMemo((): Record<string, StructureToolPaneActionHandler> => {\n      return {\n        setLayout: ({layout: value}: {layout: GeneralPreviewLayoutKey}) => {\n          setLayout(value)\n        },\n        setSortOrder: (sort: SortOrder) => {\n          setSortOrder(sort)\n        },\n      }\n    }, [setLayout, setSortOrder])\n\n    return (\n      <TooltipDelayGroupProvider>\n        <StructurePaneHeader\n          actions={\n            <PaneHeaderActions\n              initialValueTemplateItems={initialValueTemplates}\n              actionHandlers={actionHandlers}\n              menuItemGroups={menuItemGroups}\n              menuItems={menuItems}\n            />\n          }\n          backButton={\n            features.backButton &&\n            index > 0 && (\n              <Button\n                as={BackLink}\n                data-as=\"a\"\n                icon={ArrowLeftIcon}\n                mode=\"bleed\"\n                tooltipProps={{content: 'Back'}}\n              />\n            )\n          }\n          contentAfter={contentAfter}\n          tabIndex={tabIndex}\n          title={title}\n        />\n      </TooltipDelayGroupProvider>\n    )\n  },\n)\n\nPaneHeader.displayName = 'Memo(PaneHeader)'\n","'use no memo'\n// The `use no memo` directive is due to a known issue with react-table and react compiler: https://github.com/TanStack/table/issues/5567\n\nimport {type SanityDocument} from '@sanity/client'\nimport {Checkbox} from '@sanity/ui'\nimport {type CellContext} from '@tanstack/react-table'\nimport {type MouseEvent, useCallback} from 'react'\n\nexport function DocumentSheetListSelect(props: CellContext<SanityDocument, unknown>) {\n  const {row, table} = props\n\n  const {selectedAnchor, setSelectedAnchor} = table.options.meta || {}\n\n  const handleOnClick = useCallback(\n    (e: MouseEvent<HTMLInputElement>) => {\n      if (e.shiftKey && selectedAnchor !== null && selectedAnchor !== undefined) {\n        const shiftClickIndex = row.index\n        const lowerIndex = shiftClickIndex < selectedAnchor ? shiftClickIndex : selectedAnchor\n        const upperIndex = shiftClickIndex < selectedAnchor ? selectedAnchor : shiftClickIndex\n\n        const additionalSelectedRows = table\n          .getRowModel()\n          .flatRows.slice(lowerIndex, upperIndex + 1)\n          .map(({id}) => id)\n\n        const currentSelectedRows = table.getSelectedRowModel().rows.map(({id}) => id)\n        table.setRowSelection(() =>\n          [...additionalSelectedRows, ...currentSelectedRows].reduce(\n            (nextSelectedRows, rowId) => ({...nextSelectedRows, [rowId]: true}),\n            {},\n          ),\n        )\n      } else if (setSelectedAnchor) {\n        const isRowCurrentlySelected = row.getIsSelected()\n        if (isRowCurrentlySelected) {\n          // about to unselect so invalidate current anchor\n          setSelectedAnchor(null)\n        } else {\n          // override anchor with new selection index\n          setSelectedAnchor(row.index)\n        }\n\n        row.toggleSelected()\n      }\n    },\n    [selectedAnchor, row, setSelectedAnchor, table],\n  )\n\n  return (\n    <Checkbox\n      style={{paddingLeft: 4}}\n      checked={props.row.getIsSelected()}\n      disabled={!props.row.getCanSelect()}\n      // onChange doesn't have shiftKey in event, but want to control this checkbox\n      // need to define noop onChange to suppress the warning\n      onChange={() => null}\n      onClick={handleOnClick}\n    />\n  )\n}\n","import {type SanityDocument} from '@sanity/types'\nimport {type Table} from '@tanstack/react-table'\nimport {type ReactNode, useCallback, useContext, useEffect, useMemo, useState} from 'react'\nimport {DocumentSheetListContext} from 'sanity/_singletons'\n\ninterface DocumentSheetListProviderProps {\n  children?: ReactNode\n  table: Table<SanityDocument>\n}\n\ntype SelectedCellDetails = {\n  colId: string\n  rowIndex: number\n  state: 'focused' | 'selected'\n} | null\n\n/** @internal */\nexport interface DocumentSheetListContextValue {\n  focusAnchorCell: () => void\n  resetFocusSelection: () => void\n  setSelectedAnchorCell: (colId: string, rowIndex: number) => void\n  getStateByCellId: (\n    colId: string,\n    rowIndex: number,\n  ) => 'focused' | 'selectedAnchor' | 'selectedRange' | null\n  submitFocusedCell: () => void\n}\n\n/** @internal */\nexport const useDocumentSheetListContext = (): DocumentSheetListContextValue => {\n  const context = useContext(DocumentSheetListContext)\n\n  if (context === undefined) {\n    throw new Error('useDocumentSheetListContext must be used within an DocumentSheetListProvider')\n  }\n  return context\n}\n\n/** @internal */\nexport function DocumentSheetListProvider({\n  children,\n  table,\n}: DocumentSheetListProviderProps): ReactNode {\n  const [selectedAnchorCellDetails, setSelectedAnchorCellDetails] =\n    useState<SelectedCellDetails>(null)\n  const [selectedRangeCellIndexes, setSelectedRangeCellIndexes] = useState<number[]>([])\n\n  const clearAndSetFocusSelection = useCallback(\n    (nextAnchorDetails: SelectedCellDetails = null) => {\n      if (\n        selectedAnchorCellDetails?.state === 'focused' &&\n        document.activeElement instanceof HTMLElement\n      ) {\n        document.activeElement.blur()\n      }\n\n      setSelectedAnchorCellDetails(nextAnchorDetails)\n      setSelectedRangeCellIndexes([])\n    },\n    [selectedAnchorCellDetails],\n  )\n\n  const resetFocusSelection = useCallback(\n    () => clearAndSetFocusSelection(),\n    [clearAndSetFocusSelection],\n  )\n\n  const changeSelectionColumn = useCallback(\n    (direction: 'left' | 'right') => {\n      if (!selectedAnchorCellDetails) return\n\n      const visibleColumns = table.getVisibleLeafColumns()\n      const columnIndexAfterMove =\n        visibleColumns.findIndex((col) => col.id === selectedAnchorCellDetails.colId) +\n        (direction === 'left' ? -1 : 1)\n\n      if (columnIndexAfterMove < 0 || columnIndexAfterMove >= visibleColumns.length) return\n\n      clearAndSetFocusSelection({\n        colId: visibleColumns[columnIndexAfterMove].id,\n        rowIndex: selectedAnchorCellDetails.rowIndex,\n        state: 'selected',\n      })\n    },\n    [clearAndSetFocusSelection, selectedAnchorCellDetails, table],\n  )\n\n  const changeSelectionRange = useCallback(\n    (direction: 'up' | 'down') => {\n      if (!selectedAnchorCellDetails) return\n\n      setSelectedRangeCellIndexes((previousSelection) => {\n        const {rowIndex: anchorIndex} = selectedAnchorCellDetails\n        const getNextIndex = (startingIndex: number) =>\n          startingIndex + (direction === 'down' ? 1 : -1)\n        // if no cells are selected, select the cell in the direction\n        if (!previousSelection.length) {\n          const firstSelectedIndex = getNextIndex(anchorIndex)\n          if (firstSelectedIndex < 0) return []\n          return [firstSelectedIndex]\n        }\n        const lastIndexSelected = previousSelection[previousSelection.length - 1]\n        const nextIndex = getNextIndex(lastIndexSelected)\n\n        // if the cell in the direction is out of bounds, return the previous selection\n        if (nextIndex < 0) return previousSelection\n\n        // if the cell in the direction is the same as the focused cell, deselect all cells\n        if (nextIndex === anchorIndex) return []\n\n        // if the cell in the direction is already selected, deselect the last selected cell\n        if (previousSelection.includes(nextIndex)) {\n          return previousSelection.slice(0, -1)\n        }\n\n        return [...previousSelection, nextIndex]\n      })\n    },\n    [selectedAnchorCellDetails],\n  )\n\n  const setSelectedAnchorCell = useCallback(\n    (colId: string, rowIndex: number) => {\n      clearAndSetFocusSelection({colId, rowIndex, state: 'selected'})\n    },\n    [clearAndSetFocusSelection],\n  )\n\n  const handleEscapePress = useCallback(() => {\n    if (!selectedAnchorCellDetails) return\n    if (selectedRangeCellIndexes.length) {\n      // only clear selected range if it exists\n      setSelectedRangeCellIndexes([])\n    } else {\n      const nextAnchorCellDetails: SelectedCellDetails =\n        selectedAnchorCellDetails.state === 'selected'\n          ? null\n          : {\n              ...selectedAnchorCellDetails,\n              state: 'selected',\n            }\n      clearAndSetFocusSelection(nextAnchorCellDetails)\n    }\n  }, [clearAndSetFocusSelection, selectedAnchorCellDetails, selectedRangeCellIndexes.length])\n\n  const handleUpDownKey = useCallback(\n    (isShiftKey: boolean, key: string) => {\n      if (!selectedAnchorCellDetails) return\n\n      const direction = key === 'ArrowDown' ? 'down' : 'up'\n      const offset = direction === 'down' ? 1 : -1\n\n      if (isShiftKey) {\n        changeSelectionRange(direction)\n      } else {\n        const newSelectedCellRowIndex = selectedAnchorCellDetails.rowIndex + offset\n        if (newSelectedCellRowIndex < 0) return\n\n        setSelectedAnchorCell(selectedAnchorCellDetails.colId, newSelectedCellRowIndex)\n      }\n    },\n    [changeSelectionRange, selectedAnchorCellDetails, setSelectedAnchorCell],\n  )\n\n  const handleAnchorKeydown = useCallback(\n    (event: KeyboardEvent) => {\n      if (!selectedAnchorCellDetails) return\n\n      const {key, shiftKey} = event\n\n      switch (key) {\n        case 'Shift':\n          break // shift allow should do nothing\n\n        case 'Escape':\n          handleEscapePress()\n          break\n\n        case 'ArrowDown':\n        case 'ArrowUp':\n          event.preventDefault()\n          handleUpDownKey(shiftKey, key)\n          break\n\n        case 'ArrowLeft':\n        case 'ArrowRight':\n          // when cell is focused, arrows should have default behavior\n          // only prevent default when cell is selected\n          if (selectedAnchorCellDetails.state === 'selected') {\n            event.preventDefault()\n            changeSelectionColumn(key === 'ArrowLeft' ? 'left' : 'right')\n          }\n          break\n\n        default:\n          break\n      }\n    },\n    [selectedAnchorCellDetails, handleEscapePress, handleUpDownKey, changeSelectionColumn],\n  )\n\n  const handleAnchorClick = useCallback(\n    (event: MouseEvent) => {\n      if (!selectedAnchorCellDetails) return\n      const isClickInAnchorCell = document\n        .getElementById(\n          `cell-${selectedAnchorCellDetails.colId}-${selectedAnchorCellDetails.rowIndex}`,\n        )\n        ?.contains(event.target as Node)\n\n      if (!isClickInAnchorCell) resetFocusSelection()\n    },\n    [resetFocusSelection, selectedAnchorCellDetails],\n  )\n\n  useEffect(() => {\n    if (selectedAnchorCellDetails) {\n      document.addEventListener('keydown', handleAnchorKeydown)\n      document.addEventListener('click', handleAnchorClick)\n    }\n\n    return () => {\n      if (selectedAnchorCellDetails) {\n        document.removeEventListener('keydown', handleAnchorKeydown)\n        document.removeEventListener('click', handleAnchorClick)\n      }\n    }\n  }, [handleAnchorClick, handleAnchorKeydown, selectedAnchorCellDetails])\n\n  const focusAnchorCell = useCallback(\n    () =>\n      setSelectedAnchorCellDetails((anchorCellDetails) => {\n        if (!anchorCellDetails) return null\n\n        return {...anchorCellDetails, state: 'focused'}\n      }),\n    [],\n  )\n\n  const getStateByCellId = useCallback(\n    (colId: string, rowIndex: number) => {\n      if (selectedAnchorCellDetails?.colId !== colId) return null\n\n      if (selectedAnchorCellDetails.rowIndex === rowIndex)\n        return selectedAnchorCellDetails.state === 'focused' ? 'focused' : 'selectedAnchor'\n\n      if (selectedRangeCellIndexes.includes(rowIndex)) return 'selectedRange'\n\n      return null\n    },\n    [selectedAnchorCellDetails, selectedRangeCellIndexes],\n  )\n\n  const submitFocusedCell = useCallback(() => {\n    if (!selectedAnchorCellDetails) return\n\n    clearAndSetFocusSelection({\n      colId: selectedAnchorCellDetails.colId,\n      rowIndex: selectedAnchorCellDetails.rowIndex + 1,\n      state: 'selected',\n    })\n  }, [clearAndSetFocusSelection, selectedAnchorCellDetails])\n\n  const value = useMemo<DocumentSheetListContextValue>(\n    () => ({\n      focusAnchorCell,\n      resetFocusSelection,\n      setSelectedAnchorCell,\n      getStateByCellId,\n      submitFocusedCell,\n    }),\n    [\n      focusAnchorCell,\n      resetFocusSelection,\n      setSelectedAnchorCell,\n      getStateByCellId,\n      submitFocusedCell,\n    ],\n  )\n\n  return (\n    <DocumentSheetListContext.Provider value={value}>{children}</DocumentSheetListContext.Provider>\n  )\n}\n","'use no memo'\n// The `use no memo` directive is due to a known issue with react-table and react compiler: https://github.com/TanStack/table/issues/5567\n\n/* eslint-disable i18next/no-literal-string */\nimport {type ObjectFieldType} from '@sanity/types'\nimport {Select, TextInput} from '@sanity/ui'\nimport {type Cell, type CellContext, flexRender} from '@tanstack/react-table'\nimport {type MouseEventHandler, useCallback, useEffect, useRef, useState} from 'react'\nimport {type SanityDocument} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {useDocumentSheetListContext} from './DocumentSheetListProvider'\n\nconst DataCell = styled.td<{width: number}>`\n  display: flex;\n  overflow: hidden;\n  box-sizing: border-box;\n  width: ${({width}) => width}px;\n  border-top: 1px solid var(--card-border-color);\n  background-color: var(--card-bg-color);\n`\n\nconst PinnedDataCell = styled(DataCell)`\n  position: sticky;\n  z-index: 2;\n`\n\ninterface SheetListCellInnerProps extends CellContext<SanityDocument, unknown> {\n  fieldType: ObjectFieldType\n}\n\ntype CellInputElement = HTMLInputElement | HTMLSelectElement\ntype InputRef = CellInputElement | null\n\n/** @internal */\nexport function SheetListCellInner(props: SheetListCellInnerProps) {\n  const {getValue, column, row, fieldType} = props\n  const cellId = `cell-${column.id}-${row.index}`\n  const [renderValue, setRenderValue] = useState<string>(getValue() as string)\n  const [isDirty, setIsDirty] = useState(false)\n  const inputRef = useRef<InputRef>(null)\n  const {\n    focusAnchorCell,\n    resetFocusSelection,\n    setSelectedAnchorCell,\n    getStateByCellId,\n    submitFocusedCell,\n  } = useDocumentSheetListContext()\n  const cellState = getStateByCellId(column.id, row.index)\n\n  const handleOnFocus = useCallback(() => {\n    // reselect in cases where focus achieved without initial mousedown\n    setSelectedAnchorCell(column.id, row.index)\n    focusAnchorCell()\n  }, [column.id, focusAnchorCell, row.index, setSelectedAnchorCell])\n  const {patchDocument} = props.table.options.meta || {}\n\n  const handleProgrammaticFocus = () => {\n    inputRef.current?.focus()\n    if (inputRef.current instanceof HTMLInputElement) {\n      inputRef.current.select()\n    }\n  }\n\n  const handleOnMouseDown: MouseEventHandler<CellInputElement> = (event) => {\n    if (event.detail === 2) {\n      handleProgrammaticFocus()\n    } else {\n      event.preventDefault()\n      setSelectedAnchorCell(column.id, row.index)\n    }\n  }\n\n  const handleOnEnterDown = useCallback(\n    (event: KeyboardEvent) => {\n      const {key} = event\n      if (key === 'Enter') {\n        if (cellState === 'selectedAnchor') handleProgrammaticFocus()\n        if (cellState === 'focused') submitFocusedCell()\n      }\n    },\n    [cellState, submitFocusedCell],\n  )\n\n  const handleOnChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setIsDirty(true)\n    setRenderValue(event.target.value)\n  }\n\n  const handleOnBlur = () => {\n    if (isDirty) {\n      patchDocument?.(row.id, column.id, renderValue)\n      setIsDirty(false)\n    }\n    resetFocusSelection()\n  }\n\n  const handlePaste = useCallback(\n    (event: ClipboardEvent) => {\n      const clipboardData = event.clipboardData?.getData('Text')\n\n      if (typeof clipboardData === 'string' || typeof clipboardData === 'number') {\n        setRenderValue(clipboardData)\n        // patch immediately when pasting\n        patchDocument?.(row.id, column.id, clipboardData)\n      }\n    },\n    [column.id, patchDocument, row.id],\n  )\n\n  const handleCopy = useCallback(() => {\n    navigator.clipboard.writeText(renderValue.toString())\n  }, [renderValue])\n\n  useEffect(() => {\n    if (cellState === 'selectedAnchor' || cellState === 'focused')\n      // only listen for enter key when cell is focused or anchor\n      document.addEventListener('keydown', handleOnEnterDown)\n    if (cellState === 'selectedAnchor' || cellState === 'selectedRange')\n      // if cell is selected, paste events should be handled\n      document.addEventListener('paste', handlePaste)\n\n    if (cellState === 'selectedAnchor')\n      // only allow copying when cell is selected anchor\n      document.addEventListener('copy', handleCopy)\n\n    return () => {\n      if (cellState === 'selectedAnchor' || cellState === 'focused')\n        document.removeEventListener('keydown', handleOnEnterDown)\n      if (cellState === 'selectedAnchor' || cellState === 'selectedRange')\n        document.removeEventListener('paste', handlePaste)\n      if (cellState === 'selectedAnchor') document.removeEventListener('copy', handleCopy)\n    }\n  }, [\n    cellId,\n    cellState,\n    column.id,\n    getStateByCellId,\n    handleCopy,\n    handleOnEnterDown,\n    handlePaste,\n    row.index,\n  ])\n\n  const getBorderStyle = () => {\n    if (cellState === 'focused') return '2px solid blue'\n    if (cellState === 'selectedRange') return '1px solid green'\n    if (cellState === 'selectedAnchor') return '1px solid blue'\n\n    return '1px solid transparent'\n  }\n\n  const inputProps = {\n    'onFocus': handleOnFocus,\n    'onBlur': handleOnBlur,\n    'onMouseDown': handleOnMouseDown,\n    'aria-selected': !!cellState,\n    'data-testid': cellId,\n    'id': cellId,\n    'ref': (ref: InputRef) => {\n      inputRef.current = ref\n    },\n  }\n\n  if (fieldType.name === 'boolean') {\n    return (\n      <Select\n        {...inputProps}\n        onChange={() => null}\n        radius={0}\n        style={{\n          boxShadow: 'none',\n          border: getBorderStyle(),\n          padding: 0,\n        }}\n        value={JSON.stringify(renderValue)}\n      >\n        <option value=\"True\">True</option>\n        <option value=\"False\">False</option>\n      </Select>\n    )\n  }\n\n  return (\n    <TextInput\n      {...inputProps}\n      size={0}\n      radius={0}\n      border={false}\n      style={{\n        border: getBorderStyle(),\n        padding: '22px 16px',\n      }}\n      value={\n        typeof renderValue === 'string' || typeof renderValue === 'number'\n          ? renderValue\n          : JSON.stringify(renderValue)\n      }\n      onChange={handleOnChange}\n    />\n  )\n}\n\n/** @internal */\nexport function SheetListCell(cell: Cell<SanityDocument, unknown>) {\n  const isPinned = cell.column.getIsPinned()\n  const Cell = isPinned ? PinnedDataCell : DataCell\n  const borderWidth = isPinned && cell.column.getIsLastColumn('left') ? 2 : 1\n\n  return (\n    <Cell\n      key={cell.row.original._id + cell.id}\n      style={{\n        left: cell.column.getStart('left') ?? undefined,\n        borderRight: `${borderWidth}px solid var(--card-border-color)`,\n      }}\n      width={cell.column.getSize()}\n    >\n      {flexRender(cell.column.columnDef.cell, cell.getContext?.())}\n    </Cell>\n  )\n}\n","'use no memo'\n// The `use no memo` directive is due to a known issue with react-table and react compiler: https://github.com/TanStack/table/issues/5567\n\nimport {isObjectSchemaType, type ObjectSchemaType} from '@sanity/types'\nimport {Box, Checkbox, Flex, Text} from '@sanity/ui'\nimport {\n  type AccessorKeyColumnDef,\n  createColumnHelper,\n  type GroupColumnDef,\n  type VisibilityState,\n} from '@tanstack/react-table'\nimport {useMemo} from 'react'\nimport {useObservable} from 'react-rx'\nimport {\n  type DocumentPreviewStore,\n  DocumentStatusIndicator,\n  getPreviewStateObservable,\n  type SanityDocument,\n  type SchemaType,\n  useDocumentPreviewStore,\n  useDocumentVersionInfo,\n} from 'sanity'\n\nimport {DocumentSheetListSelect} from './DocumentSheetListSelect'\nimport {SheetListCellInner} from './SheetListCell'\n\nexport const VISIBLE_COLUMN_LIMIT = 5\n\nconst PreviewCell = (props: {\n  documentPreviewStore: DocumentPreviewStore\n  schemaType: SchemaType\n  row: {\n    original: SanityDocument\n  }\n}) => {\n  const {documentPreviewStore, row, schemaType} = props\n  const previewStateObservable = useMemo(\n    () => getPreviewStateObservable(documentPreviewStore, schemaType, row.original._id),\n    [documentPreviewStore, row.original._id, schemaType],\n  )\n\n  const versionsInfo = useDocumentVersionInfo(row.original._id)\n\n  const {snapshot, isLoading} = useObservable(previewStateObservable, {\n    snapshot: null,\n    isLoading: true,\n  })\n  if (isLoading) {\n    return (\n      <Text size={1} muted>\n        Loading...\n      </Text>\n    )\n  }\n  const displayValue = (snapshot?.title ?? 'Untitled') as string\n\n  return (\n    <Flex align=\"center\" gap={3}>\n      <DocumentStatusIndicator\n        draft={versionsInfo.draft}\n        published={versionsInfo.published}\n        versions={undefined}\n      />\n      <Text size={1}>{displayValue}</Text>\n    </Flex>\n  )\n}\n\nconst columnHelper = createColumnHelper<SanityDocument>()\nconst SUPPORTED_FIELDS = ['string', 'number', 'boolean']\n\ntype Columns = (\n  | AccessorKeyColumnDef<SanityDocument, unknown>\n  | GroupColumnDef<SanityDocument, unknown>\n)[]\n\nconst getColsFromSchemaType = (schemaType: ObjectSchemaType, parentalField?: string): Columns => {\n  return schemaType.fields.reduce<Columns>((tableColumns: Columns, field) => {\n    const {type, name} = field\n    if (SUPPORTED_FIELDS.includes(type.name)) {\n      const nextCol = columnHelper.accessor(\n        // accessor must use dot notation for internal tanstack method of reading cell data\n        parentalField ? `${parentalField}.${field.name}` : field.name,\n        {\n          id: parentalField ? `${parentalField}_${field.name}` : field.name,\n          header: field.type.title,\n          enableHiding: true,\n          cell: (info) => <SheetListCellInner {...info} fieldType={type} />,\n        },\n      )\n\n      return [...tableColumns, nextCol]\n    }\n\n    // if first layer nested object\n    if (type.name === 'object' && isObjectSchemaType(type) && !parentalField) {\n      return [\n        ...tableColumns,\n        columnHelper.group({header: name, columns: getColsFromSchemaType(type, field.name)}),\n      ]\n    }\n\n    return tableColumns\n  }, [])\n}\n\n// Type guard function to check if a column is of type GroupColumnDef\nfunction isAccessorKeyColumnDef(\n  column: Columns[number],\n): column is AccessorKeyColumnDef<SanityDocument, unknown> {\n  return 'accessorKey' in column\n}\nfunction isGroupColumnDef(\n  column: AccessorKeyColumnDef<SanityDocument, unknown> | GroupColumnDef<SanityDocument, unknown>,\n): column is GroupColumnDef<SanityDocument, unknown> {\n  return 'columns' in column\n}\n\nconst flatColumns = (cols: Columns): AccessorKeyColumnDef<SanityDocument, unknown>[] => {\n  return cols.flatMap((col) => {\n    if (isAccessorKeyColumnDef(col)) {\n      return col\n    }\n    if (isGroupColumnDef(col)) {\n      return col.columns ? flatColumns(col.columns) : []\n    }\n    return []\n  })\n}\n\nexport function useDocumentSheetColumns(documentSchemaType?: ObjectSchemaType) {\n  const documentPreviewStore = useDocumentPreviewStore()\n\n  const columns: Columns = useMemo(() => {\n    if (!documentSchemaType) {\n      return []\n    }\n    return [\n      columnHelper.display({\n        id: 'selected',\n        enableHiding: false,\n        header: (info) => (\n          <Box>\n            <Checkbox\n              style={{paddingLeft: 4}}\n              indeterminate={info.table.getIsSomeRowsSelected()}\n              onChange={info.table.getToggleAllPageRowsSelectedHandler()}\n            />\n            {/* eslint-disable-next-line i18next/no-literal-string */}\n            {info.table.getSelectedRowModel().rows.length} selected\n          </Box>\n        ),\n        cell: DocumentSheetListSelect,\n      }),\n      columnHelper.accessor('Preview', {\n        enableHiding: false,\n        id: 'Preview',\n        cell: (info) => {\n          return (\n            <PreviewCell\n              {...info}\n              documentPreviewStore={documentPreviewStore}\n              schemaType={documentSchemaType}\n            />\n          )\n        },\n      }),\n      ...getColsFromSchemaType(documentSchemaType),\n    ]\n  }, [documentPreviewStore, documentSchemaType])\n\n  const [initialColumnsVisibility]: [VisibilityState, number] = useMemo(\n    () =>\n      flatColumns(columns).reduce<[VisibilityState, number]>(\n        ([accCols, countAllowedVisible], column) => {\n          if (!column.id) throw new Error('Column must have an id')\n          const visibilityKey = column.id\n\n          // this column is always visible\n          if (!column.enableHiding) {\n            return [{...accCols, [visibilityKey]: true}, countAllowedVisible]\n          }\n\n          // have already reached column visibility limit, hide column by default\n          if (countAllowedVisible === VISIBLE_COLUMN_LIMIT) {\n            return [{...accCols, [visibilityKey]: false}, countAllowedVisible]\n          }\n\n          return [{...accCols, [visibilityKey]: true}, countAllowedVisible + 1]\n        },\n        [{}, 0],\n      ),\n    [columns],\n  )\n\n  return {columns, initialColumnsVisibility}\n}\n","'use no memo'\n// The `use no memo` directive is due to a known issue with react-table and react compiler: https://github.com/TanStack/table/issues/5567\n\nimport {Box, Checkbox, Flex, Menu, Stack, Text} from '@sanity/ui'\nimport {type Column, type Table} from '@tanstack/react-table'\nimport {useCallback} from 'react'\nimport {type SanityDocument, useTranslation} from 'sanity'\n\nimport {Button, MenuButton} from '../../../../ui-components'\nimport {VISIBLE_COLUMN_LIMIT} from './useDocumentSheetColumns'\n\ntype ColumnsControlProps = {\n  table: Table<SanityDocument>\n}\n\nexport function ColumnsControl({table}: ColumnsControlProps) {\n  const {t} = useTranslation()\n  const isVisibleLimitReached =\n    table.getVisibleLeafColumns().filter((col) => col.getCanHide()).length >= VISIBLE_COLUMN_LIMIT\n\n  const setInitialColumns = useCallback(() => {\n    table.resetColumnVisibility()\n  }, [table])\n\n  const handleColumnOnChange = (column: Column<SanityDocument, unknown>) => () => {\n    column.toggleVisibility()\n  }\n\n  const getColumnVisibilityDisabled = (column: Column<SanityDocument, unknown>) => {\n    const isColumnVisible = column.getIsVisible()\n    const isSingleColumnVisible =\n      table.getVisibleLeafColumns().filter((col) => col.getCanHide()).length === 1\n\n    return (isVisibleLimitReached && !isColumnVisible) || (isSingleColumnVisible && isColumnVisible)\n  }\n\n  return (\n    <MenuButton\n      button={<Button mode=\"bleed\" text={t('sheet-list.edit-columns')} />}\n      id=\"columns-control\"\n      menu={\n        <Menu padding={3} paddingTop={4} style={{width: 240}}>\n          <Flex direction=\"column\" height=\"fill\" gap={3}>\n            <Text weight=\"semibold\" size={1}>\n              {t('sheet-list.select-fields')}\n            </Text>\n            <Flex style={{flex: '1 1 auto', maxHeight: 320, overflowY: 'scroll'}}>\n              <Stack>\n                {table\n                  .getAllLeafColumns()\n                  .filter((column) => column.getCanHide())\n                  .map((column) => (\n                    <Flex key={column.id} marginY={2} align=\"center\">\n                      <Checkbox\n                        readOnly={getColumnVisibilityDisabled(column)}\n                        checked={column.getIsVisible()}\n                        onChange={handleColumnOnChange(column)}\n                        id={`col-visibility-${column.id}`}\n                        style={{display: 'block'}}\n                      />\n                      <Box flex={1} paddingLeft={3}>\n                        <Text size={1}>\n                          <label htmlFor={`col-visibility-${column.id}`}>\n                            {column.columnDef.header?.toString()}\n                          </label>\n                        </Text>\n                      </Box>\n                    </Flex>\n                  ))}\n              </Stack>\n            </Flex>\n            <Button\n              width=\"fill\"\n              mode=\"ghost\"\n              text={t('sheet-list.reset-columns')}\n              onClick={setInitialColumns}\n            />\n          </Flex>\n        </Menu>\n      }\n      placement=\"bottom\"\n      popover={{portal: true}}\n    />\n  )\n}\n","import {Flex} from '@sanity/ui'\nimport {Filters, SearchHeader, useSearchState} from 'sanity'\nimport {styled} from 'styled-components'\n\nconst SearchContainer = styled(Flex)`\n  flex-shrink: 0;\n`\n\nexport function DocumentSheetListFilter() {\n  const {\n    state: {filtersVisible},\n  } = useSearchState()\n\n  return (\n    <SearchContainer>\n      <SearchHeader />\n      {filtersVisible && <Filters showTypeFilter={false} />}\n    </SearchContainer>\n  )\n}\n","'use no memo'\n// The `use no memo` directive is due to a known issue with react-table and react compiler: https://github.com/TanStack/table/issues/5567\n\nimport {CloseIcon, EllipsisHorizontalIcon} from '@sanity/icons'\nimport {type SanityDocument} from '@sanity/types'\nimport {Box, Flex, Menu, Text} from '@sanity/ui'\nimport {flexRender, type Header as HeaderType, type HeaderGroup} from '@tanstack/react-table'\nimport {useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Button, MenuButton, MenuItem, Tooltip} from '../../../../ui-components'\n\nconst Header = styled.th<{width: number}>`\n  margin: 16px;\n  z-index: 1;\n  padding: 22px 0px;\n  border-top: 1px solid var(--card-border-color);\n  background-color: var(--card-badge-default-bg-color);\n  box-sizing: border-box;\n  text-align: left;\n  width: ${({width}) => width}px;\n  max-width: ${({width}) => width}px;\n`\n\nconst PinnedHeader = styled(Header)`\n  position: sticky;\n  z-index: 2;\n`\n\nconst HoverMenu = styled.div`\n  visibility: hidden;\n\n  ${Header}:hover & {\n    visibility: visible;\n  }\n`\n\ntype DocumentSheetListHeaderProps = {\n  header: HeaderType<SanityDocument, unknown>\n  headerGroup: HeaderGroup<SanityDocument>\n}\n\nexport function DocumentSheetListHeader(props: DocumentSheetListHeaderProps) {\n  const {header, headerGroup} = props\n  const {t} = useTranslation()\n\n  const isPinned = header.column.getIsPinned()\n\n  const headerTitle =\n    headerGroup.depth > 0 && !header.column.parent ? null : (\n      <Text size={1} weight=\"semibold\" textOverflow=\"ellipsis\">\n        {flexRender(header.column.columnDef.header, header.getContext())}\n      </Text>\n    )\n\n  const HeaderTag = isPinned ? PinnedHeader : Header\n\n  const canShowHeaderMenu =\n    header.column.getCanHide() &&\n    (headerGroup.depth === 0 ? !header.column.columns.length : header.column.parent)\n\n  const borderWidth = isPinned && header.column.getIsLastColumn('left') ? 2 : 1\n\n  return (\n    <HeaderTag\n      key={header.id}\n      style={{\n        left: header.column.getStart('left') ?? undefined,\n        borderRight: `${borderWidth}px solid var(--card-border-color)`,\n      }}\n      data-testid={`header-${header.id}`}\n      width={header.getSize()}\n    >\n      <Flex justify=\"space-between\" marginX={2} align=\"baseline\">\n        <Tooltip delay={500} content={headerTitle}>\n          <Box style={{boxSizing: 'border-box'}} marginLeft={3} marginRight={3}>\n            {headerTitle}\n          </Box>\n        </Tooltip>\n        {canShowHeaderMenu && (\n          <HoverMenu>\n            <MenuButton\n              button={\n                <Button\n                  tooltipProps={{content: 'Open field menu'}}\n                  mode=\"bleed\"\n                  icon={EllipsisHorizontalIcon}\n                  data-testid=\"field-menu-button\"\n                />\n              }\n              id=\"field menu\"\n              popover={{placement: 'bottom-end'}}\n              menu={\n                <Menu>\n                  <MenuItem\n                    text={t('sheet-list.hide-field')}\n                    icon={CloseIcon}\n                    onClick={() => header.column.toggleVisibility()}\n                  />\n                </Menu>\n              }\n            />\n          </HoverMenu>\n        )}\n      </Flex>\n    </HeaderTag>\n  )\n}\n","'use no memo'\n// The `use no memo` directive is due to a known issue with react-table and react compiler: https://github.com/TanStack/table/issues/5567\n\n/* eslint-disable i18next/no-literal-string */\nimport {\n  ChevronLeftIcon,\n  ChevronRightIcon,\n  DoubleChevronLeftIcon,\n  DoubleChevronRightIcon,\n} from '@sanity/icons'\nimport {Flex, Text} from '@sanity/ui'\nimport {type Table} from '@tanstack/react-table'\nimport {type SanityDocument} from 'sanity'\n\nimport {Button, TooltipDelayGroupProvider} from '../../../../ui-components'\n\nexport function DocumentSheetListPaginator({table}: {table: Table<SanityDocument>}) {\n  return (\n    <TooltipDelayGroupProvider>\n      <Flex gap={3} align={'center'}>\n        <Button\n          onClick={() => table.setPageIndex(0)}\n          disabled={!table.getCanPreviousPage()}\n          icon={DoubleChevronLeftIcon}\n          tooltipProps={{\n            content: 'Go to first page',\n          }}\n        />\n        <Button\n          onClick={() => table.previousPage()}\n          disabled={!table.getCanPreviousPage()}\n          icon={ChevronLeftIcon}\n          tooltipProps={{\n            content: 'Go to previous page',\n          }}\n        />\n        <Text style={{whiteSpace: 'nowrap'}}>\n          {table.getState().pagination.pageIndex + 1} of {table.getPageCount()}\n        </Text>\n\n        <Button\n          onClick={() => table.nextPage()}\n          disabled={!table.getCanNextPage()}\n          icon={ChevronRightIcon}\n          tooltipProps={{\n            content: 'Go to next page',\n          }}\n        />\n        <Button\n          onClick={() => table.setPageIndex(table.getPageCount() - 1)}\n          disabled={!table.getCanNextPage()}\n          icon={DoubleChevronRightIcon}\n          tooltipProps={{\n            content: 'Go to last page',\n          }}\n        />\n        <select\n          value={table.getState().pagination.pageSize}\n          onChange={(e) => {\n            table.setPageSize(Number(e.target.value))\n          }}\n        >\n          {[25, 50, 100].map((pageSize) => (\n            <option key={pageSize} value={pageSize}>\n              {pageSize}\n            </option>\n          ))}\n        </select>\n      </Flex>\n    </TooltipDelayGroupProvider>\n  )\n}\n","import {type ListenEvent, type ListenOptions} from '@sanity/client'\nimport {useCallback, useEffect, useMemo, useReducer, useState} from 'react'\nimport {catchError, of} from 'rxjs'\nimport {DEFAULT_STUDIO_CLIENT_OPTIONS, getDraftId, type SanityDocument, useClient} from 'sanity'\n\ninterface DocumentDeletedAction {\n  id: string\n  type: 'DOCUMENT_DELETED'\n}\n\ninterface DocumentUpdatedAction {\n  payload: SanityDocument\n  type: 'DOCUMENT_UPDATED'\n}\n\ninterface DocumentsSetAction {\n  documents: SanityDocument[]\n  type: 'DOCUMENTS_SET'\n}\n\ninterface DocumentReceivedAction {\n  payload: SanityDocument\n  type: 'DOCUMENT_RECEIVED'\n}\n\nexport type DocumentsReducerAction =\n  | DocumentDeletedAction\n  | DocumentUpdatedAction\n  | DocumentsSetAction\n  | DocumentReceivedAction\n\nexport interface DocumentsReducerState {\n  documents: Record<string, SanityDocument>\n}\n\nfunction createDocumentsSet(documents: SanityDocument[]) {\n  const documentsById = documents.reduce((acc, doc) => ({...acc, [doc._id]: doc}), {})\n  return documentsById\n}\n\nfunction documentsReducer(\n  state: DocumentsReducerState,\n  action: DocumentsReducerAction,\n): DocumentsReducerState {\n  switch (action.type) {\n    case 'DOCUMENTS_SET': {\n      // Create an object with the documents id as key\n      const documents = createDocumentsSet(action.documents)\n\n      return {\n        ...state,\n        documents: documents,\n      }\n    }\n\n    case 'DOCUMENT_RECEIVED': {\n      const nextDocumentResult = action.payload as SanityDocument\n\n      return {\n        ...state,\n        documents: {\n          ...state.documents,\n          [nextDocumentResult._id]: nextDocumentResult,\n        },\n      }\n    }\n\n    case 'DOCUMENT_DELETED': {\n      const {[action.id]: _, ...restDocuments} = state.documents\n\n      return {\n        ...state,\n        documents: restDocuments,\n      }\n    }\n\n    case 'DOCUMENT_UPDATED': {\n      const updatedDocument = action.payload\n      const id = updatedDocument._id as string\n      const document = state.documents[id]\n\n      const nextDocument = {\n        // Add existing document data\n        ...document,\n        // Add incoming document data\n        ...updatedDocument,\n      } satisfies SanityDocument\n\n      return {\n        ...state,\n        documents: {\n          ...state.documents,\n          [id]: nextDocument,\n        },\n      }\n    }\n\n    default:\n      return state\n  }\n}\n\nconst LISTEN_OPTIONS: ListenOptions = {\n  events: ['welcome', 'mutation', 'reconnect'],\n  includeResult: true,\n  visibility: 'query',\n  includeAllVersions: true,\n  tag: 'document-sheet-list-store',\n}\n\n/**\n * TODO:\n * [] Lazy load more documents, reduce initial fetch.\n * [] Add support for sorting and filtering.\n * []  Make a projection of the query according to the schema. e.g. get only the primitive fields and the _id to reduce the data payload.\n */\nexport function useDocumentSheetListStore({\n  filter,\n  params,\n  apiVersion,\n}: {\n  filter: string\n  params?: Record<string, unknown>\n  apiVersion?: string\n}) {\n  const QUERY = `*[${filter}][0...2000]`\n  const client = useClient({\n    ...DEFAULT_STUDIO_CLIENT_OPTIONS,\n    apiVersion: apiVersion || DEFAULT_STUDIO_CLIENT_OPTIONS.apiVersion,\n  })\n  const [state, dispatch] = useReducer(documentsReducer, {\n    documents: {},\n  })\n  const [isLoading, setIsLoading] = useState<boolean>(client !== null)\n  const [error, setError] = useState<Error | null>(null)\n\n  const initialFetch = useCallback(async () => {\n    if (!client) {\n      setIsLoading(false)\n      return\n    }\n    try {\n      const res = await client.fetch(QUERY, params)\n      dispatch({type: 'DOCUMENTS_SET', documents: res})\n      setIsLoading(false)\n    } catch (err) {\n      setError(err)\n    }\n  }, [client, params, QUERY])\n\n  const handleListenerEvent = useCallback(\n    async (event: ListenEvent<Record<string, SanityDocument>>) => {\n      // Fetch all documents on initial connection\n      if (event.type === 'welcome') {\n        setIsLoading(true)\n        await initialFetch()\n        setIsLoading(false)\n      }\n\n      // The reconnect event means that we are trying to reconnect to the realtime listener.\n      // In this case we set loading to true to indicate that we're trying to\n      // reconnect. Once a connection has been established, the welcome event\n      // will be received and we'll fetch all documents again (above).\n      if (event.type === 'reconnect') {\n        setIsLoading(true)\n      }\n\n      // Handle mutations (create, update, delete) from the realtime listener\n      // and update the documents store accordingly\n      if (event.type === 'mutation') {\n        if (event.transition === 'appear') {\n          const nextDocument = event.result as SanityDocument | undefined\n\n          if (nextDocument) {\n            dispatch({\n              type: 'DOCUMENT_RECEIVED',\n              payload: nextDocument,\n            })\n          }\n        }\n\n        if (event.transition === 'disappear') {\n          dispatch({type: 'DOCUMENT_DELETED', id: event.documentId})\n        }\n\n        if (event.transition === 'update') {\n          const updatedDocument = event.result as SanityDocument | undefined\n\n          if (updatedDocument) {\n            dispatch({\n              type: 'DOCUMENT_UPDATED',\n              payload: updatedDocument,\n            })\n          }\n        }\n      }\n    },\n    [initialFetch],\n  )\n\n  const listener$ = useMemo(() => {\n    if (!client) return of()\n\n    const events$ = client.observable.listen(QUERY, params, LISTEN_OPTIONS).pipe(\n      catchError((err) => {\n        setError(err)\n        return of(err)\n      }),\n    )\n\n    return events$\n  }, [client, params, QUERY])\n\n  useEffect(() => {\n    const sub = listener$.subscribe(handleListenerEvent)\n\n    return () => {\n      sub?.unsubscribe()\n    }\n  }, [handleListenerEvent, listener$])\n\n  // Contemplate that we could have drafts and live documents here, merge them.\n  const dataAsArray = useMemo(() => {\n    // Joins the drafts and the live documents\n    const uniques = Object.keys(state.documents).reduce(\n      (acc: {[key: string]: SanityDocument}, key) => {\n        const document = state.documents[key]\n        const isDraft = document._id === getDraftId(document._id)\n        const id = isDraft ? document._id : getDraftId(document._id)\n        // If we already have the document, and this document is not the draft one, it means\n        // the draft hast already been added to the list, so we skip it.\n        if (acc[id] && !isDraft) {\n          return acc\n        }\n        acc[id] = document\n        return acc\n      },\n      {},\n    )\n    return Object.values(uniques)\n  }, [state.documents])\n\n  return {\n    data: dataAsArray,\n    isLoading,\n    error,\n  }\n}\n","import {useMemo} from 'react'\nimport {getPublishedId, useSearchState} from 'sanity'\n\nimport {useDocumentSheetListStore} from './useDocumentSheetListStore'\n\ninterface DocumentSheetListOptions {\n  /** The schemaType.name  */\n  typeName: string\n}\n\nexport function useDocumentSheetList({typeName}: DocumentSheetListOptions) {\n  const {state} = useSearchState()\n\n  const items = useMemo(() => {\n    const map = new Map()\n    state.result.hits.forEach((h) => map.set(getPublishedId(h.hit._id), h.hit))\n    return map\n  }, [state.result.hits])\n\n  // The store is listening to all the documents that match with the _type filter.\n  const {data, isLoading} = useDocumentSheetListStore({\n    filter: `_type == \"${typeName}\"`,\n  })\n\n  // Only return the documents that match with the serverSide filter items.\n  const documents = useMemo(() => {\n    return data.filter((doc) => items.has(getPublishedId(doc._id)))\n  }, [data, items])\n\n  return {data: documents, isLoading}\n}\n","'use no memo'\n// The `use no memo` directive is due to a known issue with react-table and react compiler: https://github.com/TanStack/table/issues/5567\n\nimport {isDocumentSchemaType, type ObjectSchemaType, type SanityDocument} from '@sanity/types'\nimport {Box, Flex, Text} from '@sanity/ui'\nimport {\n  getCoreRowModel,\n  getFilteredRowModel,\n  getPaginationRowModel,\n  type Row,\n  useReactTable,\n} from '@tanstack/react-table'\nimport {useCallback, useEffect, useState} from 'react'\nimport {SearchProvider, useSchema, useSearchState} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {type BaseStructureToolPaneProps} from '../../types'\nimport {ColumnsControl} from './ColumnsControl'\nimport {DocumentSheetListFilter} from './DocumentSheetListFilter'\nimport {DocumentSheetListHeader} from './DocumentSheetListHeader'\nimport {DocumentSheetListPaginator} from './DocumentSheetListPaginator'\nimport {DocumentSheetListProvider} from './DocumentSheetListProvider'\nimport {SheetListCell} from './SheetListCell'\nimport {useDocumentSheetColumns} from './useDocumentSheetColumns'\nimport {useDocumentSheetList} from './useDocumentSheetList'\n\ntype DocumentSheetListPaneProps = BaseStructureToolPaneProps<'documentList'>\n\nconst PaneContainer = styled(Flex)`\n  height: 100%;\n`\nconst TableContainer = styled.div`\n  overflow: auto; //our scrollable table container\n  position: relative; //needed for sticky header\n`\nconst Table = styled.table`\n  border-collapse: separate;\n  border-spacing: 0;\n  font-family: arial, sans-serif;\n  white-space: nowrap;\n  width: 100%;\n  border: 1px solid lightgray;\n\n  thead {\n    display: grid;\n    position: sticky;\n    top: 0;\n    z-index: 10;\n  }\n  tr {\n    padding: 0;\n  }\n  tr:last-child {\n    border-bottom: none;\n  }\n`\n\nfunction DocumentSheetListPaneInner({\n  documentSchemaType,\n}: DocumentSheetListPaneProps & {documentSchemaType: ObjectSchemaType}) {\n  const {dispatch, state} = useSearchState()\n  const {columns, initialColumnsVisibility} = useDocumentSheetColumns(documentSchemaType)\n  const {data} = useDocumentSheetList({\n    typeName: documentSchemaType.name,\n  })\n  const [selectedAnchor, setSelectedAnchor] = useState<number | null>(null)\n\n  const totalRows = state.result.hits.length\n  const table = useReactTable({\n    data,\n    columns,\n    getCoreRowModel: getCoreRowModel(),\n    getFilteredRowModel: getFilteredRowModel(),\n    getPaginationRowModel: getPaginationRowModel(),\n    // Avoids resetting the page index when the data changes, e.g. a mutation is received\n    autoResetPageIndex: false,\n    initialState: {\n      columnPinning: {left: ['selected', 'Preview']},\n      pagination: {pageSize: 25},\n      columnVisibility: initialColumnsVisibility,\n    },\n    getRowId: (row) => row._id,\n    meta: {\n      selectedAnchor,\n      setSelectedAnchor,\n      patchDocument: (documentId, fieldId, value) => null,\n    },\n  })\n\n  const {rows} = table.getRowModel()\n\n  useEffect(() => {\n    dispatch({type: 'TERMS_TYPE_ADD', schemaType: documentSchemaType})\n    return () => {\n      dispatch({type: 'TERMS_TYPE_REMOVE', schemaType: documentSchemaType})\n    }\n  }, [documentSchemaType, dispatch])\n\n  const renderRow = useCallback((row: Row<SanityDocument>) => {\n    return (\n      <Box\n        key={row.original._id + row.id}\n        as=\"tr\"\n        paddingY={2}\n        style={{display: 'flex', width: '100%'}}\n      >\n        {row.getVisibleCells().map((cell) => (\n          <SheetListCell key={row.original._id + cell.id} {...cell} />\n        ))}\n      </Box>\n    )\n  }, [])\n\n  const rowsCount = `Total: ${totalRows} rows, showing ${rows.length} rows`\n  return (\n    <PaneContainer direction=\"column\" paddingX={3} data-testid=\"document-sheet-list-pane\">\n      <Flex direction=\"row\" align=\"center\" paddingY={3} paddingX={1} justify=\"space-between\">\n        <Flex direction=\"row\" align=\"center\">\n          <DocumentSheetListFilter />\n          <Text size={0} muted>\n            {rowsCount}\n          </Text>\n        </Flex>\n        <ColumnsControl table={table} />\n      </Flex>\n      <TableContainer>\n        <DocumentSheetListProvider table={table}>\n          <Table>\n            <thead>\n              {table.getHeaderGroups().map((headerGroup) => (\n                <Box key={headerGroup.id} as=\"tr\">\n                  {headerGroup.headers.map((header) => (\n                    <DocumentSheetListHeader\n                      key={header.id}\n                      header={header}\n                      headerGroup={headerGroup}\n                    />\n                  ))}\n                </Box>\n              ))}\n            </thead>\n            <tbody>{table.getRowModel().rows.map(renderRow)}</tbody>\n          </Table>\n        </DocumentSheetListProvider>\n      </TableContainer>\n      <Flex justify={'flex-end'} padding={3} gap={4} paddingY={5}>\n        <DocumentSheetListPaginator table={table} />\n      </Flex>\n    </PaneContainer>\n  )\n}\n\nexport function DocumentSheetListPane(props: DocumentSheetListPaneProps) {\n  const schema = useSchema()\n  const typeName = props.pane.schemaTypeName\n\n  const schemaType = schema.get(typeName)\n  if (!schemaType || !isDocumentSchemaType(schemaType)) {\n    throw new Error(`Schema type \"${typeName}\" not found or not a document schema`)\n  }\n  return (\n    <SearchProvider>\n      <DocumentSheetListPaneInner {...props} documentSchemaType={schemaType} />\n    </SearchProvider>\n  )\n}\n","import {Card, Code} from '@sanity/ui'\nimport {isEqual} from 'lodash'\nimport {memo, useMemo, useState} from 'react'\nimport {\n  EMPTY_ARRAY,\n  type GeneralDocumentListLayoutKey,\n  SourceProvider,\n  useI18nText,\n  useSource,\n} from 'sanity'\nimport shallowEquals from 'shallow-equals'\n\nimport {Pane} from '../../components/pane'\nimport {_DEBUG} from '../../constants'\nimport {type PaneMenuItem} from '../../types'\nimport {useStructureToolSetting} from '../../useStructureToolSetting'\nimport {type BaseStructureToolPaneProps} from '../types'\nimport {DEFAULT_ORDERING, EMPTY_RECORD} from './constants'\nimport {DocumentListPane} from './DocumentListPane'\nimport {findStaticTypesInFilter} from './helpers'\nimport {PaneHeader} from './PaneHeader'\nimport {DocumentSheetListPane} from './sheetList/DocumentSheetListPane'\nimport {type SortOrder} from './types'\n\nconst addSelectedStateToMenuItems = (options: {\n  menuItems?: PaneMenuItem[]\n  sortOrderRaw?: SortOrder\n  layout?: GeneralDocumentListLayoutKey\n}) => {\n  const {menuItems, sortOrderRaw, layout} = options\n\n  return menuItems?.map((item) => {\n    if (item.params?.layout) {\n      return {\n        ...item,\n        selected: layout === item.params?.layout,\n      }\n    }\n\n    if (item?.params?.by) {\n      return {\n        ...item,\n        selected: isEqual(sortOrderRaw?.by, item?.params?.by || EMPTY_ARRAY),\n      }\n    }\n\n    return {...item, selected: false}\n  })\n}\n\nexport function useShallowUnique<ValueType>(value: ValueType): ValueType {\n  const [previous, setPrevious] = useState<ValueType>(value)\n  if (!shallowEquals(previous, value)) {\n    setPrevious(value)\n    return value\n  }\n  return previous\n}\n\n/**\n * @internal\n */\nexport const PaneContainer = memo(function PaneContainer(\n  props: BaseStructureToolPaneProps<'documentList'>,\n) {\n  const {index, isSelected, pane, paneKey} = props\n  const {name: parentSourceName} = useSource()\n\n  const {\n    defaultLayout = 'default',\n    initialValueTemplates = EMPTY_ARRAY,\n    menuItemGroups,\n    menuItems,\n    options,\n  } = pane\n  const {defaultOrdering = EMPTY_ARRAY, filter} = options\n  const params = useShallowUnique(options.params || EMPTY_RECORD)\n  const sourceName = pane.source\n  const typeName = useMemo(() => {\n    const staticTypes = findStaticTypesInFilter(filter, params)\n    if (staticTypes?.length === 1) return staticTypes[0]\n    return null\n  }, [filter, params])\n\n  const [layout, setLayout] = useStructureToolSetting<GeneralDocumentListLayoutKey>(\n    'layout',\n    typeName ?? pane.id, //pane.id for anything that is not documentTypeList\n    defaultLayout,\n  )\n\n  const {title} = useI18nText(pane)\n\n  // Ensure that we use the defaultOrdering value from structure builder if any as the default\n  const defaultSortOrder = useMemo(() => {\n    return defaultOrdering?.length > 0 ? {by: defaultOrdering} : DEFAULT_ORDERING\n  }, [defaultOrdering])\n\n  const [sortOrderRaw, setSortOrder] = useStructureToolSetting<SortOrder>(\n    'sort-order',\n    typeName ?? pane.id, //pane.id for anything that is not documentTypeList\n    defaultSortOrder,\n  )\n\n  const menuItemsWithSelectedState = useMemo(\n    () =>\n      addSelectedStateToMenuItems({\n        menuItems,\n        sortOrderRaw,\n        layout,\n      }),\n    [layout, menuItems, sortOrderRaw],\n  )\n\n  const isSheetListLayout = layout === 'sheetList'\n  const paneLayout = isSheetListLayout ? (\n    <DocumentSheetListPane key={props.pane.id} {...props} />\n  ) : (\n    <DocumentListPane {...props} sortOrder={sortOrderRaw} layout={layout} />\n  )\n\n  return (\n    <SourceProvider name={sourceName || parentSourceName}>\n      <Pane\n        data-ui=\"DocumentListPane\"\n        id={paneKey}\n        minWidth={320}\n        {...(isSheetListLayout ? {} : {currentMaxWidth: 350, maxWidth: 640})}\n        selected={isSelected}\n      >\n        {_DEBUG && (\n          <Card padding={4} tone=\"transparent\">\n            <Code>{pane.source || '(none)'}</Code>\n          </Card>\n        )}\n\n        <PaneHeader\n          index={index}\n          initialValueTemplates={initialValueTemplates}\n          menuItemGroups={menuItemGroups}\n          menuItems={menuItemsWithSelectedState}\n          setLayout={setLayout}\n          setSortOrder={setSortOrder}\n          title={title}\n        />\n        {paneLayout}\n      </Pane>\n    </SourceProvider>\n  )\n})\nPaneContainer.displayName = 'Memo(PaneContainer)'\n","import {type DocumentBadgeComponent} from 'sanity'\n\n/** @internal */\nexport const LiveEditBadge: DocumentBadgeComponent = (props) => {\n  const {liveEditSchemaType, version} = props\n\n  if (liveEditSchemaType && !version) {\n    return {\n      label: 'Live',\n      color: 'danger',\n    }\n  }\n\n  return null\n}\nLiveEditBadge.displayName = 'LiveEditBadge'\n","import {uuid} from '@sanity/uuid'\n\nimport {EMPTY_PARAMS, type LOADING_PANE} from './constants'\nimport {type PaneNode, type RouterPanes} from './types'\n\nconst state: {\n  activePanes: Array<PaneNode | typeof LOADING_PANE>\n} = {activePanes: []}\n\nexport function setActivePanes(panes: Array<PaneNode | typeof LOADING_PANE>): void {\n  state.activePanes = panes\n}\n\n/**\n * This function looks at the _active panes_ to resolve an intent. this type of\n * intent resolution is faster and does not cause the panes to reset\n *\n * @internal\n */\nexport function getIntentState(\n  intent: string,\n  params: Record<string, string>,\n  routerState: {panes?: RouterPanes} | undefined,\n  payload: unknown,\n): {panes: RouterPanes} | {intent: string; params: Record<string, string>; payload: unknown} {\n  const panes = routerState?.panes || []\n  const activePanes = state.activePanes || []\n  const editDocumentId = params.id || uuid()\n\n  // Loop through open panes and see if any of them can handle the intent\n  for (let i = activePanes.length - 1; i >= 0; i--) {\n    const pane = activePanes[i]\n\n    if (typeof pane !== 'object') continue\n\n    // NOTE: if you update this logic, please also update the similar handler in\n    // `resolveIntent.ts`\n    if (\n      pane.canHandleIntent?.(intent, params, {\n        pane,\n        index: i,\n      }) ||\n      // see `resolveIntent.ts` for more info\n      (pane.type === 'documentList' &&\n        pane.schemaTypeName === params.type &&\n        pane.options.filter === '_type == $type')\n    ) {\n      const paneParams = getPaneParams(intent, params)\n\n      return {\n        panes: panes\n          .slice(0, i)\n          .concat([[{id: editDocumentId, params: paneParams, payload}]]) as RouterPanes,\n      }\n    }\n  }\n\n  return {intent: intent, params, payload}\n}\n\nfunction getPaneParams(\n  intent: string,\n  {template, version}: Record<string, string>,\n): {template?: string; version?: string} {\n  if (intent !== 'create') return EMPTY_PARAMS\n  if (template && version) return {template, version}\n  if (template) return {template}\n  if (version) return {version}\n  return EMPTY_PARAMS\n}\n","import {type ObjectDiff} from '@sanity/diff'\nimport {BoundaryElementProvider, Box, Card, Flex, Text} from '@sanity/ui'\nimport {useMemo, useState} from 'react'\nimport {\n  ChangeFieldWrapper,\n  ChangeList,\n  type DocumentChangeContextInstance,\n  LoadingBlock,\n  NoChanges,\n  type ObjectSchemaType,\n  ScrollContainer,\n  usePerspective,\n  useTimelineSelector,\n  useTranslation,\n} from 'sanity'\nimport {DocumentChangeContext} from 'sanity/_singletons'\nimport {styled} from 'styled-components'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {TimelineMenu} from '../../timeline'\nimport {TimelineError} from '../../timeline/TimelineError'\nimport {useDocumentPane} from '../../useDocumentPane'\n\nconst Scroller = styled(ScrollContainer)`\n  height: 100%;\n  overflow: auto;\n  position: relative;\n  scroll-behavior: smooth;\n`\n\nconst Grid = styled(Box)`\n  &:not([hidden]) {\n    display: grid;\n  }\n  grid-template-columns: 48px 1fr;\n  align-items: center;\n  gap: 0.25em;\n`\n\nexport function ChangesInspector({showChanges}: {showChanges: boolean}): React.JSX.Element {\n  const {documentId, schemaType, timelineError, timelineStore, value} = useDocumentPane()\n  const {selectedReleaseId} = usePerspective()\n\n  const [scrollRef, setScrollRef] = useState<HTMLDivElement | null>(null)\n\n  const rev = useTimelineSelector(timelineStore, (state) => state.revTime)\n  const diff = useTimelineSelector(timelineStore, (state) => state.diff)\n  const onOlderRevision = useTimelineSelector(timelineStore, (state) => state.onOlderRevision)\n  const selectionState = useTimelineSelector(timelineStore, (state) => state.selectionState)\n  const sinceTime = useTimelineSelector(timelineStore, (state) => state.sinceTime)\n  const loading = selectionState === 'loading'\n  const isComparingCurrent = !onOlderRevision\n\n  // Note that we are using the studio core namespace here, as changes theoretically should\n  // be part of Sanity core (needs to be moved from structure at some point)\n  const {t: structureT} = useTranslation(structureLocaleNamespace)\n\n  const documentContext: DocumentChangeContextInstance = useMemo(\n    () => ({\n      documentId,\n      schemaType,\n      FieldWrapper: (props) => <ChangeFieldWrapper {...props} hasRevertHover={false} />,\n      rootDiff: diff,\n      isComparingCurrent,\n      value,\n      showFromValue: true,\n    }),\n    [documentId, diff, isComparingCurrent, schemaType, value],\n  )\n\n  if (selectedReleaseId) {\n    return (\n      <Flex data-testid=\"review-changes-pane\" direction=\"column\" height=\"fill\">\n        <Card flex={1} padding={2} paddingTop={0}>\n          <TimelineError versionError />\n        </Card>\n      </Flex>\n    )\n  }\n\n  return (\n    <Flex data-testid=\"review-changes-pane\" direction=\"column\" height=\"fill\" overflow=\"hidden\">\n      <Box padding={3}>\n        <Grid paddingX={2} paddingBottom={2}>\n          <Text size={1} muted>\n            {structureT('changes.from.label')}\n          </Text>\n\n          <TimelineMenu mode=\"since\" chunk={sinceTime} placement=\"bottom-start\" />\n          <Text size={1} muted>\n            {structureT('changes.to.label')}\n          </Text>\n          <TimelineMenu chunk={rev} mode=\"rev\" placement=\"bottom-end\" />\n        </Grid>\n      </Box>\n\n      <Card flex={1} paddingX={2} paddingY={2}>\n        <BoundaryElementProvider element={scrollRef}>\n          <Scroller data-ui=\"Scroller\" ref={setScrollRef}>\n            <Box flex={1} paddingX={3} height=\"fill\">\n              {showChanges && (\n                <Content\n                  diff={diff}\n                  documentContext={documentContext}\n                  error={timelineError}\n                  loading={loading}\n                  schemaType={schemaType}\n                />\n              )}\n            </Box>\n          </Scroller>\n        </BoundaryElementProvider>\n      </Card>\n    </Flex>\n  )\n}\n\nfunction Content({\n  error,\n  diff,\n  documentContext,\n  loading,\n  schemaType,\n}: {\n  error?: Error | null\n  diff: ObjectDiff<any> | null\n  documentContext: DocumentChangeContextInstance\n  loading: boolean\n  schemaType: ObjectSchemaType\n}) {\n  if (error) {\n    return <NoChanges />\n  }\n\n  if (loading) {\n    return <LoadingBlock showText />\n  }\n\n  if (!diff) {\n    return <NoChanges />\n  }\n\n  return (\n    <DocumentChangeContext.Provider value={documentContext}>\n      <ChangeList diff={diff} schemaType={schemaType} />\n    </DocumentChangeContext.Provider>\n  )\n}\n","import {Card, Flex} from '@sanity/ui'\nimport {type MouseEvent, useCallback} from 'react'\nimport {\n  type DocumentGroupEvent,\n  Event,\n  isDeleteDocumentGroupEvent,\n  isDeleteDocumentVersionEvent,\n  isScheduleDocumentVersionEvent,\n  isUnpublishDocumentEvent,\n  isUnscheduleDocumentVersionEvent,\n  useTranslation,\n} from 'sanity'\n\nimport {Tooltip} from '../../../../../ui-components'\n\nexport interface TimelineItemProps {\n  event: DocumentGroupEvent\n  isSelected: boolean\n  onSelect: (chunk: DocumentGroupEvent) => void\n  optionsMenu?: React.ReactNode\n}\n\nconst getIsSelectable = (event: DocumentGroupEvent) => {\n  return (\n    !isDeleteDocumentVersionEvent(event) &&\n    !isDeleteDocumentGroupEvent(event) &&\n    !isUnpublishDocumentEvent(event) &&\n    !isScheduleDocumentVersionEvent(event) &&\n    !isUnscheduleDocumentVersionEvent(event)\n  )\n}\n\nexport function EventTimelineItem({event, isSelected, onSelect, optionsMenu}: TimelineItemProps) {\n  const {t} = useTranslation('studio')\n  const isSelectable = getIsSelectable(event)\n  const handleClick = useCallback(\n    (evt: MouseEvent<HTMLDivElement>) => {\n      evt.preventDefault()\n      evt.stopPropagation()\n\n      if (isSelectable) {\n        onSelect(event)\n      }\n    },\n    [onSelect, event, isSelectable],\n  )\n  return (\n    <Flex gap={1}>\n      <Tooltip content={isSelectable ? '' : t('changes.not-selectable')} disabled={isSelectable}>\n        <Card\n          as={isSelectable ? 'button' : 'div'}\n          onClick={handleClick}\n          padding={2}\n          pressed={isSelected}\n          radius={2}\n          data-ui=\"timelineItem\"\n          data-testid=\"timeline-item-button\"\n          data-chunk-timestamp={event.timestamp}\n          style={{\n            cursor: isSelectable ? 'pointer' : 'default',\n            width: '100%',\n          }}\n        >\n          <Event event={event} showChangesBy=\"tooltip\" />\n        </Card>\n      </Tooltip>\n      {optionsMenu}\n    </Flex>\n  )\n}\n","import {\n  Flex,\n  Menu,\n  // eslint-disable-next-line no-restricted-imports\n  MenuItem,\n  Text,\n  usePortal,\n} from '@sanity/ui'\nimport {useCallback} from 'react'\nimport {\n  ContextMenuButton,\n  getReleaseIdFromReleaseDocumentId,\n  getReleaseTone,\n  getVersionFromId,\n  isReleaseDocument,\n  type PublishDocumentVersionEvent,\n  RELEASES_INTENT,\n  Translate,\n  useSetPerspective,\n  useTranslation,\n  VersionInlineBadge,\n} from 'sanity'\nimport {IntentLink} from 'sanity/router'\n\nimport {MenuButton} from '../../../../../ui-components'\nimport {usePaneRouter} from '../../../../components/paneRouter/usePaneRouter'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {TIMELINE_MENU_PORTAL} from '../timelineMenu'\n\nexport function PublishedEventMenu({event}: {event: PublishDocumentVersionEvent}) {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {t: tCore} = useTranslation()\n  const portalContext = usePortal()\n  const {params, setParams} = usePaneRouter()\n  const setPerspective = useSetPerspective()\n\n  const handleOpenReleaseDocument = useCallback(() => {\n    setParams({\n      ...params,\n      rev: event.versionRevisionId || '@lastPublished',\n      since: undefined,\n      historyEvent: event.id,\n      historyVersion: getVersionFromId(event.versionId),\n    })\n  }, [setParams, params, event])\n\n  const handleOpenDraftDocument = useCallback(() => {\n    setParams({\n      ...params,\n      rev: event.versionRevisionId,\n      preserveRev: 'true',\n      since: undefined,\n    })\n    setTimeout(() => {\n      // A bug is generated when we change the perspective and the params at the same time\n      // Resetting the params to the value it had before, because the paneRouter uses the previous value\n      setPerspective('drafts')\n    }, 100)\n  }, [setParams, params, event.versionRevisionId, setPerspective])\n\n  const VersionBadge = ({children}: {children: React.ReactNode}) => {\n    return (\n      <VersionInlineBadge\n        $tone={\n          event.release\n            ? isReleaseDocument(event.release)\n              ? getReleaseTone(event.release)\n              : 'default'\n            : undefined\n        }\n      >\n        {children}\n      </VersionInlineBadge>\n    )\n  }\n  const isMenuDisabled = event.release && !isReleaseDocument(event.release)\n  return (\n    <MenuButton\n      id={`timeline-item-menu-button-${event.versionId}`}\n      button={\n        <ContextMenuButton\n          aria-label={t('timeline-item.menu-button.aria-label')}\n          tooltipProps={{\n            content: isMenuDisabled\n              ? t('timeline-item.not-found-release.tooltip', {\n                  releaseId: event.release?._id\n                    ? getReleaseIdFromReleaseDocumentId(event.release._id)\n                    : undefined,\n                })\n              : t('timeline-item.menu-button.tooltip'),\n          }}\n          disabled={isMenuDisabled}\n        />\n      }\n      menu={\n        <Menu padding={1}>\n          {event.release ? (\n            <>\n              <IntentLink\n                intent={RELEASES_INTENT}\n                params={{id: getReleaseIdFromReleaseDocumentId(event.release._id)}}\n                style={{textDecoration: 'none'}}\n              >\n                <MenuItem padding={3}>\n                  <Flex align={'center'} justify=\"flex-start\">\n                    <Text size={1} style={{textDecoration: 'none'}}>\n                      <Translate\n                        components={{\n                          VersionBadge: ({children}) => <VersionBadge>{children}</VersionBadge>,\n                        }}\n                        i18nKey=\"events.open.release\"\n                        values={{\n                          releaseTitle:\n                            event.release.metadata?.title ||\n                            tCore('release.placeholder-untitled-release'),\n                        }}\n                        t={t}\n                      />\n                    </Text>\n                  </Flex>\n                </MenuItem>\n              </IntentLink>\n              <MenuItem onClick={handleOpenReleaseDocument}>\n                <Flex align={'center'} justify=\"flex-start\">\n                  <Text size={1}>\n                    <Translate\n                      components={{\n                        VersionBadge: ({children}) => <VersionBadge>{children}</VersionBadge>,\n                      }}\n                      i18nKey=\"events.inspect.release\"\n                      values={{\n                        releaseTitle:\n                          event.release.metadata?.title ||\n                          tCore('release.placeholder-untitled-release'),\n                      }}\n                      t={t}\n                    />\n                  </Text>\n                </Flex>\n              </MenuItem>\n            </>\n          ) : (\n            <MenuItem onClick={handleOpenDraftDocument} disabled={!event.versionRevisionId}>\n              <Flex align={'center'}>\n                <Text size={1}>\n                  <Translate\n                    components={{\n                      VersionBadge: ({children}) => (\n                        <VersionInlineBadge $tone=\"caution\">{children}</VersionInlineBadge>\n                      ),\n                    }}\n                    i18nKey=\"events.open.draft\"\n                    t={t}\n                  />\n                </Text>\n              </Flex>\n            </MenuItem>\n          )}\n        </Menu>\n      }\n      popover={{\n        // when used inside the timeline menu we want to keep the element inside the popover, to avoid closing the popover when clicking expand.\n        portal: portalContext.elements?.[TIMELINE_MENU_PORTAL] ? TIMELINE_MENU_PORTAL : true,\n        placement: 'bottom',\n        fallbackPlacements: ['bottom-end', 'bottom-start'],\n      }}\n    />\n  )\n}\n","import {Box, Flex, Spinner, Stack, Text} from '@sanity/ui'\nimport {motion, type Variants} from 'framer-motion'\nimport {useCallback, useEffect, useMemo, useState} from 'react'\nimport {\n  CommandList,\n  type CommandListRenderItemCallback,\n  type DocumentGroupEvent,\n  getDocumentVariantType,\n  isCreateDocumentVersionEvent,\n  isDeleteDocumentVersionEvent,\n  isEditDocumentVersionEvent,\n  isPublishDocumentVersionEvent,\n  LoadingBlock,\n  useTranslation,\n} from 'sanity'\n\nimport {ExpandableTimelineItemButton} from '../expandableTimelineItemButton'\nimport {ListWrapper, Root} from '../timeline.styled'\nimport {EventTimelineItem} from './EventTimelineItem'\nimport {PublishedEventMenu} from './PublishedEventMenu'\n\ninterface TimelineProps {\n  events: DocumentGroupEvent[]\n  hasMoreEvents: boolean | null\n  selectedEventId?: string\n  onLoadMore: () => void\n  onSelect: (event: DocumentGroupEvent) => void\n  fetchEventChildren: (event: DocumentGroupEvent) => Promise<void>\n  /**\n   * The list needs a predefined max height for the scroller to work.\n   */\n  listMaxHeight?: string\n}\n\nconst TimelineItemWrapper = motion.create(Box)\nconst CHILDREN_ITEMS_VARIANTS: Variants = {\n  initial: {\n    opacity: 0,\n  },\n  animate: {\n    opacity: 1,\n  },\n  exit: {\n    opacity: 0,\n  },\n}\n\nconst ITEM_HEIGHT = 57\n\nexport const TIMELINE_LIST_WRAPPER_ID = 'timeline-list-wrapper'\n\nexport const EventsTimeline = ({\n  events: allEvents,\n  hasMoreEvents,\n  selectedEventId,\n  onLoadMore,\n  onSelect,\n  listMaxHeight = 'calc(100vh - 280px)',\n  fetchEventChildren,\n}: TimelineProps) => {\n  const [mounted, setMounted] = useState(false)\n  const {t} = useTranslation('studio')\n  const [expandedParents, setExpandedParents] = useState<Set<string>>(() => {\n    if (selectedEventId) {\n      // Find that event and if it has a parent, expand the parent.\n      const selectedEvent = allEvents.find((event) => event.id === selectedEventId)\n      if (selectedEvent && 'parentId' in selectedEvent && selectedEvent.parentId) {\n        return new Set([selectedEvent.parentId])\n      }\n    }\n    return new Set()\n  })\n  const [expandingParents, setExpandingParents] = useState<Set<string>>(new Set())\n\n  const events = useMemo(() => {\n    return allEvents.filter((event) => {\n      if (isCreateDocumentVersionEvent(event) && event.parentId) {\n        // Check if it's the last event in the list, in that case, we want to show it\n        const isLastEvent = allEvents[allEvents.length - 1].id === event.id\n        if (isLastEvent) return true\n        return expandedParents.has(event.parentId)\n      }\n      if (isEditDocumentVersionEvent(event) && event.parentId) {\n        return expandedParents.has(event.parentId)\n      }\n      return true\n    })\n  }, [expandedParents, allEvents])\n\n  const handleExpandParent = useCallback(\n    (event: DocumentGroupEvent) => async () => {\n      const parentId = event.id\n\n      let isExpanding = false\n      setExpandedParents((prev) => {\n        const next = new Set(prev)\n\n        if (prev.has(parentId)) next.delete(parentId)\n        else {\n          isExpanding = true\n          next.add(parentId)\n        }\n\n        return next\n      })\n      if (isExpanding) {\n        setExpandingParents((prev) => {\n          const next = new Set(prev)\n          next.add(parentId)\n          return next\n        })\n        await fetchEventChildren(event)\n        setExpandingParents((prev) => {\n          const next = new Set(prev)\n          next.delete(parentId)\n          return next\n        })\n      }\n    },\n    [fetchEventChildren, setExpandingParents],\n  )\n\n  const handleSelectChunk = useCallback(\n    (event: DocumentGroupEvent) => {\n      onSelect(event)\n    },\n    [onSelect],\n  )\n\n  const renderOptionsMenu = useCallback(\n    (event: DocumentGroupEvent) => {\n      const documentVariantType = getDocumentVariantType(event.documentId)\n      if (isPublishDocumentVersionEvent(event) && documentVariantType === 'published') {\n        return <PublishedEventMenu event={event} />\n      }\n      if (\n        (isPublishDocumentVersionEvent(event) &&\n          documentVariantType === 'draft' &&\n          event.creationEvent) ||\n        (isDeleteDocumentVersionEvent(event) && event.creationEvent)\n      ) {\n        return (\n          <ExpandableTimelineItemButton\n            isExpanded={expandedParents.has(event.id)}\n            onExpand={handleExpandParent(event)}\n          />\n        )\n      }\n      return null\n    },\n    [expandedParents, handleExpandParent],\n  )\n\n  const renderItem = useCallback<CommandListRenderItemCallback<DocumentGroupEvent[][number]>>(\n    (event, {activeIndex}) => {\n      /**\n       * The create version event will be present while expanding (loading the edits), so we are attaching to it the loading block at the top.\n       * - publishEvent (expanding?)\n       * --- loadingBlock  ~createEvent~\n       * */\n      const showExpandingLoader =\n        isCreateDocumentVersionEvent(event) &&\n        event.parentId &&\n        expandingParents.has(event.parentId)\n\n      const isLastEvent = activeIndex === events.length - 1\n      if (showExpandingLoader) {\n        return (\n          <TimelineItemWrapper\n            animate={{opacity: 1}}\n            initial={{opacity: 0}}\n            transition={{duration: 0.2, delay: 0.2}}\n          >\n            {/* We need this item to match the same height as the rest of the list items, which is 57px */}\n            <Flex align=\"center\" justify=\"center\" style={{height: ITEM_HEIGHT}}>\n              <Spinner />\n            </Flex>\n          </TimelineItemWrapper>\n        )\n      }\n      return (\n        <TimelineItemWrapper\n          key={event.timestamp}\n          paddingBottom={1}\n          paddingRight={1}\n          animate=\"animate\"\n          exit=\"exit\"\n          initial=\"initial\"\n          variants={'parentId' in event ? CHILDREN_ITEMS_VARIANTS : undefined}\n          paddingLeft={\n            (isEditDocumentVersionEvent(event) || isCreateDocumentVersionEvent(event)) &&\n            event.parentId &&\n            !isLastEvent\n              ? 4\n              : 1\n          }\n        >\n          <EventTimelineItem\n            event={event}\n            isSelected={event.id === selectedEventId}\n            onSelect={handleSelectChunk}\n            optionsMenu={renderOptionsMenu(event)}\n          />\n\n          {isLastEvent && hasMoreEvents && <LoadingBlock />}\n        </TimelineItemWrapper>\n      )\n    },\n    [\n      expandingParents,\n      selectedEventId,\n      handleSelectChunk,\n      renderOptionsMenu,\n      events.length,\n      hasMoreEvents,\n    ],\n  )\n\n  useEffect(() => setMounted(true), [])\n  const selectedIndex = events.findIndex((event) => event.id === selectedEventId)\n\n  return (\n    <Root\n      /**\n       * We delay initial rendering if `selectedIndex` is present.\n       * This is a _temporary_ workaround to allow the virtual <CommandList>\n       * to scroll to a specific index prior to being displayed.\n       *\n       * Without this, there'll be a noticeable 'flash' where the virtual list\n       * will render with its child items at the top and then scroll into position.\n       */\n      $visible={!selectedIndex || mounted}\n      data-ui=\"timeline\"\n    >\n      {events.length > 0 ? (\n        <ListWrapper direction=\"column\" $maxHeight={listMaxHeight} id={TIMELINE_LIST_WRAPPER_ID}>\n          <CommandList\n            activeItemDataAttr=\"data-hovered\"\n            ariaLabel={t('timeline.list.aria-label')}\n            autoFocus=\"list\"\n            initialIndex={selectedIndex}\n            initialScrollAlign=\"center\"\n            itemHeight={ITEM_HEIGHT}\n            items={events}\n            onEndReached={onLoadMore}\n            onEndReachedIndexOffset={20}\n            overscan={5}\n            renderItem={renderItem}\n            wrapAround={false}\n          />\n        </ListWrapper>\n      ) : (\n        <Stack padding={3} space={3}>\n          <Text size={1} weight=\"medium\">\n            {t('timeline.error.no-document-history-title')}\n          </Text>\n          <Text muted size={1}>\n            {t('timeline.error.no-document-history-description')}\n          </Text>\n        </Stack>\n      )}\n    </Root>\n  )\n}\n\nEventsTimeline.displayName = 'EventsTimeline'\n","import {ChevronDownIcon} from '@sanity/icons'\nimport {\n  Flex,\n  type Placement,\n  PortalProvider,\n  useClickOutsideEvent,\n  useGlobalKeyDown,\n  useToast,\n} from '@sanity/ui'\nimport {useCallback, useMemo, useState} from 'react'\nimport {\n  type DocumentGroupEvent,\n  isDeleteDocumentGroupEvent,\n  isDeleteDocumentVersionEvent,\n  isScheduleDocumentVersionEvent,\n  isUnpublishDocumentEvent,\n  isUnscheduleDocumentVersionEvent,\n  TIMELINE_ITEM_I18N_KEY_MAPPING,\n  useEvents,\n  useTranslation,\n} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Button, Popover} from '../../../../../ui-components'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {TimelineError} from '../TimelineError'\nimport {EventsTimeline} from './EventsTimeline'\n\ninterface TimelineMenuProps {\n  event: DocumentGroupEvent | null\n  events: DocumentGroupEvent[]\n  mode: 'rev' | 'since'\n  placement?: Placement\n}\n\nconst Root = styled(Popover)`\n  overflow: hidden;\n  overflow: clip;\n`\n\nexport const TIMELINE_MENU_PORTAL = 'timeline-menu'\n\nconst formatParams = {\n  timestamp: {dateStyle: 'medium', timeStyle: 'short'},\n}\n\nexport function EventsTimelineMenu({event, events, mode, placement}: TimelineMenuProps) {\n  const {setTimelineRange} = useDocumentPane()\n  const [open, setOpen] = useState(false)\n  const [button, setButton] = useState<HTMLButtonElement | null>(null)\n  const [popoverRef, setPopoverRef] = useState<HTMLElement | null>(null)\n  const toast = useToast()\n  const {\n    nextCursor,\n    loading,\n    error: eventsError,\n    findRangeForRevision,\n    findRangeForSince,\n    loadMoreEvents,\n    expandEvent,\n  } = useEvents()\n\n  const {t} = useTranslation('studio')\n\n  const handleOpen = useCallback(() => {\n    setOpen(true)\n  }, [])\n\n  const handleClose = useCallback(() => {\n    setOpen(false)\n  }, [])\n\n  const handleGlobalKeyDown = useCallback(\n    (e: KeyboardEvent) => {\n      if (open && (e.key === 'Escape' || e.key === 'Tab')) {\n        handleClose()\n        button?.focus()\n      }\n    },\n    [button, handleClose, open],\n  )\n\n  useGlobalKeyDown(handleGlobalKeyDown)\n  useClickOutsideEvent(open && handleClose, () => [button, popoverRef])\n\n  const selectRev = useCallback(\n    (revEvent: DocumentGroupEvent) => {\n      try {\n        if (\n          isDeleteDocumentVersionEvent(revEvent) ||\n          isDeleteDocumentGroupEvent(revEvent) ||\n          isUnpublishDocumentEvent(revEvent) ||\n          isScheduleDocumentVersionEvent(revEvent) ||\n          isUnscheduleDocumentVersionEvent(revEvent)\n        ) {\n          console.error('Event is not selectable')\n          return\n        }\n        const [since, rev] = findRangeForRevision(revEvent?.id)\n        setTimelineRange(since, rev)\n        handleClose()\n      } catch (err) {\n        toast.push({\n          closable: true,\n          description: err.message,\n          status: 'error',\n          title: t('timeline.error.unable-to-load-revision'),\n        })\n      }\n    },\n    [t, toast, setTimelineRange, findRangeForRevision, handleClose],\n  )\n\n  const selectSince = useCallback(\n    (sinceEvent: DocumentGroupEvent) => {\n      try {\n        const [since, rev] = findRangeForSince(sinceEvent.id)\n        setTimelineRange(since, rev)\n        handleClose()\n      } catch (err) {\n        toast.push({\n          closable: true,\n          description: err.message,\n          status: 'error',\n          title: t('timeline.error.unable-to-load-revision'),\n        })\n      }\n    },\n    [findRangeForSince, setTimelineRange, toast, t, handleClose],\n  )\n\n  const handleLoadMore = useCallback(() => {\n    if (!loading && nextCursor) {\n      loadMoreEvents()\n    }\n  }, [loading, loadMoreEvents, nextCursor])\n\n  const content = useMemo(() => {\n    if (eventsError) return <TimelineError />\n\n    return (\n      <EventsTimeline\n        events={events}\n        fetchEventChildren={expandEvent}\n        hasMoreEvents={Boolean(nextCursor)}\n        selectedEventId={event?.id}\n        onLoadMore={handleLoadMore}\n        onSelect={mode === 'rev' ? selectRev : selectSince}\n      />\n    )\n  }, [\n    eventsError,\n    mode,\n    expandEvent,\n    events,\n    nextCursor,\n    event?.id,\n    handleLoadMore,\n    selectSince,\n    selectRev,\n  ])\n\n  const revLabel = event\n    ? t(TIMELINE_ITEM_I18N_KEY_MAPPING[event.documentVariantType][event.type], {\n        context: 'timestamp',\n        timestamp: new Date(event.timestamp),\n        formatParams,\n      })\n    : t('timeline.latest-revision')\n\n  const sinceLabel = event\n    ? t(TIMELINE_ITEM_I18N_KEY_MAPPING[event.documentVariantType][event.type], {\n        context: 'timestamp',\n        timestamp: new Date(event.timestamp),\n        formatParams,\n      })\n    : events.length > 0\n      ? t('timeline.since-version-missing')\n      : t('timeline.no-previous-events')\n\n  const buttonLabel = mode === 'rev' ? revLabel : sinceLabel\n  const portalElements = useMemo(\n    () => ({\n      [TIMELINE_MENU_PORTAL]: popoverRef,\n    }),\n    [popoverRef],\n  )\n\n  return (\n    <PortalProvider __unstable_elements={portalElements}>\n      <Root\n        data-testid=\"timeline-menu\"\n        constrainSize\n        content={open && content}\n        data-ui=\"versionMenu\"\n        open={open}\n        placement={placement}\n        matchReferenceWidth\n        portal\n        ref={setPopoverRef}\n      >\n        <Flex width={'fill'}>\n          <Button\n            data-testid={open ? 'timeline-menu-close-button' : 'timeline-menu-open-button'}\n            disabled={loading || !events.length}\n            mode=\"ghost\"\n            onClick={open ? handleClose : handleOpen}\n            ref={setButton}\n            selected={open}\n            width=\"fill\"\n            tooltipProps={null}\n            justify={'space-between'}\n            style={{\n              maxWidth: '100%',\n            }}\n            iconRight={ChevronDownIcon}\n            text={loading ? t('timeline.loading-history') : buttonLabel}\n          />\n        </Flex>\n      </Root>\n    </PortalProvider>\n  )\n}\n","import {diffInput, wrap} from '@sanity/diff'\nimport {BoundaryElementProvider, Box, Card, Flex, Spinner, Stack, Text} from '@sanity/ui'\nimport {motion} from 'framer-motion'\nimport {type ReactElement, useMemo, useState} from 'react'\nimport {useObservable} from 'react-rx'\nimport {\n  ChangeFieldWrapper,\n  ChangeList,\n  ChangesError,\n  type DocumentChangeContextInstance,\n  type DocumentGroupEvent,\n  isReleaseDocument,\n  LoadingBlock,\n  NoChanges,\n  type ObjectDiff,\n  type ObjectSchemaType,\n  ScrollContainer,\n  Translate,\n  useEvents,\n  usePerspective,\n  useTranslation,\n} from 'sanity'\nimport {DocumentChangeContext} from 'sanity/_singletons'\nimport {styled} from 'styled-components'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {EventsTimelineMenu} from '../../timeline/events/EventsTimelineMenu'\nimport {useDocumentPane} from '../../useDocumentPane'\n\nconst Scroller = styled(ScrollContainer)`\n  height: 100%;\n  overflow: auto;\n  position: relative;\n  scroll-behavior: smooth;\n`\n\nconst Grid = styled(Box)`\n  &:not([hidden]) {\n    display: grid;\n  }\n  grid-template-columns: 48px 1fr;\n  align-items: center;\n  gap: 0.25em;\n`\n\nconst SpinnerContainer = styled(Flex)`\n  width: 100%;\n  position: absolute;\n  bottom: -4px;\n`\n\nconst DIFF_INITIAL_VALUE = {\n  diff: null,\n  loading: true,\n  error: null,\n}\n\nconst CompareWithPublishedView = () => {\n  const {documentId, schemaType, editState, displayed} = useDocumentPane()\n  const {selectedPerspective, selectedPerspectiveName, selectedReleaseId} = usePerspective()\n  const {t} = useTranslation(structureLocaleNamespace)\n  const rootDiff = useMemo(() => {\n    const diff = diffInput(\n      wrap(editState?.published ?? {}, {author: ''}),\n      wrap(displayed ?? {}, {author: ''}),\n    ) as ObjectDiff\n\n    return diff\n  }, [editState?.published, displayed])\n\n  if (selectedReleaseId && !editState?.version) {\n    return null\n  }\n  if (selectedPerspective === 'drafts' && !editState?.draft) {\n    return null\n  }\n  if (selectedPerspectiveName === 'published' || !displayed?._rev) {\n    return null\n  }\n  return (\n    <Stack space={2} marginBottom={3}>\n      <Card borderBottom paddingBottom={3}>\n        <Stack space={3} paddingTop={1}>\n          <Text size={1} weight=\"medium\">\n            {t('events.compare-with-published.title')}\n          </Text>\n          <Text size={1} muted>\n            <Translate\n              i18nKey=\"events.compare-with-published.description\"\n              t={t}\n              values={{\n                version: isReleaseDocument(selectedPerspective)\n                  ? selectedPerspective.metadata?.title\n                  : 'draft',\n              }}\n            />\n          </Text>\n        </Stack>\n      </Card>\n      <DocumentChangeContext.Provider\n        value={{\n          documentId,\n          schemaType,\n          rootDiff,\n          isComparingCurrent: true,\n          FieldWrapper: (props) => props.children,\n          value: displayed,\n          showFromValue: true,\n        }}\n      >\n        <Box paddingY={1}>\n          <ChangeList diff={rootDiff} schemaType={schemaType} />\n        </Box>\n      </DocumentChangeContext.Provider>\n    </Stack>\n  )\n}\nexport function EventsInspector({showChanges}: {showChanges: boolean}): ReactElement {\n  const {documentId, schemaType, timelineError, value, formState} = useDocumentPane()\n  const [scrollRef, setScrollRef] = useState<HTMLDivElement | null>(null)\n\n  const {events, revision, sinceRevision, getChangesList} = useEvents()\n\n  const isComparingCurrent = !revision?.revisionId\n  const changesList$ = useMemo(() => getChangesList(), [getChangesList])\n  const {\n    diff,\n    loading: diffLoading,\n    error: diffError,\n  } = useObservable(changesList$, DIFF_INITIAL_VALUE)\n\n  const {t} = useTranslation('studio')\n\n  const documentContext: DocumentChangeContextInstance = useMemo(() => {\n    return {\n      documentId,\n      schemaType,\n      FieldWrapper: (props) =>\n        props.path.length > 0 ? <ChangeFieldWrapper {...props} /> : props.children,\n      rootDiff: diff,\n      isComparingCurrent: isComparingCurrent && !formState?.readOnly,\n      value,\n      showFromValue: true,\n    }\n  }, [diff, documentId, isComparingCurrent, formState?.readOnly, schemaType, value])\n\n  const [sinceEvent, toEvent] = useMemo(() => {\n    if (!events) return [null, null]\n    return [\n      events.find((e) => e.id === sinceRevision?.revisionId) || null,\n      events.find((e) => e.id === revision?.revisionId) || events[0],\n    ]\n  }, [events, revision?.revisionId, sinceRevision?.revisionId])\n\n  const sinceEvents = useMemo(() => {\n    // The sinceEvents need to account the toEvent showing only events that are older than the toEvent\n    if (!toEvent) return events.slice(1)\n    return events.slice(events.indexOf(toEvent) + 1).map((event) => {\n      // If the to event has a parent id, we need to remove the parent id from the since events or they won't be rendered, as they have no parent to expand.\n      if (\n        ('parentId' in toEvent && 'parentId' in event && event.parentId === toEvent.parentId) ||\n        ('parentId' in event && toEvent.id === event.parentId)\n      ) {\n        return {...event, parentId: undefined}\n      }\n      return event\n    })\n  }, [events, toEvent])\n  if (!events.length) {\n    return (\n      <Box paddingX={2}>\n        <Stack padding={3} space={3}>\n          <Text size={1} weight=\"medium\">\n            {t('timeline.error.no-document-history-title')}\n          </Text>\n          <Text muted size={1}>\n            {t('timeline.error.no-document-history-description')}\n          </Text>\n        </Stack>\n      </Box>\n    )\n  }\n  return (\n    <Flex data-testid=\"review-changes-pane\" direction=\"column\" height=\"fill\" overflow=\"hidden\">\n      <Box padding={3} style={{position: 'relative'}}>\n        <Grid paddingX={2} paddingBottom={2}>\n          <Text size={1} muted>\n            {t('changes.inspector.from-label')}\n          </Text>\n          <EventsTimelineMenu\n            event={sinceEvent || null}\n            events={sinceEvents}\n            mode=\"since\"\n            placement=\"bottom-start\"\n          />\n          <Text size={1} muted>\n            {t('changes.inspector.to-label')}\n          </Text>\n          <EventsTimelineMenu\n            event={toEvent || null}\n            events={events}\n            mode=\"rev\"\n            placement=\"bottom-end\"\n          />\n        </Grid>\n        {diffLoading && (\n          <motion.div\n            animate={{opacity: 1}}\n            initial={{opacity: 0}}\n            transition={{delay: 0.2, duration: 0.2}}\n          >\n            <SpinnerContainer justify=\"center\" align=\"center\" gap={2}>\n              <Text muted size={0}>\n                {t('changes.loading-changes')}\n              </Text>\n              <Spinner size={0} />\n            </SpinnerContainer>\n          </motion.div>\n        )}\n      </Box>\n\n      <Card flex={1} paddingX={2} paddingY={2}>\n        <BoundaryElementProvider element={scrollRef}>\n          <Scroller data-ui=\"Scroller\" ref={setScrollRef}>\n            <Box flex={1} paddingX={3} height=\"fill\">\n              {showChanges && (\n                <Content\n                  documentContext={documentContext}\n                  error={timelineError || diffError}\n                  loading={revision?.loading || sinceRevision?.loading || false}\n                  schemaType={schemaType}\n                  sameRevisionSelected={sinceEvent?.id === toEvent?.id}\n                  sinceEvent={sinceEvent}\n                />\n              )}\n            </Box>\n          </Scroller>\n        </BoundaryElementProvider>\n      </Card>\n    </Flex>\n  )\n}\n\nfunction Content({\n  error,\n  documentContext,\n  loading,\n  schemaType,\n  sameRevisionSelected,\n  sinceEvent,\n}: {\n  error?: Error | null\n  documentContext: DocumentChangeContextInstance\n  loading: boolean\n  schemaType: ObjectSchemaType\n  sameRevisionSelected: boolean\n  sinceEvent: DocumentGroupEvent | null\n}) {\n  if (error) {\n    return (\n      <>\n        <CompareWithPublishedView />\n        {sinceEvent?.type !== 'historyCleared' && <ChangesError error={error} />}\n      </>\n    )\n  }\n\n  if (loading) {\n    return <LoadingBlock showText />\n  }\n  if (sameRevisionSelected) {\n    return <SameRevisionSelected />\n  }\n\n  if (!documentContext.rootDiff) {\n    return (\n      <motion.div\n        animate={{opacity: 1}}\n        initial={{opacity: 0}}\n        transition={{delay: 0.2, duration: 0.2}}\n      >\n        <NoChanges />\n      </motion.div>\n    )\n  }\n\n  return (\n    <DocumentChangeContext.Provider value={documentContext}>\n      <Box paddingY={1}>\n        <ChangeList diff={documentContext.rootDiff} schemaType={schemaType} />\n      </Box>\n    </DocumentChangeContext.Provider>\n  )\n}\n\nfunction SameRevisionSelected() {\n  const {t} = useTranslation('')\n  return (\n    <motion.div\n      animate={{opacity: 1}}\n      initial={{opacity: 0}}\n      transition={{delay: 0.2, duration: 0.2}}\n    >\n      <Stack space={3} paddingTop={2}>\n        <Text size={1} weight=\"medium\" as=\"h3\">\n          {t('changes.same-revision-selected-title')}\n        </Text>\n        <Text as=\"p\" size={1} muted>\n          <Translate i18nKey=\"changes.same-revision-selected-description\" t={t} />\n        </Text>\n      </Stack>\n    </motion.div>\n  )\n}\n","import {BoundaryElementProvider, Card, Flex, useToast} from '@sanity/ui'\nimport {useCallback, useState} from 'react'\nimport {\n  type DocumentGroupEvent,\n  isDeleteDocumentGroupEvent,\n  isDeleteDocumentVersionEvent,\n  isScheduleDocumentVersionEvent,\n  isUnpublishDocumentEvent,\n  isUnscheduleDocumentVersionEvent,\n  LoadingBlock,\n  ScrollContainer,\n  useEvents,\n  useTranslation,\n} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {EventsTimeline} from '../../timeline/events/EventsTimeline'\nimport {TimelineError} from '../../timeline/TimelineError'\nimport {useDocumentPane} from '../../useDocumentPane'\n\nconst Scroller = styled(ScrollContainer)`\n  height: 100%;\n  overflow: auto;\n  position: relative;\n  scroll-behavior: smooth;\n`\n\nexport function EventsSelector({showList}: {showList: boolean}) {\n  const [scrollRef, setScrollRef] = useState<HTMLDivElement | null>(null)\n  const [listHeight, setListHeight] = useState(0)\n  const {setTimelineRange} = useDocumentPane()\n  const getScrollerRef = useCallback(\n    (el: HTMLDivElement | null) => {\n      if (!listHeight && el) {\n        /**\n         * Hacky solution, the list height needs to be defined, it cannot be obtained from the parent using a `max-height: 100%`\n         * Because the scroller won't work properly and it won't scroll to the selected element on mount.\n         * To fix this, this component will set the list height to the height of the parent element - 1px, to avoid a double scroll line.\n         */\n        setListHeight(el.clientHeight ? el.clientHeight - 1 : 0)\n        setScrollRef(el)\n      }\n    },\n    [listHeight],\n  )\n  const {\n    events,\n    nextCursor,\n    loading,\n    error,\n    revision,\n    loadMoreEvents,\n    findRangeForRevision,\n    expandEvent,\n  } = useEvents()\n\n  const {t} = useTranslation('studio')\n  const toast = useToast()\n\n  const selectRev = useCallback(\n    (event: DocumentGroupEvent) => {\n      try {\n        if (\n          isDeleteDocumentVersionEvent(event) ||\n          isDeleteDocumentGroupEvent(event) ||\n          isUnpublishDocumentEvent(event) ||\n          isScheduleDocumentVersionEvent(event) ||\n          isUnscheduleDocumentVersionEvent(event)\n        ) {\n          console.error('Event is not selectable')\n          return\n        }\n        const [since, rev] = findRangeForRevision(event.id)\n        setTimelineRange(since, rev)\n      } catch (err) {\n        toast.push({\n          closable: true,\n          description: err.message,\n          status: 'error',\n          title: t('timeline.error.unable-to-load-revision'),\n        })\n      }\n    },\n    [t, toast, setTimelineRange, findRangeForRevision],\n  )\n\n  const initialLoad = loading && !events.length\n  return (\n    <Flex data-testid=\"review-changes-pane\" direction=\"column\" height=\"fill\">\n      <Card flex={1} padding={2} paddingTop={0}>\n        {error ? (\n          <TimelineError />\n        ) : (\n          <BoundaryElementProvider element={scrollRef}>\n            <Scroller data-ui=\"Scroller\" ref={getScrollerRef}>\n              {listHeight &&\n              // This forces the list to unmount and remount, which is needed to reset the scroll position\n              showList &&\n              !initialLoad ? (\n                <EventsTimeline\n                  events={events}\n                  fetchEventChildren={expandEvent}\n                  hasMoreEvents={Boolean(nextCursor)}\n                  // If we have a revision, we select it, otherwise we select the first event\n                  selectedEventId={revision?.revisionId || events[0]?.id}\n                  onLoadMore={loadMoreEvents}\n                  onSelect={selectRev}\n                  listMaxHeight={`${listHeight}px`}\n                />\n              ) : null}\n              {loading && <LoadingBlock />}\n            </Scroller>\n          </BoundaryElementProvider>\n        )}\n      </Card>\n    </Flex>\n  )\n}\n","import {BoundaryElementProvider, Card, Flex, useToast} from '@sanity/ui'\nimport {useCallback, useState} from 'react'\nimport {\n  type Chunk,\n  ScrollContainer,\n  usePerspective,\n  useTimelineSelector,\n  useTranslation,\n} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Timeline} from '../../timeline'\nimport {TimelineError} from '../../timeline/TimelineError'\nimport {useDocumentPane} from '../../useDocumentPane'\n\nconst Scroller = styled(ScrollContainer)`\n  height: 100%;\n  overflow: auto;\n  position: relative;\n  scroll-behavior: smooth;\n`\n\nexport function HistorySelector({showList}: {showList: boolean}) {\n  const {timelineError, setTimelineRange, timelineStore} = useDocumentPane()\n  const {selectedReleaseId} = usePerspective()\n  const [scrollRef, setScrollRef] = useState<HTMLDivElement | null>(null)\n  const [listHeight, setListHeight] = useState(0)\n\n  const getScrollerRef = useCallback((el: HTMLDivElement | null) => {\n    if (!el?.clientHeight) return\n    /**\n     * Hacky solution, the list height needs to be defined, it cannot be obtained from the parent using a `max-height: 100%`\n     * Because the scroller won't work properly and it won't scroll to the selected element on mount.\n     * To fix this, this component will set the list height to the height of the parent element - 1px, to avoid a double scroll line.\n     */\n    setListHeight(el.clientHeight - 1)\n    setScrollRef(el)\n  }, [])\n\n  const chunks = useTimelineSelector(timelineStore, (state) => state.chunks)\n  const realRevChunk = useTimelineSelector(timelineStore, (state) => state.realRevChunk)\n  const hasMoreChunks = useTimelineSelector(timelineStore, (state) => state.hasMoreChunks)\n  const loading = useTimelineSelector(timelineStore, (state) => state.isLoading)\n\n  const {t} = useTranslation('studio')\n  const toast = useToast()\n  const selectRev = useCallback(\n    (revChunk: Chunk) => {\n      try {\n        const [sinceId, revId] = timelineStore?.findRangeForRev(revChunk) || [null, null]\n        setTimelineRange(sinceId, revId)\n      } catch (err) {\n        toast.push({\n          closable: true,\n          description: err.message,\n          status: 'error',\n          title: t('timeline.error.unable-to-load-revision'),\n        })\n      }\n    },\n    [setTimelineRange, t, timelineStore, toast],\n  )\n\n  const handleLoadMore = useCallback(() => {\n    // If updated, be sure to update the TimeLineMenu component as well\n    if (!loading) {\n      timelineStore?.loadMore()\n    }\n  }, [loading, timelineStore])\n\n  return (\n    <Flex data-testid=\"review-changes-pane\" direction=\"column\" height=\"fill\">\n      <Card flex={1} padding={2} paddingTop={0}>\n        {timelineError || selectedReleaseId ? (\n          <TimelineError versionError={Boolean(selectedReleaseId)} />\n        ) : (\n          <BoundaryElementProvider element={scrollRef}>\n            <Scroller data-ui=\"Scroller\" ref={getScrollerRef}>\n              {listHeight &&\n              // This forces the list to unmount and remount, which is needed to reset the scroll position\n              showList ? (\n                <Timeline\n                  chunks={chunks}\n                  hasMoreChunks={hasMoreChunks}\n                  lastChunk={realRevChunk}\n                  onLoadMore={handleLoadMore}\n                  onSelect={selectRev}\n                  listMaxHeight={`${listHeight}px`}\n                />\n              ) : null}\n            </Scroller>\n          </BoundaryElementProvider>\n        )}\n      </Card>\n    </Flex>\n  )\n}\n","import {CloseIcon, InfoOutlineIcon} from '@sanity/icons'\nimport {Box, Card, Flex, TabList, TabPanel, Text} from '@sanity/ui'\nimport {useState} from 'react'\nimport {\n  type DocumentInspectorProps,\n  isReleaseDocument,\n  Translate,\n  usePerspective,\n  useSource,\n  useTranslation,\n} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Button, Tab, Tooltip} from '../../../../../ui-components'\nimport {usePaneRouter} from '../../../../components/paneRouter/usePaneRouter'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {HISTORY_INSPECTOR_NAME} from '../../constants'\nimport {ChangesInspector} from './ChangesInspector'\nimport {EventsInspector} from './EventsInspector'\nimport {EventsSelector} from './EventsSelector'\nimport {HistorySelector} from './HistorySelector'\n\nconst FadeInFlex = styled(Flex)`\n  opacity: 0;\n  transition: opacity 200ms;\n  &[data-ready] {\n    opacity: 1;\n  }\n`\nconst TABS = ['history', 'review'] as const\nconst isValidTab = (tab: string | undefined): tab is (typeof TABS)[number] =>\n  // @ts-expect-error TS doesn't understand the type guard\n  tab && TABS.includes(tab)\n\nexport function ChangesTabs(props: DocumentInspectorProps) {\n  const {params, setParams} = usePaneRouter()\n  const source = useSource()\n  const [parentRef, setParentRef] = useState<HTMLDivElement | null>(null)\n  const {t} = useTranslation(structureLocaleNamespace)\n  const isReady = params?.inspect === HISTORY_INSPECTOR_NAME\n  const {selectedPerspective} = usePerspective()\n\n  const paneRouterTab = isValidTab(params?.changesInspectorTab)\n    ? params.changesInspectorTab\n    : TABS[0]\n\n  const setPaneRouterTab = (tab: (typeof TABS)[number]) =>\n    setParams({\n      ...params,\n      changesInspectorTab: tab,\n      // Reset the since when changing the tab, as it's not relevant for the history tab\n      since: tab === 'history' ? undefined : params?.since,\n    })\n\n  const perspectiveName = isReleaseDocument(selectedPerspective)\n    ? selectedPerspective.metadata.title\n    : selectedPerspective === 'drafts'\n      ? t('compare-versions.status.draft')\n      : t('compare-versions.status.published')\n\n  return (\n    <FadeInFlex\n      direction=\"column\"\n      padding={0}\n      height=\"fill\"\n      data-ready={isReady ? '' : undefined}\n      ref={setParentRef}\n    >\n      <Card paddingBottom={1}>\n        <Flex align=\"center\" padding={3} gap={2}>\n          <TabList space={1} flex={1}>\n            <Tab\n              aria-controls=\"history-panel\"\n              id=\"history-tab\"\n              label={t('changes.tab.history')}\n              onClick={() => setPaneRouterTab('history')}\n              selected={paneRouterTab === 'history'}\n            />\n            <Tab\n              aria-controls=\"review-changes-panel\"\n              id=\"changes-tab\"\n              label={t('changes.tab.review-changes')}\n              onClick={() => setPaneRouterTab('review')}\n              selected={paneRouterTab === 'review'}\n            />\n          </TabList>\n          <Button\n            aria-label={t('changes.action.close-label')}\n            icon={CloseIcon}\n            mode=\"bleed\"\n            onClick={props.onClose}\n            tooltipProps={{content: t('document-inspector.close-button.tooltip')}}\n          />\n        </Flex>\n      </Card>\n      <Card padding={2} marginBottom={3} marginX={3} tone=\"neutral\" border radius={3}>\n        <Flex gap={2} align=\"flex-start\">\n          <Tooltip\n            portal\n            placement=\"bottom-end\"\n            boundaryElement={parentRef}\n            content={\n              <Box flex={1} padding={1}>\n                <Text size={1}>\n                  <Translate t={t} i18nKey=\"changes.banner.tooltip\" />\n                </Text>\n              </Box>\n            }\n          >\n            <Text size={0} muted>\n              <InfoOutlineIcon fontSize={1} />\n            </Text>\n          </Tooltip>\n          <Text size={0} muted>\n            <Translate\n              t={t}\n              values={{\n                perspective: perspectiveName,\n              }}\n              i18nKey=\"changes.banner.description\"\n            />\n          </Text>\n        </Flex>\n      </Card>\n\n      <TabPanel\n        aria-labelledby=\"history-tab\"\n        height=\"fill\"\n        hidden={paneRouterTab !== 'history'}\n        id=\"history-panel\"\n      >\n        {source.beta?.eventsAPI?.documents ? (\n          <EventsSelector showList={paneRouterTab === 'history'} />\n        ) : (\n          <HistorySelector showList={paneRouterTab === 'history'} />\n        )}\n      </TabPanel>\n\n      <TabPanel\n        aria-labelledby=\"review-tab\"\n        hidden={paneRouterTab !== 'review'}\n        id=\"review-panel\"\n        height=\"fill\"\n      >\n        {source.beta?.eventsAPI?.documents ? (\n          <>\n            {paneRouterTab === 'review' ? (\n              <EventsInspector showChanges={paneRouterTab === 'review'} />\n            ) : null}\n          </>\n        ) : (\n          <ChangesInspector showChanges={paneRouterTab === 'review'} />\n        )}\n      </TabPanel>\n    </FadeInFlex>\n  )\n}\n","import {RestoreIcon} from '@sanity/icons'\nimport {type DocumentInspector, useTranslation} from 'sanity'\n\nimport {useStructureTool} from '../../../../useStructureTool'\nimport {HISTORY_INSPECTOR_NAME} from '../../constants'\nimport {ChangesTabs} from './ChangesTabs'\n\nexport const changesInspector: DocumentInspector = {\n  name: HISTORY_INSPECTOR_NAME,\n  useMenuItem: () => {\n    const {features} = useStructureTool()\n    const {t} = useTranslation()\n\n    return {\n      hidden: !features.reviewChanges,\n      icon: RestoreIcon,\n      title: t('changes.title'),\n    }\n  },\n  component: ChangesTabs,\n  onClose: ({params}) => ({\n    params: {\n      ...params,\n      since: undefined,\n      rev: undefined,\n      changesInspectorTab: undefined,\n      historyVersion: undefined,\n    },\n  }),\n  onOpen: ({params}) => ({params: {...params, since: '@lastPublished'}}),\n}\n","/* eslint-disable no-loop-func */\n\nimport {type Path, type SanityDocument, type SchemaType} from '@sanity/types'\nimport {isArray, isRecord} from 'sanity'\n\n// eslint-disable-next-line max-statements\nexport function getPathTitles(options: {\n  path: Path\n  schemaType: SchemaType\n  value: Partial<SanityDocument> | null\n}): Array<{name: string; title?: string}> {\n  const {path, schemaType, value} = options\n  const result: Array<{name: string; title?: string}> = []\n\n  let s = schemaType\n  let v: unknown = value\n\n  for (const segment of path) {\n    // field name\n    if (typeof segment === 'string') {\n      if (!isRecord(v) && v !== undefined) {\n        throw new Error(`Parent value is not an object, cannot get path segment: .${segment}`)\n      }\n\n      if (s.jsonType !== 'object') {\n        throw new Error(\n          `Parent type is not an object schema type, cannot get path segment: .${segment}`,\n        )\n      }\n\n      v = v?.[segment]\n\n      const field = s.fields.find((f) => f.name === segment)\n\n      if (!field) {\n        result.push({name: segment})\n        return result\n      }\n\n      s = field.type\n\n      result.push(s)\n\n      continue\n    }\n\n    // array item index\n    if (typeof segment === 'number') {\n      if (!isArray(v) && v !== undefined) {\n        throw new Error(`Parent value is not an array, cannot get path segment: [${segment}]`)\n      }\n\n      if (s.jsonType !== 'array') {\n        throw new Error(\n          `Parent type is not an array schema type, cannot get path segment: [${segment}]`,\n        )\n      }\n\n      v = v?.[segment]\n\n      const itemType = s.of.find((ofType) => {\n        if (typeof v === 'string') {\n          return ofType.jsonType === 'string'\n        }\n\n        if (typeof v === 'number') {\n          return ofType.jsonType === 'number'\n        }\n\n        if (typeof v === 'boolean') {\n          return ofType.jsonType === 'boolean'\n        }\n\n        if (isRecord(v)) {\n          return ofType.name === v?._type\n        }\n\n        return false\n      })\n\n      if (!itemType) {\n        throw new Error(`Item type not found: [${segment}]`)\n      }\n\n      s = itemType\n\n      result.push(s)\n\n      continue\n    }\n\n    // array item key\n    if (isRecord(segment) && segment._key) {\n      // if the value is undefined, it likely means that is has been deleted, so return the result\n      if (typeof v === 'undefined') {\n        return result\n      }\n\n      if (!isArray(v)) {\n        throw new Error(\n          `Parent value is not an array, cannot get path segment: [_key == ${segment}]`,\n        )\n      }\n\n      if (s.jsonType !== 'array') {\n        throw new Error(\n          `Parent type is not an array schema type, cannot get path segment: .${segment}`,\n        )\n      }\n\n      const values = v ?? []\n\n      v = values.find((i) => isRecord(i) && i._key === segment._key)\n\n      // in situations where the segment key exists but it could not be found in the values array\n      // means that the specific item has been deleted from the array\n      // and therefore we not need to continue running the validation for it\n      if (typeof v === 'undefined') {\n        return result\n      }\n\n      if (!isRecord(v)) {\n        throw new Error(`Array item not found: [_key == ${segment._key}]`)\n      }\n\n      const ofType = s.of.find((i) => isRecord(v) && i.name === v?._type)\n\n      if (!ofType) {\n        throw new Error(`Array item type not found: .${v?._type}`)\n      }\n\n      s = ofType\n\n      result.push(s)\n\n      continue\n    }\n\n    throw new Error(`Invalid path segment: ${JSON.stringify(segment)}`)\n  }\n\n  return result\n}\n","import {\n  ErrorOutlineIcon,\n  type IconComponent,\n  InfoOutlineIcon,\n  WarningOutlineIcon,\n} from '@sanity/icons'\nimport {\n  type ObjectSchemaType,\n  type Path,\n  type SanityDocument,\n  type SchemaType,\n  type ValidationMarker,\n} from '@sanity/types'\nimport {Box, Card, type CardTone, Flex, Stack, Text} from '@sanity/ui'\nimport {type ErrorInfo, Fragment, useCallback, useMemo, useState} from 'react'\nimport {type DocumentInspectorProps, isGoingToUnpublish, useTranslation} from 'sanity'\n\nimport {ErrorBoundary} from '../../../../../ui-components'\nimport {DocumentInspectorHeader} from '../../documentInspector'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {getPathTitles} from './getPathTitles'\n\nconst MARKER_ICON: Record<'error' | 'warning' | 'info', IconComponent> = {\n  error: ErrorOutlineIcon,\n  warning: WarningOutlineIcon,\n  info: InfoOutlineIcon,\n}\n\nconst MARKER_TONE: Record<'error' | 'warning' | 'info', CardTone> = {\n  error: 'critical',\n  warning: 'caution',\n  info: 'primary',\n}\n\nexport function ValidationInspector(props: DocumentInspectorProps) {\n  const {onClose} = props\n  const {onFocus, onPathOpen, schemaType, validation, value, editState} = useDocumentPane()\n  const {t} = useTranslation('validation')\n\n  const handleOpen = useCallback(\n    (path: Path) => {\n      onPathOpen(path)\n      onFocus(path)\n    },\n    [onFocus, onPathOpen],\n  )\n\n  const isVersionGoingToUnpublish =\n    editState && editState.version && isGoingToUnpublish(editState.version as SanityDocument)\n\n  return (\n    <Flex direction=\"column\" height=\"fill\" overflow=\"hidden\">\n      <DocumentInspectorHeader\n        as=\"header\"\n        closeButtonLabel={t('panel.close-button-aria-label')}\n        flex=\"none\"\n        onClose={onClose}\n        title={t('panel.title')}\n      />\n\n      <Card flex={1} overflow=\"auto\" padding={3}>\n        {isVersionGoingToUnpublish ? (\n          <Box padding={2}>\n            <Text muted size={1}>\n              {t('panel.unpublish-message')}\n            </Text>\n          </Box>\n        ) : (\n          <>\n            {validation.length === 0 && (\n              <Box padding={2}>\n                <Text muted size={1}>\n                  {t('panel.no-errors-message')}\n                </Text>\n              </Box>\n            )}\n            {validation.length > 0 && (\n              <Stack space={2}>\n                {validation.map((marker, i) => (\n                  <ValidationCard\n                    // oxlint-disable-next-line no-array-index-key\n                    key={i}\n                    marker={marker}\n                    onOpen={handleOpen}\n                    schemaType={schemaType}\n                    value={value}\n                  />\n                ))}\n              </Stack>\n            )}\n          </>\n        )}\n      </Card>\n    </Flex>\n  )\n}\n\nfunction ValidationCard(props: {\n  marker: ValidationMarker\n  onOpen: (path: Path) => void\n  schemaType: ObjectSchemaType\n  value: Partial<SanityDocument> | null\n}) {\n  const {marker, onOpen, schemaType, value} = props\n  const handleOpen = useCallback(() => onOpen(marker.path), [marker, onOpen])\n  const [errorInfo, setErrorInfo] = useState<{error: Error; info: ErrorInfo} | null>(null)\n  const Icon = MARKER_ICON[marker.level]\n\n  return (\n    <ErrorBoundary onCatch={setErrorInfo}>\n      {errorInfo && (\n        <Card padding={3} radius={2} tone=\"critical\">\n          <Text size={1}>{errorInfo.error.message}</Text>\n        </Card>\n      )}\n\n      {!errorInfo && (\n        <Card\n          __unstable_focusRing\n          as=\"button\"\n          onClick={handleOpen}\n          padding={3}\n          radius={2}\n          tone={MARKER_TONE[marker.level]}\n        >\n          <Flex align=\"flex-start\" gap={3}>\n            <Box flex=\"none\">\n              <Text size={1}>\n                <Icon />\n              </Text>\n            </Box>\n\n            <Stack flex={1} space={2}>\n              <DocumentNodePathBreadcrumbs\n                path={marker.path}\n                schemaType={schemaType}\n                value={value}\n              />\n\n              <Text muted size={1}>\n                {marker.message}\n              </Text>\n            </Stack>\n          </Flex>\n        </Card>\n      )}\n    </ErrorBoundary>\n  )\n}\n\nfunction DocumentNodePathBreadcrumbs(props: {\n  path: Path\n  schemaType: SchemaType\n  value: Partial<SanityDocument> | null\n}) {\n  const {path, schemaType, value} = props\n\n  const pathTitles = useMemo(() => {\n    try {\n      return getPathTitles({path, schemaType, value})\n    } catch (e) {\n      console.error(e)\n    }\n    return null\n  }, [path, schemaType, value])\n\n  if (!pathTitles?.length) return null\n\n  return (\n    <Text size={1}>\n      {pathTitles.map((t, i) => (\n        // oxlint-disable-next-line no-array-index-key\n        <Fragment key={i}>\n          {i > 0 && <span style={{color: 'var(--card-muted-fg-color)', opacity: 0.5}}> / </span>}\n          <span style={{fontWeight: 500}}>{t.title || t.name}</span>\n        </Fragment>\n      ))}\n    </Text>\n  )\n}\n","import {CheckmarkCircleIcon, ErrorOutlineIcon, WarningOutlineIcon} from '@sanity/icons'\nimport {useMemo} from 'react'\nimport {\n  type DocumentInspector,\n  type DocumentInspectorMenuItem,\n  type DocumentInspectorUseMenuItemProps,\n  type FormNodeValidation,\n  isGoingToUnpublish,\n  isValidationError,\n  isValidationWarning,\n  usePerspective,\n  useTranslation,\n  useValidationStatus,\n} from 'sanity'\n\nimport {VALIDATION_INSPECTOR_NAME} from '../../constants'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {ValidationInspector} from './ValidationInspector'\n\nfunction useMenuItem(props: DocumentInspectorUseMenuItemProps): DocumentInspectorMenuItem {\n  const {documentId, documentType} = props\n  const {t} = useTranslation('validation')\n  const {selectedReleaseId} = usePerspective()\n  const {validation: validationMarkers} = useValidationStatus(\n    documentId,\n    documentType,\n    selectedReleaseId,\n  )\n  const {value} = useDocumentPane()\n\n  const validation: FormNodeValidation[] = useMemo(\n    () =>\n      validationMarkers.map((item) => ({\n        level: item.level,\n        message: item.message,\n        path: item.path,\n      })),\n    [validationMarkers],\n  )\n\n  const hasErrors = validation.some(isValidationError)\n  const hasWarnings = validation.some(isValidationWarning)\n  const isDocumentGoingToUnpublish = isGoingToUnpublish(value)\n\n  const icon = useMemo(() => {\n    if (hasErrors) return ErrorOutlineIcon\n    if (hasWarnings) return WarningOutlineIcon\n    return CheckmarkCircleIcon\n  }, [hasErrors, hasWarnings])\n\n  const tone = useMemo(() => {\n    if (hasErrors) return 'critical'\n    if (hasWarnings) return 'caution'\n    return 'positive'\n  }, [hasErrors, hasWarnings])\n\n  return {\n    hidden: validation.length === 0 || isDocumentGoingToUnpublish,\n    icon,\n    title: t('panel.title'),\n    tone,\n    showAsAction: true,\n  }\n}\n\nexport const validationInspector: DocumentInspector = {\n  name: VALIDATION_INSPECTOR_NAME,\n  component: ValidationInspector,\n  useMenuItem,\n}\n","import {omit} from 'lodash'\nimport {decodeJsonParams, encodeJsonParams, route} from 'sanity/router'\n\nimport {type RouterPaneGroup, type RouterPanes, type RouterPaneSibling} from './types'\n\nconst EMPTY_PARAMS = {}\n\n/**\n * @internal\n */\nexport function legacyEditParamsToState(params: string): Record<string, unknown> {\n  try {\n    return JSON.parse(decodeURIComponent(params))\n  } catch (err) {\n    console.warn('Failed to parse JSON parameters')\n    return {}\n  }\n}\n\nexport function encodePanesSegment(panes: RouterPanes): string {\n  return (panes || [])\n    .map((group) => group.map(encodeChunks).join('|'))\n    .map(encodeURIComponent)\n    .join(';')\n}\n\n/**\n * @internal\n */\nexport function legacyEditParamsToPath(params: Record<string, unknown>): string {\n  return JSON.stringify(params)\n}\n\n// http://localhost:3333/intent/create/template=book-by-author;type=book/eyJhdXRob3JJZCI6Imdycm0ifQ==\n\n/**\n * @internal\n */\nexport function toState(pathSegment: string): RouterPaneGroup[] {\n  return parsePanesSegment(decodeURIComponent(pathSegment))\n}\n\n/**\n * @internal\n */\nexport function toPath(panes: RouterPaneGroup[]): string {\n  return encodePanesSegment(panes)\n}\n\nexport const router = route.create('/', [\n  // \"Asynchronous intent resolving\" route\n  route.intents('/intent'),\n\n  // Legacy fallback route, will be redirected to new format\n  route.create('/edit/:type/:editDocumentId', [\n    route.create({\n      path: '/:params',\n      transform: {params: {toState: legacyEditParamsToState, toPath: legacyEditParamsToPath}},\n    }),\n  ]),\n\n  // The regular path - when the intent can be resolved to a specific pane\n  route.create({\n    path: '/:panes',\n    // Legacy URLs, used to handle redirects\n    children: [route.create('/:action', route.create('/:legacyEditDocumentId'))],\n    transform: {\n      panes: {toState, toPath},\n    },\n  }),\n])\n\n// old: authors;knut,{\"template\":\"diaryEntry\"}\n// new: authors;knut,view=diff,eyJyZXYxIjoiYWJjMTIzIiwicmV2MiI6ImRlZjQ1NiJ9|latest-posts\n\nconst panePattern = /^([.a-z0-9_-]+),?({.*?})?(?:(;|$))/i\nconst isParam = (str: string) => /^[a-z0-9]+=[^=]+/i.test(str)\nconst isPayloadLike = (str: string) => /^[A-Za-z0-9\\-_]+(?:={0,2})$/.test(str)\nconst exclusiveParams = ['view', 'since', 'rev', 'inspect', 'comment']\n\ntype Truthy<T> = T extends false\n  ? never\n  : T extends ''\n    ? never\n    : T extends 0\n      ? never\n      : T extends 0n\n        ? never\n        : T extends null | undefined\n          ? NonNullable<T>\n          : T\nconst isTruthy = Boolean as (t: unknown) => boolean as <T>(t: T) => t is Truthy<T>\n\nfunction parseChunks(chunks: string[], initial: RouterPaneSibling): RouterPaneSibling {\n  const sibling: RouterPaneSibling = {...initial, params: EMPTY_PARAMS, payload: undefined}\n  return chunks.reduce((pane, chunk) => {\n    if (isParam(chunk)) {\n      const key = chunk.slice(0, chunk.indexOf('='))\n      const value = chunk.slice(key.length + 1)\n      pane.params = {...pane.params, [decodeURIComponent(key)]: decodeURIComponent(value)}\n    } else if (isPayloadLike(chunk)) {\n      pane.payload = tryParseBase64Payload(chunk)\n    } else {\n      console.warn('Unknown pane segment: %s - skipping', chunk)\n    }\n\n    return pane\n  }, sibling)\n}\n\nfunction encodeChunks(pane: RouterPaneSibling, index: number, group: RouterPaneGroup): string {\n  const {payload, params = {}, id} = pane\n  const [firstSibling] = group\n  const paneIsFirstSibling = pane === firstSibling\n  const sameAsFirst = index !== 0 && id === firstSibling.id\n  const encodedPayload =\n    typeof payload === 'undefined' ? undefined : encodeJsonParams(payload as any)\n\n  const encodedParams = Object.entries(params)\n    .filter((entry): entry is [string, string] => {\n      const [key, value] = entry\n      if (!value) return false\n      if (paneIsFirstSibling) return true\n\n      // omit the value if it's the same as the value from the first sibling\n      const valueFromFirstSibling = firstSibling.params?.[key]\n      if (value === valueFromFirstSibling && !exclusiveParams.includes(key)) return false\n      return true\n    })\n    .map(([key, value]) => `${encodeURIComponent(key)}=${encodeURIComponent(value)}`)\n\n  return (\n    [sameAsFirst ? '' : id]\n      .concat([encodedParams.length > 0 && encodedParams, encodedPayload].filter(isTruthy).flat())\n      .join(',') || ','\n  )\n}\n\nexport function parsePanesSegment(str: string): RouterPanes {\n  if (str.indexOf(',{') !== -1) {\n    return parseOldPanesSegment(str)\n  }\n\n  return str\n    .split(';')\n    .map((group) => {\n      const [firstSibling, ...restOfSiblings] = group.split('|').map((segment) => {\n        const [id, ...chunks] = segment.split(',')\n        return parseChunks(chunks, {id})\n      })\n\n      return [\n        firstSibling,\n        ...restOfSiblings.map((sibling) => ({\n          ...firstSibling,\n          ...sibling,\n          id: sibling.id || firstSibling.id,\n          params: {...omit(firstSibling.params, exclusiveParams), ...sibling.params},\n          payload: sibling.payload || firstSibling.payload,\n        })),\n      ]\n    })\n    .filter((group) => group.length > 0)\n}\n\nfunction parseOldPanesSegment(str: string): RouterPanes {\n  const chunks: RouterPaneGroup = []\n\n  let buffer = str\n  while (buffer.length) {\n    const [match, id, payloadChunk] = buffer.match(panePattern) || []\n    if (!match) {\n      buffer = buffer.slice(1)\n      continue\n    }\n\n    const payload = payloadChunk && tryParsePayload(payloadChunk)\n    chunks.push({id, payload})\n\n    buffer = buffer.slice(match.length)\n  }\n\n  return [chunks]\n}\n\nfunction tryParsePayload(json: string) {\n  try {\n    return JSON.parse(json)\n  } catch (err) {\n    console.warn(`Failed to parse parameters: ${err.message}`)\n    return undefined\n  }\n}\n\nfunction tryParseBase64Payload(data: string): unknown {\n  try {\n    return data ? decodeJsonParams(data) : undefined\n  } catch (err) {\n    console.warn(`Failed to parse parameters: ${err.message}`)\n    return undefined\n  }\n}\n","import {MasterDetailIcon} from '@sanity/icons'\nimport {lazy} from 'react'\nimport {definePlugin} from 'sanity'\n\nimport {\n  DeleteAction,\n  DiscardChangesAction,\n  DuplicateAction,\n  HistoryRestoreAction,\n  PublishAction,\n  UnpublishAction,\n} from './documentActions'\nimport {LiveEditBadge} from './documentBadges'\nimport {getIntentState} from './getIntentState'\nimport {structureUsEnglishLocaleBundle} from './i18n'\nimport {changesInspector} from './panes/document/inspectors/changes'\nimport {validationInspector} from './panes/document/inspectors/validation'\nimport {router} from './router'\nimport {type StructureToolOptions} from './types'\n\nconst documentActions = [\n  PublishAction,\n  UnpublishAction,\n  DiscardChangesAction,\n  DuplicateAction,\n  DeleteAction,\n  HistoryRestoreAction,\n]\n\nconst documentBadges = [LiveEditBadge]\n\nconst inspectors = [validationInspector, changesInspector]\n\n/**\n * The structureTool is a studio plugin which adds the “structure tool” – a tool within\n * Sanity Studio in which content editors can drill down to specific documents to edit them.\n * You can configure your Studio's structure tool(s).\n *\n * @public\n * @param options - Options for the structure tool. See {@link StructureToolOptions}\n * @example Minimal example\n * ```ts\n * // sanity.config.ts\n * import { defineConfig } from 'sanity'\n * import { structureTool } from 'sanity/structure'\n *\n * export default defineConfig((\n *  // ...\n *  plugins: [\n *    structureTool() // use defaults\n *  ]\n * })\n * ```\n *\n * @example To customise your structure tool\n * ```ts\n * // sanity.config.ts\n * import { defineConfig } from 'sanity'\n * import { structureTool } from 'sanity/structure'\n * import { FaCar } from 'react-icons'\n\n * export default defineConfig((\n *\t // ...\n *   plugins: [\n *    structureTool({\n *      name: 'cars',\n *      title: 'Cars',\n *      icon: FaCar,\n *      structure: (S) => S.documentTypeList('car'),\n *      defaultDocumentNode: (S) =>\n *        S.document().views([\n *          S.view.form(),\n *          S.view.component(Preview).title('Preview')\n *        ])\n *    })\n *  ]\n * })\n * ```\n * */\nexport const structureTool = definePlugin<StructureToolOptions | void>((options) => {\n  const icon = options?.icon || MasterDetailIcon\n\n  return {\n    name: 'sanity/structure',\n    document: {\n      actions: (prevActions) => {\n        // NOTE: since it's possible to have several structure tools in one Studio,\n        // we need to check whether the document actions already exist in the Studio config\n        return Array.from(new Set([...prevActions, ...documentActions]))\n      },\n      badges: (prevBadges) => {\n        // NOTE: since it's possible to have several structure tools in one Studio,\n        // we need to check whether the document badges already exist in the Studio config\n        return Array.from(new Set([...prevBadges, ...documentBadges]))\n      },\n      inspectors: (prevInspectors) => {\n        // NOTE: since it's possible to have several structure tools in one Studio,\n        // we need to check whether the inspectors already exist in the Studio config\n        return Array.from(new Set([...prevInspectors, ...inspectors]))\n      },\n    },\n\n    tools: [\n      {\n        name: options?.name || 'structure',\n        title: options?.title || 'Structure',\n        icon,\n        component: lazy(() => import('./components/structureTool')),\n        canHandleIntent: (intent, params) => {\n          if (intent === 'create') return canHandleCreateIntent(params)\n          if (intent === 'edit') return canHandleEditIntent(params)\n          return false\n        },\n        getIntentState,\n        // Controlled by sanity/src/structure/components/structureTool/StructureTitle.tsx\n        controlsDocumentTitle: true,\n        options,\n        router,\n        __internalApplicationType: 'sanity/structure',\n      },\n    ],\n\n    i18n: {\n      bundles: [structureUsEnglishLocaleBundle],\n    },\n  }\n})\n\nfunction canHandleCreateIntent(params: Record<string, unknown>) {\n  // We can't handle create intents without a `type` parameter\n  if (!('type' in params)) {\n    return false\n  }\n\n  // We can handle any create intent as long as it has a `type` parameter,\n  // but we also know how to deal with templates, where other tools might not\n  return 'template' in params ? {template: true} : true\n}\n\nfunction canHandleEditIntent(params: Record<string, unknown>) {\n  // We can't handle edit intents without an `id` parameter\n  if (!('id' in params)) {\n    return false\n  }\n\n  // We can handle any edit intent with a document ID, but we're best at `structure` mode\n  // This ensures that other tools that can handle modes such as `presentation` or `batch`\n  // can take precedence over the structure tool\n  return 'mode' in params ? {mode: params.mode === 'structure'} : true\n}\n"],"names":["useCreatePathSyncChannel","$","_c","t0","Symbol","for","Subject","DIFF_VIEW_SEARCH_PARAMETER","DIFF_VIEW_PREVIOUS_DOCUMENT_SEARCH_PARAMETER","DIFF_VIEW_NEXT_DOCUMENT_SEARCH_PARAMETER","DIFF_SEARCH_PARAM_DELIMITER","useDiffViewRouter","navigate","state","routerState","useRouter","t1","mode","previousDocument","nextDocument","next","fromPairs","_searchParams","type","id","join","toPairs","navigateDiffView","filter","_temp","exitDiffView","t2","key","includes","diffViewModes","isDiffViewMode","maybeDiffViewMode","useDiffViewState","onParamsError","searchParams","URLSearchParams","get","anyParamSet","some","param","params","useMemo","parseParams","useEffect","result","errors","isActive","previousDocumentType","previousDocumentId","split","Boolean","nextDocumentType","nextDocumentId","push","length","documents","previous","useScrollMirror","elements","existentElements","scrollMirror","ScrollMirror","destroy","element","findRelease","documentId","releases","isPublishedId","isDraftId","find","_id","getReleaseIdFromReleaseDocumentId","getVersionFromId","VersionModeHeaderLayout","styled","header","VersionModeHeaderLayoutSection","div","VersionModeHeader","t","useTranslation","structureLocaleNamespace","data","documentVersions","useDocumentVersions","activeReleases","useActiveReleases","releasesIds","flatMap","release","releaseId","onSelectPreviousRelease","useCallback","selectedDocumentId","onSelectNextRelease","justifySelf","CloseIcon","VersionMenu","onSelectRelease","role","document","published","draft","useEditState","getPublishedId","selected","tStructure","tCore","drafts","enabled","isDraftModelEnabled","useWorkspace","getMenuButtonProps","map","VersionMenuItem","onSelect","isSelected","onClick","getDraftId","getVersionId","tone","getReleaseTone","metadata","title","releaseType","formatRelativeLocalePublishDate","isReleaseScheduledOrScheduling","text","disabled","isReleaseDocument","icon","iconRight","undefined","DialogLayout","pickDocumentLayoutComponent","plugin","components","unstable_layout","usePathSyncChannel","syncChannel","source","t3","t4","pipe","distinctUntilChanged","_temp2","path","state_0","deepEquals","Scroller","DiffViewPaneLayout","Card","Container","UiContainer","DiffViewPane","forwardRef","ref","documentType","scrollElement","compareDocument","containerElement","useRef","portalElement","setPortalElement","useState","boundaryElement","setBoundaryElement","pick","defaultComponent","DocumentLayout","useMiddlewareComponents","isInteractive","onOpenReviewChanges","noop","onSetFocus","isReviewChangesOpen","t5","t6","t7","t8","t9","t10","t11","t12","t13","t14","t15","t16","t17","t18","DiffViewDocument","compareValue","useCompareValue","patchChannel","createPatchChannel","perspective","formState","onChange","onFocus","onBlur","onSetActiveFieldGroup","onSetCollapsedFieldSet","onSetCollapsedPath","collapsedFieldSets","ready","collapsedPaths","schemaType","value","onProgrammaticFocus","documentForm","useDocumentForm","selectedPerspectiveName","perspectiveName","comparisonValue","isLoading","pathSyncChannel","onPathOpen","subscription","subscribe","unsubscribe","focusPath","changed","focused","groups","validation","members","sanitizeBundleName","presence","isVersionId","compareDocumentEditState","bb0","version","bundle","Link","a","EditReferenceLinkComponent","children","_documentId","intent","href","useIntentLink","DiffView","previousPaneElement","setPreviousPaneElement","nextPaneElement","setNextPaneElement","referenceInputOptionsContext","useContext","ReferenceInputOptionsContext","disableNew","diffViewReferenceInputOptionsContext","DiffViewDocumentLayout","toast","useToast","status","description","error","input","PANE_DEBUG","PANE_COLLAPSED_WIDTH","PANE_DEFAULT_MIN_WIDTH","usePaneLayout","pane","PaneLayoutContext","Error","Root","Layer","PaneDivider","resize","dragging","setDragging","event","preventDefault","startX","pageX","handleMouseMove","e","deltaX","handleMouseUp","e_0","window","removeEventListener","addEventListener","handleMouseDown","Pane","props","forwardedRef","currentMaxWidthProp","currentMinWidthProp","maxWidthProp","minWidthProp","restProps","currentMinWidth","currentMaxWidth","flex","minWidth","maxWidth","flexProp","rootElement","setRootElement","collapse","collapsed","layoutCollapsed","expand","expandedElement","mount","panes","p","indexOf","paneIndex","nextPane","isLast","expanded","nextCollapsed","current","useImperativeHandle","refValue","setRef","useLayoutEffect","handleCollapse","handleExpand","index","contextValue","bb1","hidden","divider","Infinity","style","t19","t20","t21","t22","t23","t24","t25","displayName","usePane","PaneContext","PaneContent","as","overflow","padding","toLowerCaseNoSpaces","str","toLocaleLowerCase","replaceAll","MENU_GROUP_POPOVER_PROPS","constrainSize","placement","portal","PaneMenuButtonItem","isAfterGroup","node","getI18nText","useGetI18nText","child","childIndex","child_0","childIndex_0","PaneContextMenuItemResolver","PaneContextMenuItem","reason","tooltipContent","useI18nText","hotkey","CheckmarkIcon","onAction","MenuItem","PaneContextIntentMenuItem","intentLink","handleClick","CONTEXT_MENU_POPOVER_PROPS","nodesHasTone","nodes","PaneContextMenuButton","actionsNodes","useId","hasCritical","hasCaution","nodeIndex","RootCard","PaneFooter","$border","css","Layout","Flex","TitleCard","theme","fg","bg","sanity","color","card","TitleTextSkeleton","TextSkeleton","TitleText","Text","PaneHeader","actions","backButton","border","contentAfter","loading","subActions","tabs","tabIndex","appendTitle","paneElement","paneRect","useElementRect","height","innerHeight","width","layoutStyle","handleTitleClick","handleLayoutClick","showTabsOrSubActions","getDisabledReason","disabledReason","ariaLabel","isDisabled","PaneHeaderActionButton","console","warn","PaneHeaderMenuItemActionButton","hotkeys","content","PaneHeaderActionIntentButton","PaneHeaderMenuGroupActionButton","UnknownIcon","Button","idx","_calcPaneResize","cache","left","right","sum","leftMinWidth","rightMinWidth","leftMaxWidth","Math","min","rightMaxWidth","minDeltaX","rightMinDeltaX","maxDeltaX","leftMaxDeltaX","_deltaX","max","leftW","rightW","leftFlex","rightFlex","_getDOMPath","el","parentElement","Array","from","childNodes","unshift","EMPTY_PATH","_sortElements","WeakMap","set","_sortByElementPath","b","_a","_b","len","i","aIndex","bIndex","sort","createPaneLayoutController","observers","optionsMap","userCollapsedElementSet","Set","rootWidth","resizeDataMap","Map","resizing","add","_notifyObservers","delete","options","original","splice","leftElement","leftIndex","leftOptions","rightElement","rightOptions","offsetWidth","leftResizeData","rightResizeData","nextRootElement","setRootWidth","nextRootWidth","observer","_elements","dataMap","lastElement","collapsedWidth","remaingWidth","userCollapsed","has","sizeCollapsed","resizeData","PaneLayout","onCollapse","onExpand","controller","setState","paneLayout","ErrorPane","paneKey","Delay","ms","setReady","timeoutId","setTimeout","clearTimeout","getWaitMessages","thresholds","messageKey","isDev","message","src","of","merge","threshold","mapTo","delay","DEFAULT_MESSAGE_KEY","Content","LoadingPane","memo","messageProp","resolvedMessage","currentMessage","setCurrentMessage","sub","contentElement","setContentElement","mounted","setMounted","_raf2","DELAY","useDocumentPane","documentPane","DocumentPaneContext","CommentsWrapper","CommentsProviderWrapper","useCommentsEnabled","connectionState","inspector","openInspector","selectedReleaseId","usePerspective","setParams","usePaneRouter","resolveIntentLink","selectedCommentId","comment","paramsRef","commentId","inspect","COMMENTS_INSPECTOR_NAME","location","origin","getCommentLink","handleClearSelectedComment","name","handleOpenCommentsInspector","useStructureTool","structureTool","StructureToolContext","DOCUMENT_PANEL_MIN_WIDTH","DOCUMENT_PANEL_INITIAL_MIN_WIDTH","DOCUMENT_INSPECTOR_MIN_WIDTH","DOCUMENT_INSPECTOR_MAX_WIDTH","EMPTY_PARAMS","INSPECT_ACTION_PREFIX","DEFAULT_MENU_ITEM_GROUPS","HISTORY_INSPECTOR_NAME","VALIDATION_INSPECTOR_NAME","DocumentInspectorMenuItemsResolver","inspectors","onMenuItems","menuItems","setMenuItems","newFieldActions","setMenuItem","prev","InspectorMenuItems","useMenuItem","defineInspectorMenuItemComponent","InspectorMenuItem","menuItem","useUnique","useDocumentTitle","editState","isDeleted","lastRevisionDocument","documentValue","subscribed","prepareForPreview","deletedDocumentPreview","error_0","useValuePreview","IGNORE_OPS","DocumentOperationResults","pushToast","documentPaneValue","documentTitleInfo","titleError","useDocumentOperationEvent","prevEvent","paneRouter","handleOpenDialog","useDocumentLimitsUpsellContext","op","documentTitleBase","slice","documentTitle","cleanupId","isDocumentLimitError","closable","duration","context","Strong","closeCurrentAndAfter","isLiveEditEnabled","liveEdit","hasObsoleteDraft","workspace","draftExists","mustChooseNewDocumentDestination","isSelectedPerspectiveWriteable","isNewDocument","position","zIndex","lineHeight","DocumentInspectorHeader","closeButtonLabel","forwardedAs","onClose","DocumentInspectorPanel","closeInspector","features","handleClose","Component","component","resizablePanes","STRUCTURE_TOOL_NAMESPACE","useStructureToolSetting","namespace","defaultValue","keyValueStore","useKeyValueStore","keyValueStoreKey","getKey","value_0","useObservable","newValue","setKey","VIEW_MODE_PARSED","VIEW_MODE_RAW","VIEW_MODES","lru","LRU","maxSize","isExpanded","keyPath","cached","isArray","isRecord","toggleExpanded","selectElement","sel","getSelection","range","createRange","removeAllRanges","selectNodeContents","addRange","select","currentTarget","maybeSelectAll","keyCode","metaKey","ctrlKey","isDocumentLike","isString","_type","JSONInspectorWrapper","fonts","space","code","family","sizes","fontSize","rem","syntax","property","constant","string","boolean","number","Search","query","target","handleChange","SearchIcon","InspectDialog","onInspectClose","dialogIdPrefix","viewModeId","onViewModeChange","viewMode","setParsedViewMode","setRawViewMode","DocumentTitle","bottom","outline","ignoreCase","JSON","stringify","Banner","Icon","action","rest","paddingY","DeletedDocumentBanners","isDeleting","selectedPerspective","isPublishedPerspective","isDraftPerspective","DeletedDocumentBanner","restore","useDocumentOperation","navigateIntent","execute","handleRestore","ReadOnlyIcon","ArchivedReleaseBanner","DocumentRemoveIcon","DeprecatedDocumentTypeBanner","isDeprecatedSchemaType","deprecated","ErrorOutlineIcon","AskToEditDialogOpened","defineEvent","AskToEditRequestSent","MAX_NOTE_LENGTH","DialogBody","Box","attrs","align","direction","justify","RequestPermissionDialog","onRequestSubmitted","telemtry","useTelemetry","dialogId","projectId","useProjectId","apiVersion","client","useClient","zOffset","useZIndex","isSubmitting","setIsSubmitting","note","setNote","msgError","setMsgError","hasTooManyRequests","setHasTooManyRequests","hasBeenDenied","setHasBeenDenied","adminRole","observable","roles","request","url","startWith","catchError","requestedRole","method","body","requestUrl","then","log","catch","err","statusCode","response","errMessage","finally","onSubmit","fullscreen","cancelButton","confirmButton","role_0","appliesToUsers","LOADING_STATE","EMPTY_STATE","DECLINED_STATE","PENDING_STATE","EXPIRED_STATE","useRoleRequestsStatus","checkRoleRequests","checkRoleRequests$","tag","requests","projectRequests","resourceId","declinedRequest","isAfter","addWeeks","Date","createdAt","isBefore","InsufficientPermissionBanner","requiredPermission","currentUser","useCurrentUser","roleRequestStatus","requestStatusLoading","requestStatusError","requestSent","setRequestSent","requestPending","currentUserRoles","isOnlyViewer","showRequestPermissionDialog","setShowRequestPermissionDialog","listFormat","useListFormat","telemetry","roleTitles","formatToParts","Roles","count","part","ReferenceChangedBanner","documentPreviewStore","useDocumentPreviewStore","groupIndex","routerPanesState","replaceCurrent","BackLink","routerReferenceId","parentSibling","parentId","hasHistoryOpen","rev","parentRefPath","pathFromString","referenceInfoObservable","parentRefPathSegment","publishedId","keyedSegmentIndex","findIndex","concat","unstable_observePathsDocumentPair","debounceTime","availability","pathGet","snapshot","_ref","referenceInfo","handleReloadReference","available","SyncIcon","WarningOutlineIcon","ScheduledDraftOverrideBanner","PaneRouterContext","ArchivedReleaseDocumentBanner","archivedReleases","useArchivedReleases","handleGoBack","historyEvent","since","historyVersion","r","isCardinalityOneRelease","VersionBadge","getVersionInlineBadge","archivedRelease","Image","img","CANVAS_IMAGE_URL","CANVAS_APP_NAME","CanvasPopoverContent","useClickOutsideEvent","LaunchIcon","CanvasLinkedBannerContent","open","setOpen","documentVariantType","getDocumentVariantType","variantText","togglePopover","InfoOutlineIcon","CanvasLinkedBanner","displayed","companionDoc","useCanvasCompanionDoc","navigateToCanvas","useNavigateToCanvasDoc","canvasDocumentId","ChooseNewDocumentDestinationBanner","isPerspectiveWriteable","menuItemProps","CreateLinkedBanner","documentLinkedBannerContent","CreateLinkedBannerContent","useSanityCreateConfig","getSanityCreateLinkMetadata","createLinkMetadata","TOAST_DELAY","DocumentNotInReleaseBanner","currentRelease","isScheduledRelease","LATEST","createVersion","useVersionOperations","versionCreateState","setVersionCreateState","handleAddToRelease","lastUpdate","now","useCurrentTime","useConditionalToast","getTime","updateIntervalMs","currentTime","setCurrentTime","intervalId","setInterval","clearInterval","ResolvedLiveEdit","ObsoleteDraftBanner","i18nKey","isEditBlocking","isPublishing","setPublishing","isDiscarding","setDiscarding","publish","discardChanges","liveEditResolveType","handlePublish","handleDiscard","diffViewRouter","compareDraft","OpenReleaseToEditBanner","isPinnedDraftOrPublished","onlyHasVersions","useOnlyHasVersions","OpenReleaseToEditBannerInner","setPerspective","useSetPerspective","currentVersion","documentVersionsTitleList","handleGoToEdit","RevisionNotFoundBanner","revisionNotFound","ScheduledReleaseBanner","date","LockIcon","UnpublishedDocumentBanner","isCurrentVersionGoingToUnpublish","isGoingToUnpublish","UnpublishIcon","TitleContainer","Stack","heading","FormHeader","isSingleton","__experimental_formPreviewTitle","ev","FormView","margins","fieldActions","openPath","documentStore","useDocumentStore","useDocumentPresence","isLocked","transactionSyncLock","pair","documentEvents","tap","prepareMutationEvent","prepareRebaseEvent","hasRev","_rev","patches","handleInitialValue","useEffectEvent","formRef","setFormRef","focusedFirstDescendant","setFocusedFirstDescendant","focusFirstDescendant","isReadOnly","readOnly","mutations","mut","patch","fromMutationPatches","remotePatches","remoteMutations","localPatches","localMutations","DocumentHeaderTabs","activeViewId","views","tabPanelId","view","DocumentHeaderTab","label","viewId","setView","DocumentHeaderTitle","FavoriteToggle","documentExists","isFavorited","isReady","favorite","unfavorite","useManageFavorite","DocumentPanelSubHeader","activeWorkspace","useActiveWorkspace","publishedDocId","showTabs","showBackButton","ArrowLeftIcon","dataset","favoriteToggle","DocumentBox","ScrollContainer","$disabled","DocumentPanel","footerHeight","headerHeight","isInspectOpen","setDocumentPanelPortalElement","footer","permissions","isPermissionsLoading","isSanityCreateLinked","showCreateBanner","parentPortal","usePortal","_portalElement","documentScrollElement","setDocumentScrollElement","formContainerElement","_createdAt","activeView","splitPanes","formViewHidden","ActiveViewComponent","historical","activeViewNode","scrollTo","inspectDialog","showInspector","filteredReleases","useFilteredReleases","documentInScheduledRelease","hasCardinalityOneReleases","currentReleases","isSystemBundle","isPinnedDraftOrPublish","displayedHasObsoleteDraft","granted","t26","banners","portalElements","showFormView","isMenuNodeButton","renderAsButton","isNotMenuNodeButton","negate","resolveMenuNodes","menuItemGroups","keyOffset","mapFieldActionToPaneMenuNode","itemGroup","g","i18n","ungroupedItems","item","group","shortcut","actionHandler","showAsAction","childIdx","_DEBUG","Object","freeze","LOADING_PANE","DOCUMENT_PANEL_PORTAL_ELEMENT","POPOVER_FALLBACK_PLACEMENTS","DIALOG_WIDTH_TO_UI_WIDTH","small","medium","large","full","ConfirmDialog","dialog","referenceElement","cancelButtonIcon","cancelButtonText","confirmButtonIcon","confirmButtonText","onCancel","onConfirm","ModalDialog","showCloseButton","Dialog","PopoverDialog","Popover","PopoverDialogContent","isTopLayer","useLayer","useGlobalKeyDown","DocumentActionPortalProvider","ActionStateDialog","modalId","unknownModal","ActionDialogWrapper","actionStates","actionIndex","setActionIndex","currentAction","handleAction","ActionMenuButton","idPrefix","setReferenceElement","preventOverflow","popoverProps","actionState","renderActionDialog","ActionMenuListItem","onHandle","String","replace","tooltipProps","s","toUpperCase","DISABLED_REASON_TITLE_KEY","NOTHING_TO_DELETE","NOT_READY","DeleteAction","onComplete","setIsDeleting","paneSetIsDeleting","deleteOp","isConfirmDialogOpen","setConfirmDialogOpen","handleCancel","handleConfirm","handle","permission","useDocumentPairPermissions","TrashIcon","ConfirmDeleteDialog","DISABLED_REASON_KEY","NO_CHANGES","NOT_PUBLISHED","DiscardChangesAction","isPublished","ResetIcon","NOTHING_TO_DUPLICATE","DuplicateAction","mapDocument","duplicate","isDuplicating","setDuplicating","dupeId","uuid","duplicateSuccess","firstValueFrom","operationEvents","CopyIcon","HistoryRestoreAction","revision","isRevisionInitial","isRevisionLatest","RevertIcon","DocumentPublished","LIVE_EDIT_ENABLED","ALREADY_PUBLISHED","PUBLISHED_STATE","publishedAt","AlreadyPublished","useTemporalPhrase","timeSincePublished","useRelativeTime","PublishAction","publishState","setPublishState","validationStatus","useValidationStatus","syncState","useSyncState","changesOpen","isValidationErrorMarker","hasValidationErrors","publishScheduled","setPublishScheduled","isSyncing","isValidating","_updatedAt","currentPublishRevision","publishRevision","doPublish","validationComplete","didPublish","nextState","timer","publishedImmediately","previouslyPublished","PublishIcon","UnpublishAction","unpublish","isDraft","DocumentStatusBarActionsInner","states","__internal_tasks","useSource","showingRevision","firstActionState","menuActionStates","buttonElement","setButtonElement","marginTop","marginBottom","isSanityDefinedAction","showFirstActionButton","sideMenuItems","footerAction","DocumentStatusBarActions","allActions","isInitialValueLoading","initialValueResolved","actionProps","renderDocumentStatusBarActions","HistoryStatusBarActions","revisionId","isRestoreAction","historyActions","toLowerCase","useChipScrollPosition","containerRef","showGradient","setShowGradient","checkOverflow","container","scrollWidth","clientWidth","scrollLeft","isAtEnd","setupObservers","container_0","intersectionObserver","mutationObserver","IntersectionObserver","entries","entry","isIntersecting","updateLastChipObserver","disconnect","lastChip","observe","MutationObserver","childList","subtree","intersectionObserver_0","mutationObserver_0","TooltipContent","intendedPublishAt","DATE_TIME_FORMAT","dateStyle","timeStyle","DocumentPerspectiveList","dateTimeFormat","useDateTimeFormat","schema","useSchema","isCreatingDocument","handlePerspectiveChange","isLiveEdit","isPublishedChipDisabled","getReleaseChipState","isReleaseHistoryMatch","isPublishSelected","isDraftSelected","displayedId","isDraftDisabled","format","menuReleaseId","notCurrentReleases","releasesLoading","fromRelease","isVersion","inCreation","releaseState","HorizontalScroller","getTheme_v2","$showGradient","rgba","DocumentPanelHeader","_props","onMenuAction","onPaneClose","onPaneSplit","unstable_languageFilter","hasGroupSiblings","useFieldActions","scrollContainerRef","menuNodes","menuButtonNodes","contextMenuNodes","showSplitPaneButton","splitViews","showSplitPaneCloseButton","showPaneGroupCloseButton","renderPaneActions","renderedActions","LanguageFilterComponent","SplitVerticalIcon","DocumentPanelHeaderActionDialogDeferred","useDeferredValue","DocumentPanelHeaderActionDialog","SpacerButton","size","pointerEvents","visibility","BADGE_TONES","primary","success","warning","danger","DocumentBadgesInner","DocumentBadgesDeferred","DocumentBadges","badges","renderDocumentBadges","badge","whiteSpace","TIMELINE_ICON_COMPONENTS","create","AddIcon","discardDraft","initial","editDraft","EditIcon","editLive","getTimelineEventIconComponent","hideScrollbarOnExpand","listWrapper","getElementById","TIMELINE_LIST_WRAPPER_ID","firstChildren","scrollHeight","clientHeight","currentStyle","getComputedStyle","overflowY","FlipIcon","ChevronLeftIcon","ExpandableTimelineItemButton","stopPropagation","handleExpandClick","StackWrapper","ListWrapper","$maxHeight","$visible","TIMELINE_ITEM_I18N_KEY_MAPPING","UserAvatarStack","maxLength","userIds","withTooltip","userId","IconBox","$color","avatar","TIMELINE_ITEM_EVENT_TONE","withinSelection","RELATIVE_TIME_OPTIONS","minimal","NameSkeleton","Skeleton","font","UserLine","user","useUser","collaborators","TimelineItem","chunk","optionsMenu","endTimestamp","timestamp","IconComponent","authors","authorUserIds","collaboratorsUsersIds","isSelectable","dateFormat","updatedTimeAgo","parsedDate","formattedTimestamp","evt","isNonPublishChunk","isPublishChunk","getPreviousPublishAction","chunks","previousPublish","addChunksMetadata","forEach","Timeline","hasMoreChunks","lastChunk","selectedChunk","onLoadMore","listMaxHeight","selectedChunkId","chunksWithMetadata","expandedParents","setExpandedParents","filteredChunks","handleExpandParent","selectedIndex","handleSelectChunk","timelineChunk","c","renderItem","activeIndex","TimelineError","versionError","TIMELINE_MENU_PORTAL","TimelineMenu","setTimelineRange","timelineError","timelineStore","button","setButton","popoverRef","setPopoverRef","useTimelineSelector","realRevChunk","sinceTime","handleOpen","handleGlobalKeyDown","focus","selectRev","revChunk","sinceId","revId","findRangeForRev","selectSince","sinceChunk","findRangeForSince","handleLoadMore","loadMore","formatParams","revLabel","sinceLabel","buttonLabel","ChevronDownIcon","StyledMotionPath","motion","Circle","Arrows","Checkmark","rotateAnimation","keyframes","RotateGroup","root","syncing","scale","transition","saved","changes","circle","strokeDasharray","strokeDashoffset","opacity","arrows","checkmark","pathLength","AnimatedStatusIcon","STATUS_DICTIONARY","DocumentStatusPulse","currentStatus","MotionButton","MotionBox","ButtonSkeleton","margin","DocumentStatusButton","author","translationKey","onHistoryOpen","onHistoryClose","relativeTime","FallbackStatus","createDocumentVersion","editDocumentVersion","EventsStatus","events","useEvents","TimelineStatus","TIMELINE_ITEM_I18N_KEY_MAPPING_LEGACY","SYNCING_TIMEOUT","SAVED_TIMEOUT","DocumentStatusLine","setStatus","eventsEnabled","beta","eventsAPI","lastUpdated","timerId","timerId_0","StatusText","RevisionStatusLine","useResizeObserver","onResize","resizeObserver","unobserve","CONTAINER_BREAKPOINT","AnimatedCard","DocumentStatusBar","actionsBoxRef","onDocumentChange","CreateLinkedActions","documentLinkedActions","setCollapsed","contentRect","handleResize","shouldRender","flexShrink","marginLeft","KeyboardShortcutResponder","actionsBoxElement","onActionStart","onKeyDown","rootRef","As","activeAction","matchingStates","isHotkey","matchingState","handleKeyDown","DocumentActionShortcuts","setActiveIndex","renderDocumentActionShortcuts","getInspectorItems","currentInspector","hasValue","inspectorMenuItems","getInspectItem","JsonIcon","getCompareVersionsItem","documentIdStack","previousId","TransferIcon","getProductionPreviewItem","previewUrl","EarthAmericasIcon","getMenuItems","inspectorItems","items","LinkIcon","DocumentLayoutError","DIALOG_PROVIDER_POSITION","DocumentLayoutFooter","documentPanelPortalElement","setFooterElement","setActionsBoxElement","zOffsets","EMPTY_ARRAY","StyledChangeConnectorRoot","ChangeConnectorRoot","inspectOpen","paneParams","footerElement","headerElement","setHeaderElement","useGlobalCopyPasteElementHandler","setInspectorMenuItems","rootFieldActionNodes","setRootFieldActionNodes","footerRect","headerRect","useDocumentIdStack","handleKeyUp","onConnectorSetFocus","paneDialog","changesInspectorTab","useDocumentLayoutComponent","useDocumentLastRev","historyStore","useHistoryStore","setLastRevisionDocument","setLoading","useTimelineStore","lastNonDeletedRevId","getDocumentAtRevision","DocumentURLCopied","getInitialValueTemplateOpts","templates","opts","payload","panePayload","structureNodeTemplate","templateName","urlTemplate","template","typeTemplates","templateParams","useDocumentPaneInitialValue","paneOptions","useTemplates","templateParameters","initialValueRaw","useInitialValue","useDocumentPaneInspector","inspectorsResolver","inspectorName","setInspectorName","inspectParamRef","historyInspector","closeInspectorName","nextInspectorName","nextInspector","currentParams","onOpen","handleHistoryClose","handleHistoryOpen","reviewChanges","toggleLegacyInspect","toggle","handleLegacyInspectClose","handleInspectorAction","isSanityDocument","usePreviewUrl","resolveProductionUrl","BehaviorSubject","subject","asObservable","switchMap","DocumentPaneProvider","onFocusPath","forcedVersion","store","timelineReady","revisionDocument","onOlderRevision","sinceDocument","isPristine","setDocumentMeta","useCopyPaste","documentActions","documentBadges","unstable_fieldActions","fieldActionsResolver","languageFilterResolver","draftsEnabled","setPaneParams","viewsProp","documentIdRaw","buildStudioUrl","useStudioUrl","initialValue","getIsDeleted","getComparisonValue","upstreamEditState","upstream","getIsReadOnly","getDisplayed","formReady","formStateRef","initialFocusPath","getFormDocumentValue","getDocumentVersionType","releaseDocument","actionsPerspective","documentActionsProps","versionType","languageFilter","strict","newSince","newRev","handlePaneClose","closeCurrent","handlePaneSplit","duplicateCurrent","handleMenuAction","navigator","copyUrl","coreUi","clipboard","writeText","startsWith","currentDisplayed","pathRef","restParams","pathFromUrl","resolveKeyedPath","DocumentEventsPane","usePaneOptions","showingPublishedOnDraft","eventsStore","useEventsStore","sinceRevision","historyStoreProps","isDeleteDocumentGroupEvent","isDeleteDocumentVersionEvent","DocumentPaneWithLegacyTimelineStore","setTimelineError","onError","revTime","sinceAttributes","_temp3","timelineDisplayed","_temp4","_temp5","_temp6","_temp7","state_1","state_2","state_3","state_4","state_5","DocumentPerspectiveResetHandler","rawContext","RawPerspectiveContext","documentVersionsLoading","isCardinalityOnePerspective","DocumentPerspectiveProvider","mappedContext","PerspectiveContext","defaultPerspective","PUBLISHED","DocumentPaneProviderWrapper","itemId","useResetHistoryParams","isMounted","_perspective","preserveRev","updateHistoryParams","DocumentPane","parentSourceName","DocumentPaneInner","resolveNewDocumentOptions","isLoaded","isDocumentLoaded","useDocumentType","templateItems","templatePermissions","isTemplatePermissionsLoading","useTemplatePermissions","mergeDocumentType","providerProps","ReferenceChildLink","handleEditReference","childParams","routerPanesStateLength","activePath","Code","ChildLink","childId","childParameters","childPayload","ParameterizedLink","currentPanes","siblingIndex","nextParams","nextPayload","currentGroup","currentSibling","nextSibling","nextGroup","pathToString","emptyArray","PaneRouterProvider","flatIndex","resolvePathFromState","useRouterState","routerPaneGroups","lastPane","modifier","currentItem","nextPanes","createNextRouterState","modifier_0","nextRouterState_0","nextRouterState","modifyCurrentGroup","nextRouterState_1","siblings","createPathWithParams","siblings_0","item_0","setPayload","nextParams_0","siblings_1","item_1","siblings_3","item_3","duplicatedItem","omit","groupLength","ctx","siblings_2","item_2","sibling","UnknownPane","paneMap","lazy","documentList","list","StructureToolPane","active","childItemId","PaneComponent","prevParams","prevPayload","isEqual","keys","DocTitle","ChevronWrapper","CrossDatasetReferencesDetails","details","CrossDatasetReferencesSummary","summary","Table","table","DocumentIdFlex","OtherReferenceCount","difference","totalCount","references","PaneItemPreview","layout","versionsInfo","useDocumentVersionInfo","perspectiveStack","getPreviewStateObservable","previewStateObservable","previewIsLoading","versions","tooltip","getPreviewValueWithFallback","fallback","ReferencePreviewLink","documentPresence","linkProps","ConfirmDeleteDialogBody","crossDatasetReferences","internalReferences","datasetNames","hasUnknownDatasetNames","onReferenceLinkClick","renderPreviewItem","normalizedDatasetNames","datasets","datasetSubtitle","borderTop","documentCount","datasetName","reference","isClientError","POLL_INTERVAL","visiblePoll$","getVisiblePoll$","fromEvent","visibilityState","visible","EMPTY","shareReplay","refCount","bufferSize","getDocumentExistence","versionedClient","draftId","requestOptions","uri","getDataUrl","json","excludeContent","omitted","nonExistant","doc","fetchCrossDatasetReferences","checkDocumentId","currentDataset","config","useInternalReferences","createHookFromObservableFactory","listenQuery","fetch","listen","transitions","throttleTime","useCrossDatasetReferences","useReferringDocuments","DEFAULT_STUDIO_CLIENT_OPTIONS","isInternalReferencesLoading","isCrossDatasetReferencesLoading","projectIds","crossDatasetReference_1","crossDatasetReference","crossDatasetReference_0","LoadingContainer","showConfirmButton","ConfirmDeleteDialogContainer","setError","handleRetry","IntentButton","linkRef","InsufficientPermissionsMessageTooltip","reveal","POPOVER_PROPS","getIntent","typeName","templateId","baseParams","initialDocumentId","parameters","PaneHeaderCreateButton","nothingGranted","every","reduce","permissionsById","firstItem","itemIndex","disabled_0","intent_0","acc","permission_0","isNonNullable","hashObject","sortObject","v","keyA","keyB","localeCompare","parse","PaneHeaderActions","initialValueTemplateItems","initialValueTemplateItemsFromStructure","actionHandlers","EMPTY_OBJECT","handler","actionNodes","initialValueTemplateItemFromMenuItems","menuItemIndex","intentParams","combinedInitialValueTemplates","uniqBy","MissingSchemaType","getIconWithFallback","defaultIcon","PaneItem","pressed","hasSchemaType","clicked","setClicked","DocumentIcon","FolderIcon","preview","preloading","setPreload","timeoutRef","startTransition","handleMouseEnter","handleMouseLeave","PreloadDocumentPane","RenderActionCollectionState","onActionComplete","liveEditSchemaType","SUPPORTED_LINKED_TO_CANVAS_ACTIONS","ActionsGuardWrapper","isLinked","RenderBadgeCollectionState","badgeProps","PARTIAL_PAGE_LIMIT","FULL_LIST_LIMIT","DEFAULT_ORDERING","by","field","EMPTY_RECORD","RootBox","$opacity","CommandListBox","SKELETON_ITEMS","LoadingView","num","DocumentListPaneContent","isRetrying","autoRetry","filterIsSimpleTypeConstraint","hasMaxItems","hasSearchQuery","isLazyLoading","muted","isConnected","retryCount","canRetry","loadingVariant","onEndReached","onRetry","paneTitle","searchInputElement","showIcons","setShouldRender","handleEndReached","isLastItem","showSpinner","showMaxItemsMessage","limit","noDocumentsContent","isOnline","onLine","mainContent","removePublishedWithDrafts","collate","hasDraft","hasPublished","applyOrderingFunctions","order","orderBy","mapWith","fieldType","tryResolveSchemaTypeForPath","fieldExtendsType","jsonType","baseType","pathSegments","PathUtils","fromString","segment","getFieldTypeByName","isKeySegment","isIndexSegment","memberType","otherType","isReferenceSchemaType","refType","otherRefType","to","fieldName","fields","ofType","findTypes","base","types","isSplat","findStaticTypesInFilter","swr","createSWR","listenSearchQuery","groqFilter","searchQuery","staticTypeNames","maxFieldDepth","searchStrategy","sortBy","extendedProjection","events$","defer","includeAllVersions","includeResult","mergeMap","isFirst","throwError","share","welcome$","mutationAndReconnect$","partition","swrKey","fiilter","asyncScheduler","leading","trailing","exhaustMapWithTrailing","typeNames","getSearchableTypes","getExtendedProjection","search","createSearch","strategy","maxDepth","doFetch","__unstable_extendedProjection","comments","skipSortByScore","hits","hit","scan","connected","fromCache","INITIAL_QUERY_STATE","isLoadingFullList","isRetriableError","ChannelError","ServerError","ClientError","useDocumentList","searchFilter","paramsProp","sortOrder","useSearchMaxFieldDepth","typeNameFromFilter","onRetry$","observableCallback","onFetchFullList$","onLoadFullList","queryResults$","listenSearchQueryArgs","partialList$","fullList$","withLatestFrom","take","takeUntil","catchWithCount","lastError","caught$","safeError","retries","NEVER","retrying","nonErrorThrownWarning","thrown","rotate","fadeIn","AnimatedSpinnerIcon","SpinnerIcon","SubtleSpinnerIcon","DelayedSubtleSpinnerIcon","DocumentListPane","sortOrderRaw","displayOptions","useShallowUnique","staticTypes","setSearchQuery","searchInputValue","setSearchInputValue","setSearchInputElement","sortWithOrderingFn","documentListIsLoading","trim","handleQueryChange","useObservableEvent","event$","debounce","handleClearSearch","handleSearchKeyDown","enableSearchSpinner","setEnableSearchSpinner","textInputIcon","useReconnectingToast","initialValueTemplates","setLayout","setSortOrder","StructurePaneHeader","DocumentSheetListSelect","row","selectedAnchor","setSelectedAnchor","meta","handleOnClick","shiftKey","shiftClickIndex","lowerIndex","upperIndex","additionalSelectedRows","getRowModel","flatRows","currentSelectedRows","getSelectedRowModel","rows","setRowSelection","nextSelectedRows","rowId","isRowCurrentlySelected","getIsSelected","toggleSelected","paddingLeft","getCanSelect","useDocumentSheetListContext","DocumentSheetListContext","DocumentSheetListProvider","selectedAnchorCellDetails","setSelectedAnchorCellDetails","selectedRangeCellIndexes","setSelectedRangeCellIndexes","clearAndSetFocusSelection","nextAnchorDetails","activeElement","HTMLElement","blur","resetFocusSelection","changeSelectionColumn","visibleColumns","getVisibleLeafColumns","columnIndexAfterMove","col","colId","rowIndex","changeSelectionRange","previousSelection","anchorIndex","getNextIndex","startingIndex","firstSelectedIndex","lastIndexSelected","nextIndex","setSelectedAnchorCell","handleEscapePress","nextAnchorCellDetails","handleUpDownKey","isShiftKey","offset","newSelectedCellRowIndex","handleAnchorKeydown","handleAnchorClick","contains","focusAnchorCell","anchorCellDetails","getStateByCellId","submitFocusedCell","DataCell","td","PinnedDataCell","SheetListCellInner","getValue","column","cellId","renderValue","setRenderValue","isDirty","setIsDirty","inputRef","cellState","handleOnFocus","patchDocument","handleProgrammaticFocus","HTMLInputElement","handleOnMouseDown","detail","handleOnEnterDown","handleOnChange","handleOnBlur","handlePaste","clipboardData","getData","handleCopy","toString","getBorderStyle","inputProps","boxShadow","SheetListCell","cell","isPinned","getIsPinned","Cell","borderWidth","getIsLastColumn","getStart","borderRight","getSize","flexRender","columnDef","getContext","VISIBLE_COLUMN_LIMIT","PreviewCell","displayValue","columnHelper","createColumnHelper","SUPPORTED_FIELDS","getColsFromSchemaType","parentalField","tableColumns","nextCol","accessor","enableHiding","info","isObjectSchemaType","columns","isAccessorKeyColumnDef","isGroupColumnDef","flatColumns","cols","useDocumentSheetColumns","documentSchemaType","display","getIsSomeRowsSelected","getToggleAllPageRowsSelectedHandler","initialColumnsVisibility","accCols","countAllowedVisible","visibilityKey","ColumnsControl","isVisibleLimitReached","getCanHide","setInitialColumns","resetColumnVisibility","handleColumnOnChange","toggleVisibility","getColumnVisibilityDisabled","isColumnVisible","getIsVisible","isSingleColumnVisible","maxHeight","getAllLeafColumns","SearchContainer","DocumentSheetListFilter","useSearchState","filtersVisible","Header","th","PinnedHeader","HoverMenu","DocumentSheetListHeader","headerGroup","headerTitle","depth","parent","HeaderTag","canShowHeaderMenu","boxSizing","EllipsisHorizontalIcon","DocumentSheetListPaginator","setPageIndex","getCanPreviousPage","DoubleChevronLeftIcon","previousPage","getState","pagination","pageIndex","getPageCount","nextPage","getCanNextPage","ChevronRightIcon","DoubleChevronRightIcon","pageSize","setPageSize","Number","createDocumentsSet","documentsReducer","nextDocumentResult","_","restDocuments","updatedDocument","LISTEN_OPTIONS","useDocumentSheetListStore","QUERY","dispatch","useReducer","setIsLoading","res","initialFetch","handleListenerEvent","err_0","listener$","uniques","values","dataAsArray","useDocumentSheetList","h","PaneContainer","TableContainer","DocumentSheetListPaneInner","totalRows","useReactTable","getCoreRowModel","getFilteredRowModel","getPaginationRowModel","autoResetPageIndex","initialState","columnPinning","columnVisibility","getRowId","fieldId","renderRow","getVisibleCells","rowsCount","getHeaderGroups","headers","DocumentSheetListPane","schemaTypeName","isDocumentSchemaType","addSelectedStateToMenuItems","setPrevious","shallowEquals","defaultLayout","defaultOrdering","sourceName","defaultSortOrder","menuItemsWithSelectedState","isSheetListLayout","LiveEditBadge","activePanes","setActivePanes","getIntentState","editDocumentId","canHandleIntent","getPaneParams","Grid","ChangesInspector","showChanges","scrollRef","setScrollRef","diff","selectionState","isComparingCurrent","structureT","FieldWrapper","rootDiff","showFromValue","documentContext","getIsSelectable","isUnpublishDocumentEvent","isScheduleDocumentVersionEvent","isUnscheduleDocumentVersionEvent","EventTimelineItem","cursor","PublishedEventMenu","portalContext","versionId","versionRevisionId","handleOpenReleaseDocument","handleOpenDraftDocument","isMenuDisabled","RELEASES_INTENT","textDecoration","children_0","releaseTitle","children_1","fallbackPlacements","children_2","TimelineItemWrapper","CHILDREN_ITEMS_VARIANTS","animate","exit","ITEM_HEIGHT","EventsTimeline","allEvents","hasMoreEvents","selectedEventId","fetchEventChildren","selectedEvent","expandingParents","setExpandingParents","isCreateDocumentVersionEvent","isEditDocumentVersionEvent","isExpanding","renderOptionsMenu","isPublishDocumentVersionEvent","creationEvent","showExpandingLoader","isLastEvent","EventsTimelineMenu","nextCursor","eventsError","findRangeForRevision","loadMoreEvents","expandEvent","revEvent","sinceEvent","SpinnerContainer","DIFF_INITIAL_VALUE","CompareWithPublishedView","diffInput","wrap","EventsInspector","getChangesList","changesList$","diffLoading","diffError","toEvent","sinceEvents","sameRevisionSelected","SameRevisionSelected","EventsSelector","showList","listHeight","setListHeight","getScrollerRef","initialLoad","HistorySelector","FadeInFlex","TABS","isValidTab","tab","ChangesTabs","parentRef","setParentRef","paneRouterTab","setPaneRouterTab","t27","t28","t29","t30","t31","changesInspector","RestoreIcon","getPathTitles","f","itemType","_key","MARKER_ICON","MARKER_TONE","ValidationInspector","isVersionGoingToUnpublish","marker","ValidationCard","errorInfo","setErrorInfo","level","DocumentNodePathBreadcrumbs","pathTitles","Fragment","fontWeight","validationMarkers","hasErrors","isValidationError","hasWarnings","isValidationWarning","isDocumentGoingToUnpublish","CheckmarkCircleIcon","validationInspector","legacyEditParamsToState","decodeURIComponent","encodePanesSegment","encodeChunks","encodeURIComponent","legacyEditParamsToPath","toState","pathSegment","parsePanesSegment","toPath","router","route","intents","transform","panePattern","isParam","test","isPayloadLike","exclusiveParams","isTruthy","parseChunks","tryParseBase64Payload","firstSibling","paneIsFirstSibling","sameAsFirst","encodedPayload","encodeJsonParams","encodedParams","valueFromFirstSibling","flat","parseOldPanesSegment","restOfSiblings","buffer","match","payloadChunk","tryParsePayload","decodeJsonParams","definePlugin","MasterDetailIcon","prevActions","prevBadges","prevInspectors","tools","canHandleCreateIntent","canHandleEditIntent","controlsDocumentTitle","__internalApplicationType","bundles","structureUsEnglishLocaleBundle"],"mappings":"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"}